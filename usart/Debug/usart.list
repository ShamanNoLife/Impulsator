
usart.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00003680  080000c0  080000c0  000100c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000005c  08003740  08003740  00013740  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800379c  0800379c  0002000c  2**0
                  CONTENTS
  4 .ARM          00000008  0800379c  0800379c  0001379c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  080037a4  080037a4  0002000c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080037a4  080037a4  000137a4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080037a8  080037a8  000137a8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000000c  20000000  080037ac  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000024  2000000c  080037b8  0002000c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000030  080037b8  00020030  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  0002000c  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  00020034  2**0
                  CONTENTS, READONLY
 13 .debug_info   0000314d  00000000  00000000  00020077  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000f38  00000000  00000000  000231c4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000003e0  00000000  00000000  00024100  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 000002c5  00000000  00000000  000244e0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00012dab  00000000  00000000  000247a5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00005651  00000000  00000000  00037550  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00074262  00000000  00000000  0003cba1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00000e88  00000000  00000000  000b0e04  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000057  00000000  00000000  000b1c8c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	; (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	; (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	; (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	2000000c 	.word	0x2000000c
 80000e0:	00000000 	.word	0x00000000
 80000e4:	08003728 	.word	0x08003728

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	; (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	; (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	; (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			; (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	20000010 	.word	0x20000010
 8000104:	08003728 	.word	0x08003728

08000108 <__udivsi3>:
 8000108:	2200      	movs	r2, #0
 800010a:	0843      	lsrs	r3, r0, #1
 800010c:	428b      	cmp	r3, r1
 800010e:	d374      	bcc.n	80001fa <__udivsi3+0xf2>
 8000110:	0903      	lsrs	r3, r0, #4
 8000112:	428b      	cmp	r3, r1
 8000114:	d35f      	bcc.n	80001d6 <__udivsi3+0xce>
 8000116:	0a03      	lsrs	r3, r0, #8
 8000118:	428b      	cmp	r3, r1
 800011a:	d344      	bcc.n	80001a6 <__udivsi3+0x9e>
 800011c:	0b03      	lsrs	r3, r0, #12
 800011e:	428b      	cmp	r3, r1
 8000120:	d328      	bcc.n	8000174 <__udivsi3+0x6c>
 8000122:	0c03      	lsrs	r3, r0, #16
 8000124:	428b      	cmp	r3, r1
 8000126:	d30d      	bcc.n	8000144 <__udivsi3+0x3c>
 8000128:	22ff      	movs	r2, #255	; 0xff
 800012a:	0209      	lsls	r1, r1, #8
 800012c:	ba12      	rev	r2, r2
 800012e:	0c03      	lsrs	r3, r0, #16
 8000130:	428b      	cmp	r3, r1
 8000132:	d302      	bcc.n	800013a <__udivsi3+0x32>
 8000134:	1212      	asrs	r2, r2, #8
 8000136:	0209      	lsls	r1, r1, #8
 8000138:	d065      	beq.n	8000206 <__udivsi3+0xfe>
 800013a:	0b03      	lsrs	r3, r0, #12
 800013c:	428b      	cmp	r3, r1
 800013e:	d319      	bcc.n	8000174 <__udivsi3+0x6c>
 8000140:	e000      	b.n	8000144 <__udivsi3+0x3c>
 8000142:	0a09      	lsrs	r1, r1, #8
 8000144:	0bc3      	lsrs	r3, r0, #15
 8000146:	428b      	cmp	r3, r1
 8000148:	d301      	bcc.n	800014e <__udivsi3+0x46>
 800014a:	03cb      	lsls	r3, r1, #15
 800014c:	1ac0      	subs	r0, r0, r3
 800014e:	4152      	adcs	r2, r2
 8000150:	0b83      	lsrs	r3, r0, #14
 8000152:	428b      	cmp	r3, r1
 8000154:	d301      	bcc.n	800015a <__udivsi3+0x52>
 8000156:	038b      	lsls	r3, r1, #14
 8000158:	1ac0      	subs	r0, r0, r3
 800015a:	4152      	adcs	r2, r2
 800015c:	0b43      	lsrs	r3, r0, #13
 800015e:	428b      	cmp	r3, r1
 8000160:	d301      	bcc.n	8000166 <__udivsi3+0x5e>
 8000162:	034b      	lsls	r3, r1, #13
 8000164:	1ac0      	subs	r0, r0, r3
 8000166:	4152      	adcs	r2, r2
 8000168:	0b03      	lsrs	r3, r0, #12
 800016a:	428b      	cmp	r3, r1
 800016c:	d301      	bcc.n	8000172 <__udivsi3+0x6a>
 800016e:	030b      	lsls	r3, r1, #12
 8000170:	1ac0      	subs	r0, r0, r3
 8000172:	4152      	adcs	r2, r2
 8000174:	0ac3      	lsrs	r3, r0, #11
 8000176:	428b      	cmp	r3, r1
 8000178:	d301      	bcc.n	800017e <__udivsi3+0x76>
 800017a:	02cb      	lsls	r3, r1, #11
 800017c:	1ac0      	subs	r0, r0, r3
 800017e:	4152      	adcs	r2, r2
 8000180:	0a83      	lsrs	r3, r0, #10
 8000182:	428b      	cmp	r3, r1
 8000184:	d301      	bcc.n	800018a <__udivsi3+0x82>
 8000186:	028b      	lsls	r3, r1, #10
 8000188:	1ac0      	subs	r0, r0, r3
 800018a:	4152      	adcs	r2, r2
 800018c:	0a43      	lsrs	r3, r0, #9
 800018e:	428b      	cmp	r3, r1
 8000190:	d301      	bcc.n	8000196 <__udivsi3+0x8e>
 8000192:	024b      	lsls	r3, r1, #9
 8000194:	1ac0      	subs	r0, r0, r3
 8000196:	4152      	adcs	r2, r2
 8000198:	0a03      	lsrs	r3, r0, #8
 800019a:	428b      	cmp	r3, r1
 800019c:	d301      	bcc.n	80001a2 <__udivsi3+0x9a>
 800019e:	020b      	lsls	r3, r1, #8
 80001a0:	1ac0      	subs	r0, r0, r3
 80001a2:	4152      	adcs	r2, r2
 80001a4:	d2cd      	bcs.n	8000142 <__udivsi3+0x3a>
 80001a6:	09c3      	lsrs	r3, r0, #7
 80001a8:	428b      	cmp	r3, r1
 80001aa:	d301      	bcc.n	80001b0 <__udivsi3+0xa8>
 80001ac:	01cb      	lsls	r3, r1, #7
 80001ae:	1ac0      	subs	r0, r0, r3
 80001b0:	4152      	adcs	r2, r2
 80001b2:	0983      	lsrs	r3, r0, #6
 80001b4:	428b      	cmp	r3, r1
 80001b6:	d301      	bcc.n	80001bc <__udivsi3+0xb4>
 80001b8:	018b      	lsls	r3, r1, #6
 80001ba:	1ac0      	subs	r0, r0, r3
 80001bc:	4152      	adcs	r2, r2
 80001be:	0943      	lsrs	r3, r0, #5
 80001c0:	428b      	cmp	r3, r1
 80001c2:	d301      	bcc.n	80001c8 <__udivsi3+0xc0>
 80001c4:	014b      	lsls	r3, r1, #5
 80001c6:	1ac0      	subs	r0, r0, r3
 80001c8:	4152      	adcs	r2, r2
 80001ca:	0903      	lsrs	r3, r0, #4
 80001cc:	428b      	cmp	r3, r1
 80001ce:	d301      	bcc.n	80001d4 <__udivsi3+0xcc>
 80001d0:	010b      	lsls	r3, r1, #4
 80001d2:	1ac0      	subs	r0, r0, r3
 80001d4:	4152      	adcs	r2, r2
 80001d6:	08c3      	lsrs	r3, r0, #3
 80001d8:	428b      	cmp	r3, r1
 80001da:	d301      	bcc.n	80001e0 <__udivsi3+0xd8>
 80001dc:	00cb      	lsls	r3, r1, #3
 80001de:	1ac0      	subs	r0, r0, r3
 80001e0:	4152      	adcs	r2, r2
 80001e2:	0883      	lsrs	r3, r0, #2
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d301      	bcc.n	80001ec <__udivsi3+0xe4>
 80001e8:	008b      	lsls	r3, r1, #2
 80001ea:	1ac0      	subs	r0, r0, r3
 80001ec:	4152      	adcs	r2, r2
 80001ee:	0843      	lsrs	r3, r0, #1
 80001f0:	428b      	cmp	r3, r1
 80001f2:	d301      	bcc.n	80001f8 <__udivsi3+0xf0>
 80001f4:	004b      	lsls	r3, r1, #1
 80001f6:	1ac0      	subs	r0, r0, r3
 80001f8:	4152      	adcs	r2, r2
 80001fa:	1a41      	subs	r1, r0, r1
 80001fc:	d200      	bcs.n	8000200 <__udivsi3+0xf8>
 80001fe:	4601      	mov	r1, r0
 8000200:	4152      	adcs	r2, r2
 8000202:	4610      	mov	r0, r2
 8000204:	4770      	bx	lr
 8000206:	e7ff      	b.n	8000208 <__udivsi3+0x100>
 8000208:	b501      	push	{r0, lr}
 800020a:	2000      	movs	r0, #0
 800020c:	f000 f806 	bl	800021c <__aeabi_idiv0>
 8000210:	bd02      	pop	{r1, pc}
 8000212:	46c0      	nop			; (mov r8, r8)

08000214 <__aeabi_uidivmod>:
 8000214:	2900      	cmp	r1, #0
 8000216:	d0f7      	beq.n	8000208 <__udivsi3+0x100>
 8000218:	e776      	b.n	8000108 <__udivsi3>
 800021a:	4770      	bx	lr

0800021c <__aeabi_idiv0>:
 800021c:	4770      	bx	lr
 800021e:	46c0      	nop			; (mov r8, r8)

08000220 <__aeabi_cdrcmple>:
 8000220:	4684      	mov	ip, r0
 8000222:	0010      	movs	r0, r2
 8000224:	4662      	mov	r2, ip
 8000226:	468c      	mov	ip, r1
 8000228:	0019      	movs	r1, r3
 800022a:	4663      	mov	r3, ip
 800022c:	e000      	b.n	8000230 <__aeabi_cdcmpeq>
 800022e:	46c0      	nop			; (mov r8, r8)

08000230 <__aeabi_cdcmpeq>:
 8000230:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8000232:	f001 f861 	bl	80012f8 <__ledf2>
 8000236:	2800      	cmp	r0, #0
 8000238:	d401      	bmi.n	800023e <__aeabi_cdcmpeq+0xe>
 800023a:	2100      	movs	r1, #0
 800023c:	42c8      	cmn	r0, r1
 800023e:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

08000240 <__aeabi_dcmpeq>:
 8000240:	b510      	push	{r4, lr}
 8000242:	f000 ffb1 	bl	80011a8 <__eqdf2>
 8000246:	4240      	negs	r0, r0
 8000248:	3001      	adds	r0, #1
 800024a:	bd10      	pop	{r4, pc}

0800024c <__aeabi_dcmplt>:
 800024c:	b510      	push	{r4, lr}
 800024e:	f001 f853 	bl	80012f8 <__ledf2>
 8000252:	2800      	cmp	r0, #0
 8000254:	db01      	blt.n	800025a <__aeabi_dcmplt+0xe>
 8000256:	2000      	movs	r0, #0
 8000258:	bd10      	pop	{r4, pc}
 800025a:	2001      	movs	r0, #1
 800025c:	bd10      	pop	{r4, pc}
 800025e:	46c0      	nop			; (mov r8, r8)

08000260 <__aeabi_dcmple>:
 8000260:	b510      	push	{r4, lr}
 8000262:	f001 f849 	bl	80012f8 <__ledf2>
 8000266:	2800      	cmp	r0, #0
 8000268:	dd01      	ble.n	800026e <__aeabi_dcmple+0xe>
 800026a:	2000      	movs	r0, #0
 800026c:	bd10      	pop	{r4, pc}
 800026e:	2001      	movs	r0, #1
 8000270:	bd10      	pop	{r4, pc}
 8000272:	46c0      	nop			; (mov r8, r8)

08000274 <__aeabi_dcmpgt>:
 8000274:	b510      	push	{r4, lr}
 8000276:	f000 ffd9 	bl	800122c <__gedf2>
 800027a:	2800      	cmp	r0, #0
 800027c:	dc01      	bgt.n	8000282 <__aeabi_dcmpgt+0xe>
 800027e:	2000      	movs	r0, #0
 8000280:	bd10      	pop	{r4, pc}
 8000282:	2001      	movs	r0, #1
 8000284:	bd10      	pop	{r4, pc}
 8000286:	46c0      	nop			; (mov r8, r8)

08000288 <__aeabi_dcmpge>:
 8000288:	b510      	push	{r4, lr}
 800028a:	f000 ffcf 	bl	800122c <__gedf2>
 800028e:	2800      	cmp	r0, #0
 8000290:	da01      	bge.n	8000296 <__aeabi_dcmpge+0xe>
 8000292:	2000      	movs	r0, #0
 8000294:	bd10      	pop	{r4, pc}
 8000296:	2001      	movs	r0, #1
 8000298:	bd10      	pop	{r4, pc}
 800029a:	46c0      	nop			; (mov r8, r8)

0800029c <__aeabi_uldivmod>:
 800029c:	2b00      	cmp	r3, #0
 800029e:	d111      	bne.n	80002c4 <__aeabi_uldivmod+0x28>
 80002a0:	2a00      	cmp	r2, #0
 80002a2:	d10f      	bne.n	80002c4 <__aeabi_uldivmod+0x28>
 80002a4:	2900      	cmp	r1, #0
 80002a6:	d100      	bne.n	80002aa <__aeabi_uldivmod+0xe>
 80002a8:	2800      	cmp	r0, #0
 80002aa:	d002      	beq.n	80002b2 <__aeabi_uldivmod+0x16>
 80002ac:	2100      	movs	r1, #0
 80002ae:	43c9      	mvns	r1, r1
 80002b0:	0008      	movs	r0, r1
 80002b2:	b407      	push	{r0, r1, r2}
 80002b4:	4802      	ldr	r0, [pc, #8]	; (80002c0 <__aeabi_uldivmod+0x24>)
 80002b6:	a102      	add	r1, pc, #8	; (adr r1, 80002c0 <__aeabi_uldivmod+0x24>)
 80002b8:	1840      	adds	r0, r0, r1
 80002ba:	9002      	str	r0, [sp, #8]
 80002bc:	bd03      	pop	{r0, r1, pc}
 80002be:	46c0      	nop			; (mov r8, r8)
 80002c0:	ffffff5d 	.word	0xffffff5d
 80002c4:	b403      	push	{r0, r1}
 80002c6:	4668      	mov	r0, sp
 80002c8:	b501      	push	{r0, lr}
 80002ca:	9802      	ldr	r0, [sp, #8]
 80002cc:	f000 f852 	bl	8000374 <__udivmoddi4>
 80002d0:	9b01      	ldr	r3, [sp, #4]
 80002d2:	469e      	mov	lr, r3
 80002d4:	b002      	add	sp, #8
 80002d6:	bc0c      	pop	{r2, r3}
 80002d8:	4770      	bx	lr
 80002da:	46c0      	nop			; (mov r8, r8)

080002dc <__aeabi_lmul>:
 80002dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80002de:	46ce      	mov	lr, r9
 80002e0:	4699      	mov	r9, r3
 80002e2:	0c03      	lsrs	r3, r0, #16
 80002e4:	469c      	mov	ip, r3
 80002e6:	0413      	lsls	r3, r2, #16
 80002e8:	4647      	mov	r7, r8
 80002ea:	0c1b      	lsrs	r3, r3, #16
 80002ec:	001d      	movs	r5, r3
 80002ee:	000e      	movs	r6, r1
 80002f0:	4661      	mov	r1, ip
 80002f2:	0404      	lsls	r4, r0, #16
 80002f4:	0c24      	lsrs	r4, r4, #16
 80002f6:	b580      	push	{r7, lr}
 80002f8:	0007      	movs	r7, r0
 80002fa:	0c10      	lsrs	r0, r2, #16
 80002fc:	434b      	muls	r3, r1
 80002fe:	4365      	muls	r5, r4
 8000300:	4341      	muls	r1, r0
 8000302:	4360      	muls	r0, r4
 8000304:	0c2c      	lsrs	r4, r5, #16
 8000306:	18c0      	adds	r0, r0, r3
 8000308:	1820      	adds	r0, r4, r0
 800030a:	468c      	mov	ip, r1
 800030c:	4283      	cmp	r3, r0
 800030e:	d903      	bls.n	8000318 <__aeabi_lmul+0x3c>
 8000310:	2380      	movs	r3, #128	; 0x80
 8000312:	025b      	lsls	r3, r3, #9
 8000314:	4698      	mov	r8, r3
 8000316:	44c4      	add	ip, r8
 8000318:	4649      	mov	r1, r9
 800031a:	4379      	muls	r1, r7
 800031c:	4356      	muls	r6, r2
 800031e:	0c03      	lsrs	r3, r0, #16
 8000320:	042d      	lsls	r5, r5, #16
 8000322:	0c2d      	lsrs	r5, r5, #16
 8000324:	1989      	adds	r1, r1, r6
 8000326:	4463      	add	r3, ip
 8000328:	0400      	lsls	r0, r0, #16
 800032a:	1940      	adds	r0, r0, r5
 800032c:	18c9      	adds	r1, r1, r3
 800032e:	bcc0      	pop	{r6, r7}
 8000330:	46b9      	mov	r9, r7
 8000332:	46b0      	mov	r8, r6
 8000334:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000336:	46c0      	nop			; (mov r8, r8)

08000338 <__aeabi_d2uiz>:
 8000338:	b570      	push	{r4, r5, r6, lr}
 800033a:	2200      	movs	r2, #0
 800033c:	4b0c      	ldr	r3, [pc, #48]	; (8000370 <__aeabi_d2uiz+0x38>)
 800033e:	0004      	movs	r4, r0
 8000340:	000d      	movs	r5, r1
 8000342:	f7ff ffa1 	bl	8000288 <__aeabi_dcmpge>
 8000346:	2800      	cmp	r0, #0
 8000348:	d104      	bne.n	8000354 <__aeabi_d2uiz+0x1c>
 800034a:	0020      	movs	r0, r4
 800034c:	0029      	movs	r1, r5
 800034e:	f001 fe7b 	bl	8002048 <__aeabi_d2iz>
 8000352:	bd70      	pop	{r4, r5, r6, pc}
 8000354:	4b06      	ldr	r3, [pc, #24]	; (8000370 <__aeabi_d2uiz+0x38>)
 8000356:	2200      	movs	r2, #0
 8000358:	0020      	movs	r0, r4
 800035a:	0029      	movs	r1, r5
 800035c:	f001 faf2 	bl	8001944 <__aeabi_dsub>
 8000360:	f001 fe72 	bl	8002048 <__aeabi_d2iz>
 8000364:	2380      	movs	r3, #128	; 0x80
 8000366:	061b      	lsls	r3, r3, #24
 8000368:	469c      	mov	ip, r3
 800036a:	4460      	add	r0, ip
 800036c:	e7f1      	b.n	8000352 <__aeabi_d2uiz+0x1a>
 800036e:	46c0      	nop			; (mov r8, r8)
 8000370:	41e00000 	.word	0x41e00000

08000374 <__udivmoddi4>:
 8000374:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000376:	4657      	mov	r7, sl
 8000378:	464e      	mov	r6, r9
 800037a:	4645      	mov	r5, r8
 800037c:	46de      	mov	lr, fp
 800037e:	b5e0      	push	{r5, r6, r7, lr}
 8000380:	0004      	movs	r4, r0
 8000382:	000d      	movs	r5, r1
 8000384:	4692      	mov	sl, r2
 8000386:	4699      	mov	r9, r3
 8000388:	b083      	sub	sp, #12
 800038a:	428b      	cmp	r3, r1
 800038c:	d830      	bhi.n	80003f0 <__udivmoddi4+0x7c>
 800038e:	d02d      	beq.n	80003ec <__udivmoddi4+0x78>
 8000390:	4649      	mov	r1, r9
 8000392:	4650      	mov	r0, sl
 8000394:	f001 ff02 	bl	800219c <__clzdi2>
 8000398:	0029      	movs	r1, r5
 800039a:	0006      	movs	r6, r0
 800039c:	0020      	movs	r0, r4
 800039e:	f001 fefd 	bl	800219c <__clzdi2>
 80003a2:	1a33      	subs	r3, r6, r0
 80003a4:	4698      	mov	r8, r3
 80003a6:	3b20      	subs	r3, #32
 80003a8:	d434      	bmi.n	8000414 <__udivmoddi4+0xa0>
 80003aa:	469b      	mov	fp, r3
 80003ac:	4653      	mov	r3, sl
 80003ae:	465a      	mov	r2, fp
 80003b0:	4093      	lsls	r3, r2
 80003b2:	4642      	mov	r2, r8
 80003b4:	001f      	movs	r7, r3
 80003b6:	4653      	mov	r3, sl
 80003b8:	4093      	lsls	r3, r2
 80003ba:	001e      	movs	r6, r3
 80003bc:	42af      	cmp	r7, r5
 80003be:	d83b      	bhi.n	8000438 <__udivmoddi4+0xc4>
 80003c0:	42af      	cmp	r7, r5
 80003c2:	d100      	bne.n	80003c6 <__udivmoddi4+0x52>
 80003c4:	e079      	b.n	80004ba <__udivmoddi4+0x146>
 80003c6:	465b      	mov	r3, fp
 80003c8:	1ba4      	subs	r4, r4, r6
 80003ca:	41bd      	sbcs	r5, r7
 80003cc:	2b00      	cmp	r3, #0
 80003ce:	da00      	bge.n	80003d2 <__udivmoddi4+0x5e>
 80003d0:	e076      	b.n	80004c0 <__udivmoddi4+0x14c>
 80003d2:	2200      	movs	r2, #0
 80003d4:	2300      	movs	r3, #0
 80003d6:	9200      	str	r2, [sp, #0]
 80003d8:	9301      	str	r3, [sp, #4]
 80003da:	2301      	movs	r3, #1
 80003dc:	465a      	mov	r2, fp
 80003de:	4093      	lsls	r3, r2
 80003e0:	9301      	str	r3, [sp, #4]
 80003e2:	2301      	movs	r3, #1
 80003e4:	4642      	mov	r2, r8
 80003e6:	4093      	lsls	r3, r2
 80003e8:	9300      	str	r3, [sp, #0]
 80003ea:	e029      	b.n	8000440 <__udivmoddi4+0xcc>
 80003ec:	4282      	cmp	r2, r0
 80003ee:	d9cf      	bls.n	8000390 <__udivmoddi4+0x1c>
 80003f0:	2200      	movs	r2, #0
 80003f2:	2300      	movs	r3, #0
 80003f4:	9200      	str	r2, [sp, #0]
 80003f6:	9301      	str	r3, [sp, #4]
 80003f8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80003fa:	2b00      	cmp	r3, #0
 80003fc:	d001      	beq.n	8000402 <__udivmoddi4+0x8e>
 80003fe:	601c      	str	r4, [r3, #0]
 8000400:	605d      	str	r5, [r3, #4]
 8000402:	9800      	ldr	r0, [sp, #0]
 8000404:	9901      	ldr	r1, [sp, #4]
 8000406:	b003      	add	sp, #12
 8000408:	bcf0      	pop	{r4, r5, r6, r7}
 800040a:	46bb      	mov	fp, r7
 800040c:	46b2      	mov	sl, r6
 800040e:	46a9      	mov	r9, r5
 8000410:	46a0      	mov	r8, r4
 8000412:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000414:	4642      	mov	r2, r8
 8000416:	469b      	mov	fp, r3
 8000418:	2320      	movs	r3, #32
 800041a:	1a9b      	subs	r3, r3, r2
 800041c:	4652      	mov	r2, sl
 800041e:	40da      	lsrs	r2, r3
 8000420:	4641      	mov	r1, r8
 8000422:	0013      	movs	r3, r2
 8000424:	464a      	mov	r2, r9
 8000426:	408a      	lsls	r2, r1
 8000428:	0017      	movs	r7, r2
 800042a:	4642      	mov	r2, r8
 800042c:	431f      	orrs	r7, r3
 800042e:	4653      	mov	r3, sl
 8000430:	4093      	lsls	r3, r2
 8000432:	001e      	movs	r6, r3
 8000434:	42af      	cmp	r7, r5
 8000436:	d9c3      	bls.n	80003c0 <__udivmoddi4+0x4c>
 8000438:	2200      	movs	r2, #0
 800043a:	2300      	movs	r3, #0
 800043c:	9200      	str	r2, [sp, #0]
 800043e:	9301      	str	r3, [sp, #4]
 8000440:	4643      	mov	r3, r8
 8000442:	2b00      	cmp	r3, #0
 8000444:	d0d8      	beq.n	80003f8 <__udivmoddi4+0x84>
 8000446:	07fb      	lsls	r3, r7, #31
 8000448:	0872      	lsrs	r2, r6, #1
 800044a:	431a      	orrs	r2, r3
 800044c:	4646      	mov	r6, r8
 800044e:	087b      	lsrs	r3, r7, #1
 8000450:	e00e      	b.n	8000470 <__udivmoddi4+0xfc>
 8000452:	42ab      	cmp	r3, r5
 8000454:	d101      	bne.n	800045a <__udivmoddi4+0xe6>
 8000456:	42a2      	cmp	r2, r4
 8000458:	d80c      	bhi.n	8000474 <__udivmoddi4+0x100>
 800045a:	1aa4      	subs	r4, r4, r2
 800045c:	419d      	sbcs	r5, r3
 800045e:	2001      	movs	r0, #1
 8000460:	1924      	adds	r4, r4, r4
 8000462:	416d      	adcs	r5, r5
 8000464:	2100      	movs	r1, #0
 8000466:	3e01      	subs	r6, #1
 8000468:	1824      	adds	r4, r4, r0
 800046a:	414d      	adcs	r5, r1
 800046c:	2e00      	cmp	r6, #0
 800046e:	d006      	beq.n	800047e <__udivmoddi4+0x10a>
 8000470:	42ab      	cmp	r3, r5
 8000472:	d9ee      	bls.n	8000452 <__udivmoddi4+0xde>
 8000474:	3e01      	subs	r6, #1
 8000476:	1924      	adds	r4, r4, r4
 8000478:	416d      	adcs	r5, r5
 800047a:	2e00      	cmp	r6, #0
 800047c:	d1f8      	bne.n	8000470 <__udivmoddi4+0xfc>
 800047e:	9800      	ldr	r0, [sp, #0]
 8000480:	9901      	ldr	r1, [sp, #4]
 8000482:	465b      	mov	r3, fp
 8000484:	1900      	adds	r0, r0, r4
 8000486:	4169      	adcs	r1, r5
 8000488:	2b00      	cmp	r3, #0
 800048a:	db24      	blt.n	80004d6 <__udivmoddi4+0x162>
 800048c:	002b      	movs	r3, r5
 800048e:	465a      	mov	r2, fp
 8000490:	4644      	mov	r4, r8
 8000492:	40d3      	lsrs	r3, r2
 8000494:	002a      	movs	r2, r5
 8000496:	40e2      	lsrs	r2, r4
 8000498:	001c      	movs	r4, r3
 800049a:	465b      	mov	r3, fp
 800049c:	0015      	movs	r5, r2
 800049e:	2b00      	cmp	r3, #0
 80004a0:	db2a      	blt.n	80004f8 <__udivmoddi4+0x184>
 80004a2:	0026      	movs	r6, r4
 80004a4:	409e      	lsls	r6, r3
 80004a6:	0033      	movs	r3, r6
 80004a8:	0026      	movs	r6, r4
 80004aa:	4647      	mov	r7, r8
 80004ac:	40be      	lsls	r6, r7
 80004ae:	0032      	movs	r2, r6
 80004b0:	1a80      	subs	r0, r0, r2
 80004b2:	4199      	sbcs	r1, r3
 80004b4:	9000      	str	r0, [sp, #0]
 80004b6:	9101      	str	r1, [sp, #4]
 80004b8:	e79e      	b.n	80003f8 <__udivmoddi4+0x84>
 80004ba:	42a3      	cmp	r3, r4
 80004bc:	d8bc      	bhi.n	8000438 <__udivmoddi4+0xc4>
 80004be:	e782      	b.n	80003c6 <__udivmoddi4+0x52>
 80004c0:	4642      	mov	r2, r8
 80004c2:	2320      	movs	r3, #32
 80004c4:	2100      	movs	r1, #0
 80004c6:	1a9b      	subs	r3, r3, r2
 80004c8:	2200      	movs	r2, #0
 80004ca:	9100      	str	r1, [sp, #0]
 80004cc:	9201      	str	r2, [sp, #4]
 80004ce:	2201      	movs	r2, #1
 80004d0:	40da      	lsrs	r2, r3
 80004d2:	9201      	str	r2, [sp, #4]
 80004d4:	e785      	b.n	80003e2 <__udivmoddi4+0x6e>
 80004d6:	4642      	mov	r2, r8
 80004d8:	2320      	movs	r3, #32
 80004da:	1a9b      	subs	r3, r3, r2
 80004dc:	002a      	movs	r2, r5
 80004de:	4646      	mov	r6, r8
 80004e0:	409a      	lsls	r2, r3
 80004e2:	0023      	movs	r3, r4
 80004e4:	40f3      	lsrs	r3, r6
 80004e6:	4644      	mov	r4, r8
 80004e8:	4313      	orrs	r3, r2
 80004ea:	002a      	movs	r2, r5
 80004ec:	40e2      	lsrs	r2, r4
 80004ee:	001c      	movs	r4, r3
 80004f0:	465b      	mov	r3, fp
 80004f2:	0015      	movs	r5, r2
 80004f4:	2b00      	cmp	r3, #0
 80004f6:	dad4      	bge.n	80004a2 <__udivmoddi4+0x12e>
 80004f8:	4642      	mov	r2, r8
 80004fa:	002f      	movs	r7, r5
 80004fc:	2320      	movs	r3, #32
 80004fe:	0026      	movs	r6, r4
 8000500:	4097      	lsls	r7, r2
 8000502:	1a9b      	subs	r3, r3, r2
 8000504:	40de      	lsrs	r6, r3
 8000506:	003b      	movs	r3, r7
 8000508:	4333      	orrs	r3, r6
 800050a:	e7cd      	b.n	80004a8 <__udivmoddi4+0x134>

0800050c <__aeabi_dadd>:
 800050c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800050e:	464f      	mov	r7, r9
 8000510:	4646      	mov	r6, r8
 8000512:	46d6      	mov	lr, sl
 8000514:	0004      	movs	r4, r0
 8000516:	b5c0      	push	{r6, r7, lr}
 8000518:	001f      	movs	r7, r3
 800051a:	030b      	lsls	r3, r1, #12
 800051c:	0010      	movs	r0, r2
 800051e:	004e      	lsls	r6, r1, #1
 8000520:	0a5b      	lsrs	r3, r3, #9
 8000522:	0fcd      	lsrs	r5, r1, #31
 8000524:	0f61      	lsrs	r1, r4, #29
 8000526:	007a      	lsls	r2, r7, #1
 8000528:	4319      	orrs	r1, r3
 800052a:	00e3      	lsls	r3, r4, #3
 800052c:	033c      	lsls	r4, r7, #12
 800052e:	0fff      	lsrs	r7, r7, #31
 8000530:	46bc      	mov	ip, r7
 8000532:	0a64      	lsrs	r4, r4, #9
 8000534:	0f47      	lsrs	r7, r0, #29
 8000536:	4327      	orrs	r7, r4
 8000538:	0d76      	lsrs	r6, r6, #21
 800053a:	0d52      	lsrs	r2, r2, #21
 800053c:	00c0      	lsls	r0, r0, #3
 800053e:	46b9      	mov	r9, r7
 8000540:	4680      	mov	r8, r0
 8000542:	1ab7      	subs	r7, r6, r2
 8000544:	4565      	cmp	r5, ip
 8000546:	d100      	bne.n	800054a <__aeabi_dadd+0x3e>
 8000548:	e09b      	b.n	8000682 <__aeabi_dadd+0x176>
 800054a:	2f00      	cmp	r7, #0
 800054c:	dc00      	bgt.n	8000550 <__aeabi_dadd+0x44>
 800054e:	e084      	b.n	800065a <__aeabi_dadd+0x14e>
 8000550:	2a00      	cmp	r2, #0
 8000552:	d100      	bne.n	8000556 <__aeabi_dadd+0x4a>
 8000554:	e0be      	b.n	80006d4 <__aeabi_dadd+0x1c8>
 8000556:	4ac8      	ldr	r2, [pc, #800]	; (8000878 <__aeabi_dadd+0x36c>)
 8000558:	4296      	cmp	r6, r2
 800055a:	d100      	bne.n	800055e <__aeabi_dadd+0x52>
 800055c:	e124      	b.n	80007a8 <__aeabi_dadd+0x29c>
 800055e:	2280      	movs	r2, #128	; 0x80
 8000560:	464c      	mov	r4, r9
 8000562:	0412      	lsls	r2, r2, #16
 8000564:	4314      	orrs	r4, r2
 8000566:	46a1      	mov	r9, r4
 8000568:	2f38      	cmp	r7, #56	; 0x38
 800056a:	dd00      	ble.n	800056e <__aeabi_dadd+0x62>
 800056c:	e167      	b.n	800083e <__aeabi_dadd+0x332>
 800056e:	2f1f      	cmp	r7, #31
 8000570:	dd00      	ble.n	8000574 <__aeabi_dadd+0x68>
 8000572:	e1d6      	b.n	8000922 <__aeabi_dadd+0x416>
 8000574:	2220      	movs	r2, #32
 8000576:	464c      	mov	r4, r9
 8000578:	1bd2      	subs	r2, r2, r7
 800057a:	4094      	lsls	r4, r2
 800057c:	46a2      	mov	sl, r4
 800057e:	4644      	mov	r4, r8
 8000580:	40fc      	lsrs	r4, r7
 8000582:	0020      	movs	r0, r4
 8000584:	4654      	mov	r4, sl
 8000586:	4304      	orrs	r4, r0
 8000588:	4640      	mov	r0, r8
 800058a:	4090      	lsls	r0, r2
 800058c:	1e42      	subs	r2, r0, #1
 800058e:	4190      	sbcs	r0, r2
 8000590:	464a      	mov	r2, r9
 8000592:	40fa      	lsrs	r2, r7
 8000594:	4304      	orrs	r4, r0
 8000596:	1a89      	subs	r1, r1, r2
 8000598:	1b1c      	subs	r4, r3, r4
 800059a:	42a3      	cmp	r3, r4
 800059c:	4192      	sbcs	r2, r2
 800059e:	4252      	negs	r2, r2
 80005a0:	1a8b      	subs	r3, r1, r2
 80005a2:	469a      	mov	sl, r3
 80005a4:	4653      	mov	r3, sl
 80005a6:	021b      	lsls	r3, r3, #8
 80005a8:	d400      	bmi.n	80005ac <__aeabi_dadd+0xa0>
 80005aa:	e0d4      	b.n	8000756 <__aeabi_dadd+0x24a>
 80005ac:	4653      	mov	r3, sl
 80005ae:	025a      	lsls	r2, r3, #9
 80005b0:	0a53      	lsrs	r3, r2, #9
 80005b2:	469a      	mov	sl, r3
 80005b4:	4653      	mov	r3, sl
 80005b6:	2b00      	cmp	r3, #0
 80005b8:	d100      	bne.n	80005bc <__aeabi_dadd+0xb0>
 80005ba:	e104      	b.n	80007c6 <__aeabi_dadd+0x2ba>
 80005bc:	4650      	mov	r0, sl
 80005be:	f001 fdcf 	bl	8002160 <__clzsi2>
 80005c2:	0003      	movs	r3, r0
 80005c4:	3b08      	subs	r3, #8
 80005c6:	2220      	movs	r2, #32
 80005c8:	0020      	movs	r0, r4
 80005ca:	1ad2      	subs	r2, r2, r3
 80005cc:	4651      	mov	r1, sl
 80005ce:	40d0      	lsrs	r0, r2
 80005d0:	4099      	lsls	r1, r3
 80005d2:	0002      	movs	r2, r0
 80005d4:	409c      	lsls	r4, r3
 80005d6:	430a      	orrs	r2, r1
 80005d8:	42b3      	cmp	r3, r6
 80005da:	da00      	bge.n	80005de <__aeabi_dadd+0xd2>
 80005dc:	e102      	b.n	80007e4 <__aeabi_dadd+0x2d8>
 80005de:	1b9b      	subs	r3, r3, r6
 80005e0:	1c59      	adds	r1, r3, #1
 80005e2:	291f      	cmp	r1, #31
 80005e4:	dd00      	ble.n	80005e8 <__aeabi_dadd+0xdc>
 80005e6:	e0a7      	b.n	8000738 <__aeabi_dadd+0x22c>
 80005e8:	2320      	movs	r3, #32
 80005ea:	0010      	movs	r0, r2
 80005ec:	0026      	movs	r6, r4
 80005ee:	1a5b      	subs	r3, r3, r1
 80005f0:	409c      	lsls	r4, r3
 80005f2:	4098      	lsls	r0, r3
 80005f4:	40ce      	lsrs	r6, r1
 80005f6:	40ca      	lsrs	r2, r1
 80005f8:	1e63      	subs	r3, r4, #1
 80005fa:	419c      	sbcs	r4, r3
 80005fc:	4330      	orrs	r0, r6
 80005fe:	4692      	mov	sl, r2
 8000600:	2600      	movs	r6, #0
 8000602:	4304      	orrs	r4, r0
 8000604:	0763      	lsls	r3, r4, #29
 8000606:	d009      	beq.n	800061c <__aeabi_dadd+0x110>
 8000608:	230f      	movs	r3, #15
 800060a:	4023      	ands	r3, r4
 800060c:	2b04      	cmp	r3, #4
 800060e:	d005      	beq.n	800061c <__aeabi_dadd+0x110>
 8000610:	1d23      	adds	r3, r4, #4
 8000612:	42a3      	cmp	r3, r4
 8000614:	41a4      	sbcs	r4, r4
 8000616:	4264      	negs	r4, r4
 8000618:	44a2      	add	sl, r4
 800061a:	001c      	movs	r4, r3
 800061c:	4653      	mov	r3, sl
 800061e:	021b      	lsls	r3, r3, #8
 8000620:	d400      	bmi.n	8000624 <__aeabi_dadd+0x118>
 8000622:	e09b      	b.n	800075c <__aeabi_dadd+0x250>
 8000624:	4b94      	ldr	r3, [pc, #592]	; (8000878 <__aeabi_dadd+0x36c>)
 8000626:	3601      	adds	r6, #1
 8000628:	429e      	cmp	r6, r3
 800062a:	d100      	bne.n	800062e <__aeabi_dadd+0x122>
 800062c:	e0b8      	b.n	80007a0 <__aeabi_dadd+0x294>
 800062e:	4653      	mov	r3, sl
 8000630:	4992      	ldr	r1, [pc, #584]	; (800087c <__aeabi_dadd+0x370>)
 8000632:	08e4      	lsrs	r4, r4, #3
 8000634:	400b      	ands	r3, r1
 8000636:	0019      	movs	r1, r3
 8000638:	075b      	lsls	r3, r3, #29
 800063a:	4323      	orrs	r3, r4
 800063c:	0572      	lsls	r2, r6, #21
 800063e:	024c      	lsls	r4, r1, #9
 8000640:	0b24      	lsrs	r4, r4, #12
 8000642:	0d52      	lsrs	r2, r2, #21
 8000644:	0512      	lsls	r2, r2, #20
 8000646:	07ed      	lsls	r5, r5, #31
 8000648:	4322      	orrs	r2, r4
 800064a:	432a      	orrs	r2, r5
 800064c:	0018      	movs	r0, r3
 800064e:	0011      	movs	r1, r2
 8000650:	bce0      	pop	{r5, r6, r7}
 8000652:	46ba      	mov	sl, r7
 8000654:	46b1      	mov	r9, r6
 8000656:	46a8      	mov	r8, r5
 8000658:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800065a:	2f00      	cmp	r7, #0
 800065c:	d048      	beq.n	80006f0 <__aeabi_dadd+0x1e4>
 800065e:	1b97      	subs	r7, r2, r6
 8000660:	2e00      	cmp	r6, #0
 8000662:	d000      	beq.n	8000666 <__aeabi_dadd+0x15a>
 8000664:	e10e      	b.n	8000884 <__aeabi_dadd+0x378>
 8000666:	000c      	movs	r4, r1
 8000668:	431c      	orrs	r4, r3
 800066a:	d100      	bne.n	800066e <__aeabi_dadd+0x162>
 800066c:	e1b7      	b.n	80009de <__aeabi_dadd+0x4d2>
 800066e:	1e7c      	subs	r4, r7, #1
 8000670:	2f01      	cmp	r7, #1
 8000672:	d100      	bne.n	8000676 <__aeabi_dadd+0x16a>
 8000674:	e226      	b.n	8000ac4 <__aeabi_dadd+0x5b8>
 8000676:	4d80      	ldr	r5, [pc, #512]	; (8000878 <__aeabi_dadd+0x36c>)
 8000678:	42af      	cmp	r7, r5
 800067a:	d100      	bne.n	800067e <__aeabi_dadd+0x172>
 800067c:	e1d5      	b.n	8000a2a <__aeabi_dadd+0x51e>
 800067e:	0027      	movs	r7, r4
 8000680:	e107      	b.n	8000892 <__aeabi_dadd+0x386>
 8000682:	2f00      	cmp	r7, #0
 8000684:	dc00      	bgt.n	8000688 <__aeabi_dadd+0x17c>
 8000686:	e0b2      	b.n	80007ee <__aeabi_dadd+0x2e2>
 8000688:	2a00      	cmp	r2, #0
 800068a:	d047      	beq.n	800071c <__aeabi_dadd+0x210>
 800068c:	4a7a      	ldr	r2, [pc, #488]	; (8000878 <__aeabi_dadd+0x36c>)
 800068e:	4296      	cmp	r6, r2
 8000690:	d100      	bne.n	8000694 <__aeabi_dadd+0x188>
 8000692:	e089      	b.n	80007a8 <__aeabi_dadd+0x29c>
 8000694:	2280      	movs	r2, #128	; 0x80
 8000696:	464c      	mov	r4, r9
 8000698:	0412      	lsls	r2, r2, #16
 800069a:	4314      	orrs	r4, r2
 800069c:	46a1      	mov	r9, r4
 800069e:	2f38      	cmp	r7, #56	; 0x38
 80006a0:	dc6b      	bgt.n	800077a <__aeabi_dadd+0x26e>
 80006a2:	2f1f      	cmp	r7, #31
 80006a4:	dc00      	bgt.n	80006a8 <__aeabi_dadd+0x19c>
 80006a6:	e16e      	b.n	8000986 <__aeabi_dadd+0x47a>
 80006a8:	003a      	movs	r2, r7
 80006aa:	4648      	mov	r0, r9
 80006ac:	3a20      	subs	r2, #32
 80006ae:	40d0      	lsrs	r0, r2
 80006b0:	4684      	mov	ip, r0
 80006b2:	2f20      	cmp	r7, #32
 80006b4:	d007      	beq.n	80006c6 <__aeabi_dadd+0x1ba>
 80006b6:	2240      	movs	r2, #64	; 0x40
 80006b8:	4648      	mov	r0, r9
 80006ba:	1bd2      	subs	r2, r2, r7
 80006bc:	4090      	lsls	r0, r2
 80006be:	0002      	movs	r2, r0
 80006c0:	4640      	mov	r0, r8
 80006c2:	4310      	orrs	r0, r2
 80006c4:	4680      	mov	r8, r0
 80006c6:	4640      	mov	r0, r8
 80006c8:	1e42      	subs	r2, r0, #1
 80006ca:	4190      	sbcs	r0, r2
 80006cc:	4662      	mov	r2, ip
 80006ce:	0004      	movs	r4, r0
 80006d0:	4314      	orrs	r4, r2
 80006d2:	e057      	b.n	8000784 <__aeabi_dadd+0x278>
 80006d4:	464a      	mov	r2, r9
 80006d6:	4302      	orrs	r2, r0
 80006d8:	d100      	bne.n	80006dc <__aeabi_dadd+0x1d0>
 80006da:	e103      	b.n	80008e4 <__aeabi_dadd+0x3d8>
 80006dc:	1e7a      	subs	r2, r7, #1
 80006de:	2f01      	cmp	r7, #1
 80006e0:	d100      	bne.n	80006e4 <__aeabi_dadd+0x1d8>
 80006e2:	e193      	b.n	8000a0c <__aeabi_dadd+0x500>
 80006e4:	4c64      	ldr	r4, [pc, #400]	; (8000878 <__aeabi_dadd+0x36c>)
 80006e6:	42a7      	cmp	r7, r4
 80006e8:	d100      	bne.n	80006ec <__aeabi_dadd+0x1e0>
 80006ea:	e18a      	b.n	8000a02 <__aeabi_dadd+0x4f6>
 80006ec:	0017      	movs	r7, r2
 80006ee:	e73b      	b.n	8000568 <__aeabi_dadd+0x5c>
 80006f0:	4c63      	ldr	r4, [pc, #396]	; (8000880 <__aeabi_dadd+0x374>)
 80006f2:	1c72      	adds	r2, r6, #1
 80006f4:	4222      	tst	r2, r4
 80006f6:	d000      	beq.n	80006fa <__aeabi_dadd+0x1ee>
 80006f8:	e0e0      	b.n	80008bc <__aeabi_dadd+0x3b0>
 80006fa:	000a      	movs	r2, r1
 80006fc:	431a      	orrs	r2, r3
 80006fe:	2e00      	cmp	r6, #0
 8000700:	d000      	beq.n	8000704 <__aeabi_dadd+0x1f8>
 8000702:	e174      	b.n	80009ee <__aeabi_dadd+0x4e2>
 8000704:	2a00      	cmp	r2, #0
 8000706:	d100      	bne.n	800070a <__aeabi_dadd+0x1fe>
 8000708:	e1d0      	b.n	8000aac <__aeabi_dadd+0x5a0>
 800070a:	464a      	mov	r2, r9
 800070c:	4302      	orrs	r2, r0
 800070e:	d000      	beq.n	8000712 <__aeabi_dadd+0x206>
 8000710:	e1e3      	b.n	8000ada <__aeabi_dadd+0x5ce>
 8000712:	074a      	lsls	r2, r1, #29
 8000714:	08db      	lsrs	r3, r3, #3
 8000716:	4313      	orrs	r3, r2
 8000718:	08c9      	lsrs	r1, r1, #3
 800071a:	e029      	b.n	8000770 <__aeabi_dadd+0x264>
 800071c:	464a      	mov	r2, r9
 800071e:	4302      	orrs	r2, r0
 8000720:	d100      	bne.n	8000724 <__aeabi_dadd+0x218>
 8000722:	e17d      	b.n	8000a20 <__aeabi_dadd+0x514>
 8000724:	1e7a      	subs	r2, r7, #1
 8000726:	2f01      	cmp	r7, #1
 8000728:	d100      	bne.n	800072c <__aeabi_dadd+0x220>
 800072a:	e0e0      	b.n	80008ee <__aeabi_dadd+0x3e2>
 800072c:	4c52      	ldr	r4, [pc, #328]	; (8000878 <__aeabi_dadd+0x36c>)
 800072e:	42a7      	cmp	r7, r4
 8000730:	d100      	bne.n	8000734 <__aeabi_dadd+0x228>
 8000732:	e166      	b.n	8000a02 <__aeabi_dadd+0x4f6>
 8000734:	0017      	movs	r7, r2
 8000736:	e7b2      	b.n	800069e <__aeabi_dadd+0x192>
 8000738:	0010      	movs	r0, r2
 800073a:	3b1f      	subs	r3, #31
 800073c:	40d8      	lsrs	r0, r3
 800073e:	2920      	cmp	r1, #32
 8000740:	d003      	beq.n	800074a <__aeabi_dadd+0x23e>
 8000742:	2340      	movs	r3, #64	; 0x40
 8000744:	1a5b      	subs	r3, r3, r1
 8000746:	409a      	lsls	r2, r3
 8000748:	4314      	orrs	r4, r2
 800074a:	1e63      	subs	r3, r4, #1
 800074c:	419c      	sbcs	r4, r3
 800074e:	2300      	movs	r3, #0
 8000750:	2600      	movs	r6, #0
 8000752:	469a      	mov	sl, r3
 8000754:	4304      	orrs	r4, r0
 8000756:	0763      	lsls	r3, r4, #29
 8000758:	d000      	beq.n	800075c <__aeabi_dadd+0x250>
 800075a:	e755      	b.n	8000608 <__aeabi_dadd+0xfc>
 800075c:	4652      	mov	r2, sl
 800075e:	08e3      	lsrs	r3, r4, #3
 8000760:	0752      	lsls	r2, r2, #29
 8000762:	4313      	orrs	r3, r2
 8000764:	4652      	mov	r2, sl
 8000766:	0037      	movs	r7, r6
 8000768:	08d1      	lsrs	r1, r2, #3
 800076a:	4a43      	ldr	r2, [pc, #268]	; (8000878 <__aeabi_dadd+0x36c>)
 800076c:	4297      	cmp	r7, r2
 800076e:	d01f      	beq.n	80007b0 <__aeabi_dadd+0x2a4>
 8000770:	0309      	lsls	r1, r1, #12
 8000772:	057a      	lsls	r2, r7, #21
 8000774:	0b0c      	lsrs	r4, r1, #12
 8000776:	0d52      	lsrs	r2, r2, #21
 8000778:	e764      	b.n	8000644 <__aeabi_dadd+0x138>
 800077a:	4642      	mov	r2, r8
 800077c:	464c      	mov	r4, r9
 800077e:	4314      	orrs	r4, r2
 8000780:	1e62      	subs	r2, r4, #1
 8000782:	4194      	sbcs	r4, r2
 8000784:	18e4      	adds	r4, r4, r3
 8000786:	429c      	cmp	r4, r3
 8000788:	4192      	sbcs	r2, r2
 800078a:	4252      	negs	r2, r2
 800078c:	4692      	mov	sl, r2
 800078e:	448a      	add	sl, r1
 8000790:	4653      	mov	r3, sl
 8000792:	021b      	lsls	r3, r3, #8
 8000794:	d5df      	bpl.n	8000756 <__aeabi_dadd+0x24a>
 8000796:	4b38      	ldr	r3, [pc, #224]	; (8000878 <__aeabi_dadd+0x36c>)
 8000798:	3601      	adds	r6, #1
 800079a:	429e      	cmp	r6, r3
 800079c:	d000      	beq.n	80007a0 <__aeabi_dadd+0x294>
 800079e:	e0b3      	b.n	8000908 <__aeabi_dadd+0x3fc>
 80007a0:	0032      	movs	r2, r6
 80007a2:	2400      	movs	r4, #0
 80007a4:	2300      	movs	r3, #0
 80007a6:	e74d      	b.n	8000644 <__aeabi_dadd+0x138>
 80007a8:	074a      	lsls	r2, r1, #29
 80007aa:	08db      	lsrs	r3, r3, #3
 80007ac:	4313      	orrs	r3, r2
 80007ae:	08c9      	lsrs	r1, r1, #3
 80007b0:	001a      	movs	r2, r3
 80007b2:	430a      	orrs	r2, r1
 80007b4:	d100      	bne.n	80007b8 <__aeabi_dadd+0x2ac>
 80007b6:	e200      	b.n	8000bba <__aeabi_dadd+0x6ae>
 80007b8:	2480      	movs	r4, #128	; 0x80
 80007ba:	0324      	lsls	r4, r4, #12
 80007bc:	430c      	orrs	r4, r1
 80007be:	0324      	lsls	r4, r4, #12
 80007c0:	4a2d      	ldr	r2, [pc, #180]	; (8000878 <__aeabi_dadd+0x36c>)
 80007c2:	0b24      	lsrs	r4, r4, #12
 80007c4:	e73e      	b.n	8000644 <__aeabi_dadd+0x138>
 80007c6:	0020      	movs	r0, r4
 80007c8:	f001 fcca 	bl	8002160 <__clzsi2>
 80007cc:	0003      	movs	r3, r0
 80007ce:	3318      	adds	r3, #24
 80007d0:	2b1f      	cmp	r3, #31
 80007d2:	dc00      	bgt.n	80007d6 <__aeabi_dadd+0x2ca>
 80007d4:	e6f7      	b.n	80005c6 <__aeabi_dadd+0xba>
 80007d6:	0022      	movs	r2, r4
 80007d8:	3808      	subs	r0, #8
 80007da:	4082      	lsls	r2, r0
 80007dc:	2400      	movs	r4, #0
 80007de:	42b3      	cmp	r3, r6
 80007e0:	db00      	blt.n	80007e4 <__aeabi_dadd+0x2d8>
 80007e2:	e6fc      	b.n	80005de <__aeabi_dadd+0xd2>
 80007e4:	1af6      	subs	r6, r6, r3
 80007e6:	4b25      	ldr	r3, [pc, #148]	; (800087c <__aeabi_dadd+0x370>)
 80007e8:	401a      	ands	r2, r3
 80007ea:	4692      	mov	sl, r2
 80007ec:	e70a      	b.n	8000604 <__aeabi_dadd+0xf8>
 80007ee:	2f00      	cmp	r7, #0
 80007f0:	d02b      	beq.n	800084a <__aeabi_dadd+0x33e>
 80007f2:	1b97      	subs	r7, r2, r6
 80007f4:	2e00      	cmp	r6, #0
 80007f6:	d100      	bne.n	80007fa <__aeabi_dadd+0x2ee>
 80007f8:	e0b8      	b.n	800096c <__aeabi_dadd+0x460>
 80007fa:	4c1f      	ldr	r4, [pc, #124]	; (8000878 <__aeabi_dadd+0x36c>)
 80007fc:	42a2      	cmp	r2, r4
 80007fe:	d100      	bne.n	8000802 <__aeabi_dadd+0x2f6>
 8000800:	e11c      	b.n	8000a3c <__aeabi_dadd+0x530>
 8000802:	2480      	movs	r4, #128	; 0x80
 8000804:	0424      	lsls	r4, r4, #16
 8000806:	4321      	orrs	r1, r4
 8000808:	2f38      	cmp	r7, #56	; 0x38
 800080a:	dd00      	ble.n	800080e <__aeabi_dadd+0x302>
 800080c:	e11e      	b.n	8000a4c <__aeabi_dadd+0x540>
 800080e:	2f1f      	cmp	r7, #31
 8000810:	dd00      	ble.n	8000814 <__aeabi_dadd+0x308>
 8000812:	e19e      	b.n	8000b52 <__aeabi_dadd+0x646>
 8000814:	2620      	movs	r6, #32
 8000816:	000c      	movs	r4, r1
 8000818:	1bf6      	subs	r6, r6, r7
 800081a:	0018      	movs	r0, r3
 800081c:	40b3      	lsls	r3, r6
 800081e:	40b4      	lsls	r4, r6
 8000820:	40f8      	lsrs	r0, r7
 8000822:	1e5e      	subs	r6, r3, #1
 8000824:	41b3      	sbcs	r3, r6
 8000826:	40f9      	lsrs	r1, r7
 8000828:	4304      	orrs	r4, r0
 800082a:	431c      	orrs	r4, r3
 800082c:	4489      	add	r9, r1
 800082e:	4444      	add	r4, r8
 8000830:	4544      	cmp	r4, r8
 8000832:	419b      	sbcs	r3, r3
 8000834:	425b      	negs	r3, r3
 8000836:	444b      	add	r3, r9
 8000838:	469a      	mov	sl, r3
 800083a:	0016      	movs	r6, r2
 800083c:	e7a8      	b.n	8000790 <__aeabi_dadd+0x284>
 800083e:	4642      	mov	r2, r8
 8000840:	464c      	mov	r4, r9
 8000842:	4314      	orrs	r4, r2
 8000844:	1e62      	subs	r2, r4, #1
 8000846:	4194      	sbcs	r4, r2
 8000848:	e6a6      	b.n	8000598 <__aeabi_dadd+0x8c>
 800084a:	4c0d      	ldr	r4, [pc, #52]	; (8000880 <__aeabi_dadd+0x374>)
 800084c:	1c72      	adds	r2, r6, #1
 800084e:	4222      	tst	r2, r4
 8000850:	d000      	beq.n	8000854 <__aeabi_dadd+0x348>
 8000852:	e0a8      	b.n	80009a6 <__aeabi_dadd+0x49a>
 8000854:	000a      	movs	r2, r1
 8000856:	431a      	orrs	r2, r3
 8000858:	2e00      	cmp	r6, #0
 800085a:	d000      	beq.n	800085e <__aeabi_dadd+0x352>
 800085c:	e10a      	b.n	8000a74 <__aeabi_dadd+0x568>
 800085e:	2a00      	cmp	r2, #0
 8000860:	d100      	bne.n	8000864 <__aeabi_dadd+0x358>
 8000862:	e15e      	b.n	8000b22 <__aeabi_dadd+0x616>
 8000864:	464a      	mov	r2, r9
 8000866:	4302      	orrs	r2, r0
 8000868:	d000      	beq.n	800086c <__aeabi_dadd+0x360>
 800086a:	e161      	b.n	8000b30 <__aeabi_dadd+0x624>
 800086c:	074a      	lsls	r2, r1, #29
 800086e:	08db      	lsrs	r3, r3, #3
 8000870:	4313      	orrs	r3, r2
 8000872:	08c9      	lsrs	r1, r1, #3
 8000874:	e77c      	b.n	8000770 <__aeabi_dadd+0x264>
 8000876:	46c0      	nop			; (mov r8, r8)
 8000878:	000007ff 	.word	0x000007ff
 800087c:	ff7fffff 	.word	0xff7fffff
 8000880:	000007fe 	.word	0x000007fe
 8000884:	4ccf      	ldr	r4, [pc, #828]	; (8000bc4 <__aeabi_dadd+0x6b8>)
 8000886:	42a2      	cmp	r2, r4
 8000888:	d100      	bne.n	800088c <__aeabi_dadd+0x380>
 800088a:	e0ce      	b.n	8000a2a <__aeabi_dadd+0x51e>
 800088c:	2480      	movs	r4, #128	; 0x80
 800088e:	0424      	lsls	r4, r4, #16
 8000890:	4321      	orrs	r1, r4
 8000892:	2f38      	cmp	r7, #56	; 0x38
 8000894:	dc5b      	bgt.n	800094e <__aeabi_dadd+0x442>
 8000896:	2f1f      	cmp	r7, #31
 8000898:	dd00      	ble.n	800089c <__aeabi_dadd+0x390>
 800089a:	e0dc      	b.n	8000a56 <__aeabi_dadd+0x54a>
 800089c:	2520      	movs	r5, #32
 800089e:	000c      	movs	r4, r1
 80008a0:	1bed      	subs	r5, r5, r7
 80008a2:	001e      	movs	r6, r3
 80008a4:	40ab      	lsls	r3, r5
 80008a6:	40ac      	lsls	r4, r5
 80008a8:	40fe      	lsrs	r6, r7
 80008aa:	1e5d      	subs	r5, r3, #1
 80008ac:	41ab      	sbcs	r3, r5
 80008ae:	4334      	orrs	r4, r6
 80008b0:	40f9      	lsrs	r1, r7
 80008b2:	431c      	orrs	r4, r3
 80008b4:	464b      	mov	r3, r9
 80008b6:	1a5b      	subs	r3, r3, r1
 80008b8:	4699      	mov	r9, r3
 80008ba:	e04c      	b.n	8000956 <__aeabi_dadd+0x44a>
 80008bc:	464a      	mov	r2, r9
 80008be:	1a1c      	subs	r4, r3, r0
 80008c0:	1a88      	subs	r0, r1, r2
 80008c2:	42a3      	cmp	r3, r4
 80008c4:	4192      	sbcs	r2, r2
 80008c6:	4252      	negs	r2, r2
 80008c8:	4692      	mov	sl, r2
 80008ca:	0002      	movs	r2, r0
 80008cc:	4650      	mov	r0, sl
 80008ce:	1a12      	subs	r2, r2, r0
 80008d0:	4692      	mov	sl, r2
 80008d2:	0212      	lsls	r2, r2, #8
 80008d4:	d478      	bmi.n	80009c8 <__aeabi_dadd+0x4bc>
 80008d6:	4653      	mov	r3, sl
 80008d8:	4323      	orrs	r3, r4
 80008da:	d000      	beq.n	80008de <__aeabi_dadd+0x3d2>
 80008dc:	e66a      	b.n	80005b4 <__aeabi_dadd+0xa8>
 80008de:	2100      	movs	r1, #0
 80008e0:	2500      	movs	r5, #0
 80008e2:	e745      	b.n	8000770 <__aeabi_dadd+0x264>
 80008e4:	074a      	lsls	r2, r1, #29
 80008e6:	08db      	lsrs	r3, r3, #3
 80008e8:	4313      	orrs	r3, r2
 80008ea:	08c9      	lsrs	r1, r1, #3
 80008ec:	e73d      	b.n	800076a <__aeabi_dadd+0x25e>
 80008ee:	181c      	adds	r4, r3, r0
 80008f0:	429c      	cmp	r4, r3
 80008f2:	419b      	sbcs	r3, r3
 80008f4:	4449      	add	r1, r9
 80008f6:	468a      	mov	sl, r1
 80008f8:	425b      	negs	r3, r3
 80008fa:	449a      	add	sl, r3
 80008fc:	4653      	mov	r3, sl
 80008fe:	2601      	movs	r6, #1
 8000900:	021b      	lsls	r3, r3, #8
 8000902:	d400      	bmi.n	8000906 <__aeabi_dadd+0x3fa>
 8000904:	e727      	b.n	8000756 <__aeabi_dadd+0x24a>
 8000906:	2602      	movs	r6, #2
 8000908:	4652      	mov	r2, sl
 800090a:	4baf      	ldr	r3, [pc, #700]	; (8000bc8 <__aeabi_dadd+0x6bc>)
 800090c:	2101      	movs	r1, #1
 800090e:	401a      	ands	r2, r3
 8000910:	0013      	movs	r3, r2
 8000912:	4021      	ands	r1, r4
 8000914:	0862      	lsrs	r2, r4, #1
 8000916:	430a      	orrs	r2, r1
 8000918:	07dc      	lsls	r4, r3, #31
 800091a:	085b      	lsrs	r3, r3, #1
 800091c:	469a      	mov	sl, r3
 800091e:	4314      	orrs	r4, r2
 8000920:	e670      	b.n	8000604 <__aeabi_dadd+0xf8>
 8000922:	003a      	movs	r2, r7
 8000924:	464c      	mov	r4, r9
 8000926:	3a20      	subs	r2, #32
 8000928:	40d4      	lsrs	r4, r2
 800092a:	46a4      	mov	ip, r4
 800092c:	2f20      	cmp	r7, #32
 800092e:	d007      	beq.n	8000940 <__aeabi_dadd+0x434>
 8000930:	2240      	movs	r2, #64	; 0x40
 8000932:	4648      	mov	r0, r9
 8000934:	1bd2      	subs	r2, r2, r7
 8000936:	4090      	lsls	r0, r2
 8000938:	0002      	movs	r2, r0
 800093a:	4640      	mov	r0, r8
 800093c:	4310      	orrs	r0, r2
 800093e:	4680      	mov	r8, r0
 8000940:	4640      	mov	r0, r8
 8000942:	1e42      	subs	r2, r0, #1
 8000944:	4190      	sbcs	r0, r2
 8000946:	4662      	mov	r2, ip
 8000948:	0004      	movs	r4, r0
 800094a:	4314      	orrs	r4, r2
 800094c:	e624      	b.n	8000598 <__aeabi_dadd+0x8c>
 800094e:	4319      	orrs	r1, r3
 8000950:	000c      	movs	r4, r1
 8000952:	1e63      	subs	r3, r4, #1
 8000954:	419c      	sbcs	r4, r3
 8000956:	4643      	mov	r3, r8
 8000958:	1b1c      	subs	r4, r3, r4
 800095a:	45a0      	cmp	r8, r4
 800095c:	419b      	sbcs	r3, r3
 800095e:	4649      	mov	r1, r9
 8000960:	425b      	negs	r3, r3
 8000962:	1acb      	subs	r3, r1, r3
 8000964:	469a      	mov	sl, r3
 8000966:	4665      	mov	r5, ip
 8000968:	0016      	movs	r6, r2
 800096a:	e61b      	b.n	80005a4 <__aeabi_dadd+0x98>
 800096c:	000c      	movs	r4, r1
 800096e:	431c      	orrs	r4, r3
 8000970:	d100      	bne.n	8000974 <__aeabi_dadd+0x468>
 8000972:	e0c7      	b.n	8000b04 <__aeabi_dadd+0x5f8>
 8000974:	1e7c      	subs	r4, r7, #1
 8000976:	2f01      	cmp	r7, #1
 8000978:	d100      	bne.n	800097c <__aeabi_dadd+0x470>
 800097a:	e0f9      	b.n	8000b70 <__aeabi_dadd+0x664>
 800097c:	4e91      	ldr	r6, [pc, #580]	; (8000bc4 <__aeabi_dadd+0x6b8>)
 800097e:	42b7      	cmp	r7, r6
 8000980:	d05c      	beq.n	8000a3c <__aeabi_dadd+0x530>
 8000982:	0027      	movs	r7, r4
 8000984:	e740      	b.n	8000808 <__aeabi_dadd+0x2fc>
 8000986:	2220      	movs	r2, #32
 8000988:	464c      	mov	r4, r9
 800098a:	4640      	mov	r0, r8
 800098c:	1bd2      	subs	r2, r2, r7
 800098e:	4094      	lsls	r4, r2
 8000990:	40f8      	lsrs	r0, r7
 8000992:	4304      	orrs	r4, r0
 8000994:	4640      	mov	r0, r8
 8000996:	4090      	lsls	r0, r2
 8000998:	1e42      	subs	r2, r0, #1
 800099a:	4190      	sbcs	r0, r2
 800099c:	464a      	mov	r2, r9
 800099e:	40fa      	lsrs	r2, r7
 80009a0:	4304      	orrs	r4, r0
 80009a2:	1889      	adds	r1, r1, r2
 80009a4:	e6ee      	b.n	8000784 <__aeabi_dadd+0x278>
 80009a6:	4c87      	ldr	r4, [pc, #540]	; (8000bc4 <__aeabi_dadd+0x6b8>)
 80009a8:	42a2      	cmp	r2, r4
 80009aa:	d100      	bne.n	80009ae <__aeabi_dadd+0x4a2>
 80009ac:	e6f9      	b.n	80007a2 <__aeabi_dadd+0x296>
 80009ae:	1818      	adds	r0, r3, r0
 80009b0:	4298      	cmp	r0, r3
 80009b2:	419b      	sbcs	r3, r3
 80009b4:	4449      	add	r1, r9
 80009b6:	425b      	negs	r3, r3
 80009b8:	18cb      	adds	r3, r1, r3
 80009ba:	07dc      	lsls	r4, r3, #31
 80009bc:	0840      	lsrs	r0, r0, #1
 80009be:	085b      	lsrs	r3, r3, #1
 80009c0:	469a      	mov	sl, r3
 80009c2:	0016      	movs	r6, r2
 80009c4:	4304      	orrs	r4, r0
 80009c6:	e6c6      	b.n	8000756 <__aeabi_dadd+0x24a>
 80009c8:	4642      	mov	r2, r8
 80009ca:	1ad4      	subs	r4, r2, r3
 80009cc:	45a0      	cmp	r8, r4
 80009ce:	4180      	sbcs	r0, r0
 80009d0:	464b      	mov	r3, r9
 80009d2:	4240      	negs	r0, r0
 80009d4:	1a59      	subs	r1, r3, r1
 80009d6:	1a0b      	subs	r3, r1, r0
 80009d8:	469a      	mov	sl, r3
 80009da:	4665      	mov	r5, ip
 80009dc:	e5ea      	b.n	80005b4 <__aeabi_dadd+0xa8>
 80009de:	464b      	mov	r3, r9
 80009e0:	464a      	mov	r2, r9
 80009e2:	08c0      	lsrs	r0, r0, #3
 80009e4:	075b      	lsls	r3, r3, #29
 80009e6:	4665      	mov	r5, ip
 80009e8:	4303      	orrs	r3, r0
 80009ea:	08d1      	lsrs	r1, r2, #3
 80009ec:	e6bd      	b.n	800076a <__aeabi_dadd+0x25e>
 80009ee:	2a00      	cmp	r2, #0
 80009f0:	d000      	beq.n	80009f4 <__aeabi_dadd+0x4e8>
 80009f2:	e08e      	b.n	8000b12 <__aeabi_dadd+0x606>
 80009f4:	464b      	mov	r3, r9
 80009f6:	4303      	orrs	r3, r0
 80009f8:	d117      	bne.n	8000a2a <__aeabi_dadd+0x51e>
 80009fa:	2180      	movs	r1, #128	; 0x80
 80009fc:	2500      	movs	r5, #0
 80009fe:	0309      	lsls	r1, r1, #12
 8000a00:	e6da      	b.n	80007b8 <__aeabi_dadd+0x2ac>
 8000a02:	074a      	lsls	r2, r1, #29
 8000a04:	08db      	lsrs	r3, r3, #3
 8000a06:	4313      	orrs	r3, r2
 8000a08:	08c9      	lsrs	r1, r1, #3
 8000a0a:	e6d1      	b.n	80007b0 <__aeabi_dadd+0x2a4>
 8000a0c:	1a1c      	subs	r4, r3, r0
 8000a0e:	464a      	mov	r2, r9
 8000a10:	42a3      	cmp	r3, r4
 8000a12:	419b      	sbcs	r3, r3
 8000a14:	1a89      	subs	r1, r1, r2
 8000a16:	425b      	negs	r3, r3
 8000a18:	1acb      	subs	r3, r1, r3
 8000a1a:	469a      	mov	sl, r3
 8000a1c:	2601      	movs	r6, #1
 8000a1e:	e5c1      	b.n	80005a4 <__aeabi_dadd+0x98>
 8000a20:	074a      	lsls	r2, r1, #29
 8000a22:	08db      	lsrs	r3, r3, #3
 8000a24:	4313      	orrs	r3, r2
 8000a26:	08c9      	lsrs	r1, r1, #3
 8000a28:	e69f      	b.n	800076a <__aeabi_dadd+0x25e>
 8000a2a:	4643      	mov	r3, r8
 8000a2c:	08d8      	lsrs	r0, r3, #3
 8000a2e:	464b      	mov	r3, r9
 8000a30:	464a      	mov	r2, r9
 8000a32:	075b      	lsls	r3, r3, #29
 8000a34:	4665      	mov	r5, ip
 8000a36:	4303      	orrs	r3, r0
 8000a38:	08d1      	lsrs	r1, r2, #3
 8000a3a:	e6b9      	b.n	80007b0 <__aeabi_dadd+0x2a4>
 8000a3c:	4643      	mov	r3, r8
 8000a3e:	08d8      	lsrs	r0, r3, #3
 8000a40:	464b      	mov	r3, r9
 8000a42:	464a      	mov	r2, r9
 8000a44:	075b      	lsls	r3, r3, #29
 8000a46:	4303      	orrs	r3, r0
 8000a48:	08d1      	lsrs	r1, r2, #3
 8000a4a:	e6b1      	b.n	80007b0 <__aeabi_dadd+0x2a4>
 8000a4c:	4319      	orrs	r1, r3
 8000a4e:	000c      	movs	r4, r1
 8000a50:	1e63      	subs	r3, r4, #1
 8000a52:	419c      	sbcs	r4, r3
 8000a54:	e6eb      	b.n	800082e <__aeabi_dadd+0x322>
 8000a56:	003c      	movs	r4, r7
 8000a58:	000d      	movs	r5, r1
 8000a5a:	3c20      	subs	r4, #32
 8000a5c:	40e5      	lsrs	r5, r4
 8000a5e:	2f20      	cmp	r7, #32
 8000a60:	d003      	beq.n	8000a6a <__aeabi_dadd+0x55e>
 8000a62:	2440      	movs	r4, #64	; 0x40
 8000a64:	1be4      	subs	r4, r4, r7
 8000a66:	40a1      	lsls	r1, r4
 8000a68:	430b      	orrs	r3, r1
 8000a6a:	001c      	movs	r4, r3
 8000a6c:	1e63      	subs	r3, r4, #1
 8000a6e:	419c      	sbcs	r4, r3
 8000a70:	432c      	orrs	r4, r5
 8000a72:	e770      	b.n	8000956 <__aeabi_dadd+0x44a>
 8000a74:	2a00      	cmp	r2, #0
 8000a76:	d0e1      	beq.n	8000a3c <__aeabi_dadd+0x530>
 8000a78:	464a      	mov	r2, r9
 8000a7a:	4302      	orrs	r2, r0
 8000a7c:	d0c1      	beq.n	8000a02 <__aeabi_dadd+0x4f6>
 8000a7e:	074a      	lsls	r2, r1, #29
 8000a80:	08db      	lsrs	r3, r3, #3
 8000a82:	4313      	orrs	r3, r2
 8000a84:	2280      	movs	r2, #128	; 0x80
 8000a86:	08c9      	lsrs	r1, r1, #3
 8000a88:	0312      	lsls	r2, r2, #12
 8000a8a:	4211      	tst	r1, r2
 8000a8c:	d008      	beq.n	8000aa0 <__aeabi_dadd+0x594>
 8000a8e:	4648      	mov	r0, r9
 8000a90:	08c4      	lsrs	r4, r0, #3
 8000a92:	4214      	tst	r4, r2
 8000a94:	d104      	bne.n	8000aa0 <__aeabi_dadd+0x594>
 8000a96:	4643      	mov	r3, r8
 8000a98:	0021      	movs	r1, r4
 8000a9a:	08db      	lsrs	r3, r3, #3
 8000a9c:	0742      	lsls	r2, r0, #29
 8000a9e:	4313      	orrs	r3, r2
 8000aa0:	0f5a      	lsrs	r2, r3, #29
 8000aa2:	00db      	lsls	r3, r3, #3
 8000aa4:	0752      	lsls	r2, r2, #29
 8000aa6:	08db      	lsrs	r3, r3, #3
 8000aa8:	4313      	orrs	r3, r2
 8000aaa:	e681      	b.n	80007b0 <__aeabi_dadd+0x2a4>
 8000aac:	464b      	mov	r3, r9
 8000aae:	4303      	orrs	r3, r0
 8000ab0:	d100      	bne.n	8000ab4 <__aeabi_dadd+0x5a8>
 8000ab2:	e714      	b.n	80008de <__aeabi_dadd+0x3d2>
 8000ab4:	464b      	mov	r3, r9
 8000ab6:	464a      	mov	r2, r9
 8000ab8:	08c0      	lsrs	r0, r0, #3
 8000aba:	075b      	lsls	r3, r3, #29
 8000abc:	4665      	mov	r5, ip
 8000abe:	4303      	orrs	r3, r0
 8000ac0:	08d1      	lsrs	r1, r2, #3
 8000ac2:	e655      	b.n	8000770 <__aeabi_dadd+0x264>
 8000ac4:	1ac4      	subs	r4, r0, r3
 8000ac6:	45a0      	cmp	r8, r4
 8000ac8:	4180      	sbcs	r0, r0
 8000aca:	464b      	mov	r3, r9
 8000acc:	4240      	negs	r0, r0
 8000ace:	1a59      	subs	r1, r3, r1
 8000ad0:	1a0b      	subs	r3, r1, r0
 8000ad2:	469a      	mov	sl, r3
 8000ad4:	4665      	mov	r5, ip
 8000ad6:	2601      	movs	r6, #1
 8000ad8:	e564      	b.n	80005a4 <__aeabi_dadd+0x98>
 8000ada:	1a1c      	subs	r4, r3, r0
 8000adc:	464a      	mov	r2, r9
 8000ade:	42a3      	cmp	r3, r4
 8000ae0:	4180      	sbcs	r0, r0
 8000ae2:	1a8a      	subs	r2, r1, r2
 8000ae4:	4240      	negs	r0, r0
 8000ae6:	1a12      	subs	r2, r2, r0
 8000ae8:	4692      	mov	sl, r2
 8000aea:	0212      	lsls	r2, r2, #8
 8000aec:	d549      	bpl.n	8000b82 <__aeabi_dadd+0x676>
 8000aee:	4642      	mov	r2, r8
 8000af0:	1ad4      	subs	r4, r2, r3
 8000af2:	45a0      	cmp	r8, r4
 8000af4:	4180      	sbcs	r0, r0
 8000af6:	464b      	mov	r3, r9
 8000af8:	4240      	negs	r0, r0
 8000afa:	1a59      	subs	r1, r3, r1
 8000afc:	1a0b      	subs	r3, r1, r0
 8000afe:	469a      	mov	sl, r3
 8000b00:	4665      	mov	r5, ip
 8000b02:	e57f      	b.n	8000604 <__aeabi_dadd+0xf8>
 8000b04:	464b      	mov	r3, r9
 8000b06:	464a      	mov	r2, r9
 8000b08:	08c0      	lsrs	r0, r0, #3
 8000b0a:	075b      	lsls	r3, r3, #29
 8000b0c:	4303      	orrs	r3, r0
 8000b0e:	08d1      	lsrs	r1, r2, #3
 8000b10:	e62b      	b.n	800076a <__aeabi_dadd+0x25e>
 8000b12:	464a      	mov	r2, r9
 8000b14:	08db      	lsrs	r3, r3, #3
 8000b16:	4302      	orrs	r2, r0
 8000b18:	d138      	bne.n	8000b8c <__aeabi_dadd+0x680>
 8000b1a:	074a      	lsls	r2, r1, #29
 8000b1c:	4313      	orrs	r3, r2
 8000b1e:	08c9      	lsrs	r1, r1, #3
 8000b20:	e646      	b.n	80007b0 <__aeabi_dadd+0x2a4>
 8000b22:	464b      	mov	r3, r9
 8000b24:	464a      	mov	r2, r9
 8000b26:	08c0      	lsrs	r0, r0, #3
 8000b28:	075b      	lsls	r3, r3, #29
 8000b2a:	4303      	orrs	r3, r0
 8000b2c:	08d1      	lsrs	r1, r2, #3
 8000b2e:	e61f      	b.n	8000770 <__aeabi_dadd+0x264>
 8000b30:	181c      	adds	r4, r3, r0
 8000b32:	429c      	cmp	r4, r3
 8000b34:	419b      	sbcs	r3, r3
 8000b36:	4449      	add	r1, r9
 8000b38:	468a      	mov	sl, r1
 8000b3a:	425b      	negs	r3, r3
 8000b3c:	449a      	add	sl, r3
 8000b3e:	4653      	mov	r3, sl
 8000b40:	021b      	lsls	r3, r3, #8
 8000b42:	d400      	bmi.n	8000b46 <__aeabi_dadd+0x63a>
 8000b44:	e607      	b.n	8000756 <__aeabi_dadd+0x24a>
 8000b46:	4652      	mov	r2, sl
 8000b48:	4b1f      	ldr	r3, [pc, #124]	; (8000bc8 <__aeabi_dadd+0x6bc>)
 8000b4a:	2601      	movs	r6, #1
 8000b4c:	401a      	ands	r2, r3
 8000b4e:	4692      	mov	sl, r2
 8000b50:	e601      	b.n	8000756 <__aeabi_dadd+0x24a>
 8000b52:	003c      	movs	r4, r7
 8000b54:	000e      	movs	r6, r1
 8000b56:	3c20      	subs	r4, #32
 8000b58:	40e6      	lsrs	r6, r4
 8000b5a:	2f20      	cmp	r7, #32
 8000b5c:	d003      	beq.n	8000b66 <__aeabi_dadd+0x65a>
 8000b5e:	2440      	movs	r4, #64	; 0x40
 8000b60:	1be4      	subs	r4, r4, r7
 8000b62:	40a1      	lsls	r1, r4
 8000b64:	430b      	orrs	r3, r1
 8000b66:	001c      	movs	r4, r3
 8000b68:	1e63      	subs	r3, r4, #1
 8000b6a:	419c      	sbcs	r4, r3
 8000b6c:	4334      	orrs	r4, r6
 8000b6e:	e65e      	b.n	800082e <__aeabi_dadd+0x322>
 8000b70:	4443      	add	r3, r8
 8000b72:	4283      	cmp	r3, r0
 8000b74:	4180      	sbcs	r0, r0
 8000b76:	4449      	add	r1, r9
 8000b78:	468a      	mov	sl, r1
 8000b7a:	4240      	negs	r0, r0
 8000b7c:	001c      	movs	r4, r3
 8000b7e:	4482      	add	sl, r0
 8000b80:	e6bc      	b.n	80008fc <__aeabi_dadd+0x3f0>
 8000b82:	4653      	mov	r3, sl
 8000b84:	4323      	orrs	r3, r4
 8000b86:	d100      	bne.n	8000b8a <__aeabi_dadd+0x67e>
 8000b88:	e6a9      	b.n	80008de <__aeabi_dadd+0x3d2>
 8000b8a:	e5e4      	b.n	8000756 <__aeabi_dadd+0x24a>
 8000b8c:	074a      	lsls	r2, r1, #29
 8000b8e:	4313      	orrs	r3, r2
 8000b90:	2280      	movs	r2, #128	; 0x80
 8000b92:	08c9      	lsrs	r1, r1, #3
 8000b94:	0312      	lsls	r2, r2, #12
 8000b96:	4211      	tst	r1, r2
 8000b98:	d009      	beq.n	8000bae <__aeabi_dadd+0x6a2>
 8000b9a:	4648      	mov	r0, r9
 8000b9c:	08c4      	lsrs	r4, r0, #3
 8000b9e:	4214      	tst	r4, r2
 8000ba0:	d105      	bne.n	8000bae <__aeabi_dadd+0x6a2>
 8000ba2:	4643      	mov	r3, r8
 8000ba4:	4665      	mov	r5, ip
 8000ba6:	0021      	movs	r1, r4
 8000ba8:	08db      	lsrs	r3, r3, #3
 8000baa:	0742      	lsls	r2, r0, #29
 8000bac:	4313      	orrs	r3, r2
 8000bae:	0f5a      	lsrs	r2, r3, #29
 8000bb0:	00db      	lsls	r3, r3, #3
 8000bb2:	08db      	lsrs	r3, r3, #3
 8000bb4:	0752      	lsls	r2, r2, #29
 8000bb6:	4313      	orrs	r3, r2
 8000bb8:	e5fa      	b.n	80007b0 <__aeabi_dadd+0x2a4>
 8000bba:	2300      	movs	r3, #0
 8000bbc:	4a01      	ldr	r2, [pc, #4]	; (8000bc4 <__aeabi_dadd+0x6b8>)
 8000bbe:	001c      	movs	r4, r3
 8000bc0:	e540      	b.n	8000644 <__aeabi_dadd+0x138>
 8000bc2:	46c0      	nop			; (mov r8, r8)
 8000bc4:	000007ff 	.word	0x000007ff
 8000bc8:	ff7fffff 	.word	0xff7fffff

08000bcc <__aeabi_ddiv>:
 8000bcc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000bce:	4657      	mov	r7, sl
 8000bd0:	464e      	mov	r6, r9
 8000bd2:	4645      	mov	r5, r8
 8000bd4:	46de      	mov	lr, fp
 8000bd6:	b5e0      	push	{r5, r6, r7, lr}
 8000bd8:	030c      	lsls	r4, r1, #12
 8000bda:	001f      	movs	r7, r3
 8000bdc:	004b      	lsls	r3, r1, #1
 8000bde:	4681      	mov	r9, r0
 8000be0:	4692      	mov	sl, r2
 8000be2:	0005      	movs	r5, r0
 8000be4:	b085      	sub	sp, #20
 8000be6:	0b24      	lsrs	r4, r4, #12
 8000be8:	0d5b      	lsrs	r3, r3, #21
 8000bea:	0fce      	lsrs	r6, r1, #31
 8000bec:	2b00      	cmp	r3, #0
 8000bee:	d100      	bne.n	8000bf2 <__aeabi_ddiv+0x26>
 8000bf0:	e152      	b.n	8000e98 <__aeabi_ddiv+0x2cc>
 8000bf2:	4ad2      	ldr	r2, [pc, #840]	; (8000f3c <__aeabi_ddiv+0x370>)
 8000bf4:	4293      	cmp	r3, r2
 8000bf6:	d100      	bne.n	8000bfa <__aeabi_ddiv+0x2e>
 8000bf8:	e16e      	b.n	8000ed8 <__aeabi_ddiv+0x30c>
 8000bfa:	0f42      	lsrs	r2, r0, #29
 8000bfc:	00e4      	lsls	r4, r4, #3
 8000bfe:	4314      	orrs	r4, r2
 8000c00:	2280      	movs	r2, #128	; 0x80
 8000c02:	0412      	lsls	r2, r2, #16
 8000c04:	4322      	orrs	r2, r4
 8000c06:	4690      	mov	r8, r2
 8000c08:	4acd      	ldr	r2, [pc, #820]	; (8000f40 <__aeabi_ddiv+0x374>)
 8000c0a:	00c5      	lsls	r5, r0, #3
 8000c0c:	4693      	mov	fp, r2
 8000c0e:	449b      	add	fp, r3
 8000c10:	2300      	movs	r3, #0
 8000c12:	4699      	mov	r9, r3
 8000c14:	9300      	str	r3, [sp, #0]
 8000c16:	033c      	lsls	r4, r7, #12
 8000c18:	007b      	lsls	r3, r7, #1
 8000c1a:	4650      	mov	r0, sl
 8000c1c:	0b24      	lsrs	r4, r4, #12
 8000c1e:	0d5b      	lsrs	r3, r3, #21
 8000c20:	0fff      	lsrs	r7, r7, #31
 8000c22:	2b00      	cmp	r3, #0
 8000c24:	d100      	bne.n	8000c28 <__aeabi_ddiv+0x5c>
 8000c26:	e11a      	b.n	8000e5e <__aeabi_ddiv+0x292>
 8000c28:	4ac4      	ldr	r2, [pc, #784]	; (8000f3c <__aeabi_ddiv+0x370>)
 8000c2a:	4293      	cmp	r3, r2
 8000c2c:	d100      	bne.n	8000c30 <__aeabi_ddiv+0x64>
 8000c2e:	e15e      	b.n	8000eee <__aeabi_ddiv+0x322>
 8000c30:	0f42      	lsrs	r2, r0, #29
 8000c32:	00e4      	lsls	r4, r4, #3
 8000c34:	4322      	orrs	r2, r4
 8000c36:	2480      	movs	r4, #128	; 0x80
 8000c38:	0424      	lsls	r4, r4, #16
 8000c3a:	4314      	orrs	r4, r2
 8000c3c:	4ac0      	ldr	r2, [pc, #768]	; (8000f40 <__aeabi_ddiv+0x374>)
 8000c3e:	00c1      	lsls	r1, r0, #3
 8000c40:	4694      	mov	ip, r2
 8000c42:	465a      	mov	r2, fp
 8000c44:	4463      	add	r3, ip
 8000c46:	1ad3      	subs	r3, r2, r3
 8000c48:	469b      	mov	fp, r3
 8000c4a:	2000      	movs	r0, #0
 8000c4c:	0033      	movs	r3, r6
 8000c4e:	407b      	eors	r3, r7
 8000c50:	469a      	mov	sl, r3
 8000c52:	464b      	mov	r3, r9
 8000c54:	2b0f      	cmp	r3, #15
 8000c56:	d827      	bhi.n	8000ca8 <__aeabi_ddiv+0xdc>
 8000c58:	4aba      	ldr	r2, [pc, #744]	; (8000f44 <__aeabi_ddiv+0x378>)
 8000c5a:	009b      	lsls	r3, r3, #2
 8000c5c:	58d3      	ldr	r3, [r2, r3]
 8000c5e:	469f      	mov	pc, r3
 8000c60:	46b2      	mov	sl, r6
 8000c62:	9b00      	ldr	r3, [sp, #0]
 8000c64:	2b02      	cmp	r3, #2
 8000c66:	d016      	beq.n	8000c96 <__aeabi_ddiv+0xca>
 8000c68:	2b03      	cmp	r3, #3
 8000c6a:	d100      	bne.n	8000c6e <__aeabi_ddiv+0xa2>
 8000c6c:	e287      	b.n	800117e <__aeabi_ddiv+0x5b2>
 8000c6e:	2b01      	cmp	r3, #1
 8000c70:	d000      	beq.n	8000c74 <__aeabi_ddiv+0xa8>
 8000c72:	e0d5      	b.n	8000e20 <__aeabi_ddiv+0x254>
 8000c74:	2300      	movs	r3, #0
 8000c76:	2200      	movs	r2, #0
 8000c78:	2500      	movs	r5, #0
 8000c7a:	051b      	lsls	r3, r3, #20
 8000c7c:	4313      	orrs	r3, r2
 8000c7e:	4652      	mov	r2, sl
 8000c80:	07d2      	lsls	r2, r2, #31
 8000c82:	4313      	orrs	r3, r2
 8000c84:	0028      	movs	r0, r5
 8000c86:	0019      	movs	r1, r3
 8000c88:	b005      	add	sp, #20
 8000c8a:	bcf0      	pop	{r4, r5, r6, r7}
 8000c8c:	46bb      	mov	fp, r7
 8000c8e:	46b2      	mov	sl, r6
 8000c90:	46a9      	mov	r9, r5
 8000c92:	46a0      	mov	r8, r4
 8000c94:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000c96:	2200      	movs	r2, #0
 8000c98:	2500      	movs	r5, #0
 8000c9a:	4ba8      	ldr	r3, [pc, #672]	; (8000f3c <__aeabi_ddiv+0x370>)
 8000c9c:	e7ed      	b.n	8000c7a <__aeabi_ddiv+0xae>
 8000c9e:	46ba      	mov	sl, r7
 8000ca0:	46a0      	mov	r8, r4
 8000ca2:	000d      	movs	r5, r1
 8000ca4:	9000      	str	r0, [sp, #0]
 8000ca6:	e7dc      	b.n	8000c62 <__aeabi_ddiv+0x96>
 8000ca8:	4544      	cmp	r4, r8
 8000caa:	d200      	bcs.n	8000cae <__aeabi_ddiv+0xe2>
 8000cac:	e1c4      	b.n	8001038 <__aeabi_ddiv+0x46c>
 8000cae:	d100      	bne.n	8000cb2 <__aeabi_ddiv+0xe6>
 8000cb0:	e1bf      	b.n	8001032 <__aeabi_ddiv+0x466>
 8000cb2:	2301      	movs	r3, #1
 8000cb4:	425b      	negs	r3, r3
 8000cb6:	469c      	mov	ip, r3
 8000cb8:	002e      	movs	r6, r5
 8000cba:	4640      	mov	r0, r8
 8000cbc:	2500      	movs	r5, #0
 8000cbe:	44e3      	add	fp, ip
 8000cc0:	0223      	lsls	r3, r4, #8
 8000cc2:	0e0c      	lsrs	r4, r1, #24
 8000cc4:	431c      	orrs	r4, r3
 8000cc6:	0c1b      	lsrs	r3, r3, #16
 8000cc8:	4699      	mov	r9, r3
 8000cca:	0423      	lsls	r3, r4, #16
 8000ccc:	020a      	lsls	r2, r1, #8
 8000cce:	0c1f      	lsrs	r7, r3, #16
 8000cd0:	4649      	mov	r1, r9
 8000cd2:	9200      	str	r2, [sp, #0]
 8000cd4:	9701      	str	r7, [sp, #4]
 8000cd6:	f7ff fa9d 	bl	8000214 <__aeabi_uidivmod>
 8000cda:	0002      	movs	r2, r0
 8000cdc:	437a      	muls	r2, r7
 8000cde:	040b      	lsls	r3, r1, #16
 8000ce0:	0c31      	lsrs	r1, r6, #16
 8000ce2:	4680      	mov	r8, r0
 8000ce4:	4319      	orrs	r1, r3
 8000ce6:	428a      	cmp	r2, r1
 8000ce8:	d907      	bls.n	8000cfa <__aeabi_ddiv+0x12e>
 8000cea:	2301      	movs	r3, #1
 8000cec:	425b      	negs	r3, r3
 8000cee:	469c      	mov	ip, r3
 8000cf0:	1909      	adds	r1, r1, r4
 8000cf2:	44e0      	add	r8, ip
 8000cf4:	428c      	cmp	r4, r1
 8000cf6:	d800      	bhi.n	8000cfa <__aeabi_ddiv+0x12e>
 8000cf8:	e201      	b.n	80010fe <__aeabi_ddiv+0x532>
 8000cfa:	1a88      	subs	r0, r1, r2
 8000cfc:	4649      	mov	r1, r9
 8000cfe:	f7ff fa89 	bl	8000214 <__aeabi_uidivmod>
 8000d02:	9a01      	ldr	r2, [sp, #4]
 8000d04:	0436      	lsls	r6, r6, #16
 8000d06:	4342      	muls	r2, r0
 8000d08:	0409      	lsls	r1, r1, #16
 8000d0a:	0c36      	lsrs	r6, r6, #16
 8000d0c:	0003      	movs	r3, r0
 8000d0e:	430e      	orrs	r6, r1
 8000d10:	42b2      	cmp	r2, r6
 8000d12:	d904      	bls.n	8000d1e <__aeabi_ddiv+0x152>
 8000d14:	1936      	adds	r6, r6, r4
 8000d16:	3b01      	subs	r3, #1
 8000d18:	42b4      	cmp	r4, r6
 8000d1a:	d800      	bhi.n	8000d1e <__aeabi_ddiv+0x152>
 8000d1c:	e1e9      	b.n	80010f2 <__aeabi_ddiv+0x526>
 8000d1e:	1ab0      	subs	r0, r6, r2
 8000d20:	4642      	mov	r2, r8
 8000d22:	9e00      	ldr	r6, [sp, #0]
 8000d24:	0412      	lsls	r2, r2, #16
 8000d26:	431a      	orrs	r2, r3
 8000d28:	0c33      	lsrs	r3, r6, #16
 8000d2a:	001f      	movs	r7, r3
 8000d2c:	0c11      	lsrs	r1, r2, #16
 8000d2e:	4690      	mov	r8, r2
 8000d30:	9302      	str	r3, [sp, #8]
 8000d32:	0413      	lsls	r3, r2, #16
 8000d34:	0432      	lsls	r2, r6, #16
 8000d36:	0c16      	lsrs	r6, r2, #16
 8000d38:	0032      	movs	r2, r6
 8000d3a:	0c1b      	lsrs	r3, r3, #16
 8000d3c:	435a      	muls	r2, r3
 8000d3e:	9603      	str	r6, [sp, #12]
 8000d40:	437b      	muls	r3, r7
 8000d42:	434e      	muls	r6, r1
 8000d44:	4379      	muls	r1, r7
 8000d46:	0c17      	lsrs	r7, r2, #16
 8000d48:	46bc      	mov	ip, r7
 8000d4a:	199b      	adds	r3, r3, r6
 8000d4c:	4463      	add	r3, ip
 8000d4e:	429e      	cmp	r6, r3
 8000d50:	d903      	bls.n	8000d5a <__aeabi_ddiv+0x18e>
 8000d52:	2680      	movs	r6, #128	; 0x80
 8000d54:	0276      	lsls	r6, r6, #9
 8000d56:	46b4      	mov	ip, r6
 8000d58:	4461      	add	r1, ip
 8000d5a:	0c1e      	lsrs	r6, r3, #16
 8000d5c:	1871      	adds	r1, r6, r1
 8000d5e:	0416      	lsls	r6, r2, #16
 8000d60:	041b      	lsls	r3, r3, #16
 8000d62:	0c36      	lsrs	r6, r6, #16
 8000d64:	199e      	adds	r6, r3, r6
 8000d66:	4288      	cmp	r0, r1
 8000d68:	d302      	bcc.n	8000d70 <__aeabi_ddiv+0x1a4>
 8000d6a:	d112      	bne.n	8000d92 <__aeabi_ddiv+0x1c6>
 8000d6c:	42b5      	cmp	r5, r6
 8000d6e:	d210      	bcs.n	8000d92 <__aeabi_ddiv+0x1c6>
 8000d70:	4643      	mov	r3, r8
 8000d72:	1e5a      	subs	r2, r3, #1
 8000d74:	9b00      	ldr	r3, [sp, #0]
 8000d76:	469c      	mov	ip, r3
 8000d78:	4465      	add	r5, ip
 8000d7a:	001f      	movs	r7, r3
 8000d7c:	429d      	cmp	r5, r3
 8000d7e:	419b      	sbcs	r3, r3
 8000d80:	425b      	negs	r3, r3
 8000d82:	191b      	adds	r3, r3, r4
 8000d84:	18c0      	adds	r0, r0, r3
 8000d86:	4284      	cmp	r4, r0
 8000d88:	d200      	bcs.n	8000d8c <__aeabi_ddiv+0x1c0>
 8000d8a:	e19e      	b.n	80010ca <__aeabi_ddiv+0x4fe>
 8000d8c:	d100      	bne.n	8000d90 <__aeabi_ddiv+0x1c4>
 8000d8e:	e199      	b.n	80010c4 <__aeabi_ddiv+0x4f8>
 8000d90:	4690      	mov	r8, r2
 8000d92:	1bae      	subs	r6, r5, r6
 8000d94:	42b5      	cmp	r5, r6
 8000d96:	41ad      	sbcs	r5, r5
 8000d98:	1a40      	subs	r0, r0, r1
 8000d9a:	426d      	negs	r5, r5
 8000d9c:	1b40      	subs	r0, r0, r5
 8000d9e:	4284      	cmp	r4, r0
 8000da0:	d100      	bne.n	8000da4 <__aeabi_ddiv+0x1d8>
 8000da2:	e1d2      	b.n	800114a <__aeabi_ddiv+0x57e>
 8000da4:	4649      	mov	r1, r9
 8000da6:	f7ff fa35 	bl	8000214 <__aeabi_uidivmod>
 8000daa:	9a01      	ldr	r2, [sp, #4]
 8000dac:	040b      	lsls	r3, r1, #16
 8000dae:	4342      	muls	r2, r0
 8000db0:	0c31      	lsrs	r1, r6, #16
 8000db2:	0005      	movs	r5, r0
 8000db4:	4319      	orrs	r1, r3
 8000db6:	428a      	cmp	r2, r1
 8000db8:	d900      	bls.n	8000dbc <__aeabi_ddiv+0x1f0>
 8000dba:	e16c      	b.n	8001096 <__aeabi_ddiv+0x4ca>
 8000dbc:	1a88      	subs	r0, r1, r2
 8000dbe:	4649      	mov	r1, r9
 8000dc0:	f7ff fa28 	bl	8000214 <__aeabi_uidivmod>
 8000dc4:	9a01      	ldr	r2, [sp, #4]
 8000dc6:	0436      	lsls	r6, r6, #16
 8000dc8:	4342      	muls	r2, r0
 8000dca:	0409      	lsls	r1, r1, #16
 8000dcc:	0c36      	lsrs	r6, r6, #16
 8000dce:	0003      	movs	r3, r0
 8000dd0:	430e      	orrs	r6, r1
 8000dd2:	42b2      	cmp	r2, r6
 8000dd4:	d900      	bls.n	8000dd8 <__aeabi_ddiv+0x20c>
 8000dd6:	e153      	b.n	8001080 <__aeabi_ddiv+0x4b4>
 8000dd8:	9803      	ldr	r0, [sp, #12]
 8000dda:	1ab6      	subs	r6, r6, r2
 8000ddc:	0002      	movs	r2, r0
 8000dde:	042d      	lsls	r5, r5, #16
 8000de0:	431d      	orrs	r5, r3
 8000de2:	9f02      	ldr	r7, [sp, #8]
 8000de4:	042b      	lsls	r3, r5, #16
 8000de6:	0c1b      	lsrs	r3, r3, #16
 8000de8:	435a      	muls	r2, r3
 8000dea:	437b      	muls	r3, r7
 8000dec:	469c      	mov	ip, r3
 8000dee:	0c29      	lsrs	r1, r5, #16
 8000df0:	4348      	muls	r0, r1
 8000df2:	0c13      	lsrs	r3, r2, #16
 8000df4:	4484      	add	ip, r0
 8000df6:	4463      	add	r3, ip
 8000df8:	4379      	muls	r1, r7
 8000dfa:	4298      	cmp	r0, r3
 8000dfc:	d903      	bls.n	8000e06 <__aeabi_ddiv+0x23a>
 8000dfe:	2080      	movs	r0, #128	; 0x80
 8000e00:	0240      	lsls	r0, r0, #9
 8000e02:	4684      	mov	ip, r0
 8000e04:	4461      	add	r1, ip
 8000e06:	0c18      	lsrs	r0, r3, #16
 8000e08:	0412      	lsls	r2, r2, #16
 8000e0a:	041b      	lsls	r3, r3, #16
 8000e0c:	0c12      	lsrs	r2, r2, #16
 8000e0e:	1840      	adds	r0, r0, r1
 8000e10:	189b      	adds	r3, r3, r2
 8000e12:	4286      	cmp	r6, r0
 8000e14:	d200      	bcs.n	8000e18 <__aeabi_ddiv+0x24c>
 8000e16:	e100      	b.n	800101a <__aeabi_ddiv+0x44e>
 8000e18:	d100      	bne.n	8000e1c <__aeabi_ddiv+0x250>
 8000e1a:	e0fb      	b.n	8001014 <__aeabi_ddiv+0x448>
 8000e1c:	2301      	movs	r3, #1
 8000e1e:	431d      	orrs	r5, r3
 8000e20:	4b49      	ldr	r3, [pc, #292]	; (8000f48 <__aeabi_ddiv+0x37c>)
 8000e22:	445b      	add	r3, fp
 8000e24:	2b00      	cmp	r3, #0
 8000e26:	dc00      	bgt.n	8000e2a <__aeabi_ddiv+0x25e>
 8000e28:	e0aa      	b.n	8000f80 <__aeabi_ddiv+0x3b4>
 8000e2a:	076a      	lsls	r2, r5, #29
 8000e2c:	d000      	beq.n	8000e30 <__aeabi_ddiv+0x264>
 8000e2e:	e13d      	b.n	80010ac <__aeabi_ddiv+0x4e0>
 8000e30:	08e9      	lsrs	r1, r5, #3
 8000e32:	4642      	mov	r2, r8
 8000e34:	01d2      	lsls	r2, r2, #7
 8000e36:	d506      	bpl.n	8000e46 <__aeabi_ddiv+0x27a>
 8000e38:	4642      	mov	r2, r8
 8000e3a:	4b44      	ldr	r3, [pc, #272]	; (8000f4c <__aeabi_ddiv+0x380>)
 8000e3c:	401a      	ands	r2, r3
 8000e3e:	2380      	movs	r3, #128	; 0x80
 8000e40:	4690      	mov	r8, r2
 8000e42:	00db      	lsls	r3, r3, #3
 8000e44:	445b      	add	r3, fp
 8000e46:	4a42      	ldr	r2, [pc, #264]	; (8000f50 <__aeabi_ddiv+0x384>)
 8000e48:	4293      	cmp	r3, r2
 8000e4a:	dd00      	ble.n	8000e4e <__aeabi_ddiv+0x282>
 8000e4c:	e723      	b.n	8000c96 <__aeabi_ddiv+0xca>
 8000e4e:	4642      	mov	r2, r8
 8000e50:	055b      	lsls	r3, r3, #21
 8000e52:	0755      	lsls	r5, r2, #29
 8000e54:	0252      	lsls	r2, r2, #9
 8000e56:	430d      	orrs	r5, r1
 8000e58:	0b12      	lsrs	r2, r2, #12
 8000e5a:	0d5b      	lsrs	r3, r3, #21
 8000e5c:	e70d      	b.n	8000c7a <__aeabi_ddiv+0xae>
 8000e5e:	4651      	mov	r1, sl
 8000e60:	4321      	orrs	r1, r4
 8000e62:	d100      	bne.n	8000e66 <__aeabi_ddiv+0x29a>
 8000e64:	e07c      	b.n	8000f60 <__aeabi_ddiv+0x394>
 8000e66:	2c00      	cmp	r4, #0
 8000e68:	d100      	bne.n	8000e6c <__aeabi_ddiv+0x2a0>
 8000e6a:	e0fb      	b.n	8001064 <__aeabi_ddiv+0x498>
 8000e6c:	0020      	movs	r0, r4
 8000e6e:	f001 f977 	bl	8002160 <__clzsi2>
 8000e72:	0002      	movs	r2, r0
 8000e74:	3a0b      	subs	r2, #11
 8000e76:	231d      	movs	r3, #29
 8000e78:	1a9b      	subs	r3, r3, r2
 8000e7a:	4652      	mov	r2, sl
 8000e7c:	0001      	movs	r1, r0
 8000e7e:	40da      	lsrs	r2, r3
 8000e80:	4653      	mov	r3, sl
 8000e82:	3908      	subs	r1, #8
 8000e84:	408b      	lsls	r3, r1
 8000e86:	408c      	lsls	r4, r1
 8000e88:	0019      	movs	r1, r3
 8000e8a:	4314      	orrs	r4, r2
 8000e8c:	4b31      	ldr	r3, [pc, #196]	; (8000f54 <__aeabi_ddiv+0x388>)
 8000e8e:	4458      	add	r0, fp
 8000e90:	469b      	mov	fp, r3
 8000e92:	4483      	add	fp, r0
 8000e94:	2000      	movs	r0, #0
 8000e96:	e6d9      	b.n	8000c4c <__aeabi_ddiv+0x80>
 8000e98:	0003      	movs	r3, r0
 8000e9a:	4323      	orrs	r3, r4
 8000e9c:	4698      	mov	r8, r3
 8000e9e:	d044      	beq.n	8000f2a <__aeabi_ddiv+0x35e>
 8000ea0:	2c00      	cmp	r4, #0
 8000ea2:	d100      	bne.n	8000ea6 <__aeabi_ddiv+0x2da>
 8000ea4:	e0cf      	b.n	8001046 <__aeabi_ddiv+0x47a>
 8000ea6:	0020      	movs	r0, r4
 8000ea8:	f001 f95a 	bl	8002160 <__clzsi2>
 8000eac:	0001      	movs	r1, r0
 8000eae:	0002      	movs	r2, r0
 8000eb0:	390b      	subs	r1, #11
 8000eb2:	231d      	movs	r3, #29
 8000eb4:	1a5b      	subs	r3, r3, r1
 8000eb6:	4649      	mov	r1, r9
 8000eb8:	0010      	movs	r0, r2
 8000eba:	40d9      	lsrs	r1, r3
 8000ebc:	3808      	subs	r0, #8
 8000ebe:	4084      	lsls	r4, r0
 8000ec0:	000b      	movs	r3, r1
 8000ec2:	464d      	mov	r5, r9
 8000ec4:	4323      	orrs	r3, r4
 8000ec6:	4698      	mov	r8, r3
 8000ec8:	4085      	lsls	r5, r0
 8000eca:	4b23      	ldr	r3, [pc, #140]	; (8000f58 <__aeabi_ddiv+0x38c>)
 8000ecc:	1a9b      	subs	r3, r3, r2
 8000ece:	469b      	mov	fp, r3
 8000ed0:	2300      	movs	r3, #0
 8000ed2:	4699      	mov	r9, r3
 8000ed4:	9300      	str	r3, [sp, #0]
 8000ed6:	e69e      	b.n	8000c16 <__aeabi_ddiv+0x4a>
 8000ed8:	0002      	movs	r2, r0
 8000eda:	4322      	orrs	r2, r4
 8000edc:	4690      	mov	r8, r2
 8000ede:	d11d      	bne.n	8000f1c <__aeabi_ddiv+0x350>
 8000ee0:	2208      	movs	r2, #8
 8000ee2:	469b      	mov	fp, r3
 8000ee4:	2302      	movs	r3, #2
 8000ee6:	2500      	movs	r5, #0
 8000ee8:	4691      	mov	r9, r2
 8000eea:	9300      	str	r3, [sp, #0]
 8000eec:	e693      	b.n	8000c16 <__aeabi_ddiv+0x4a>
 8000eee:	4651      	mov	r1, sl
 8000ef0:	4321      	orrs	r1, r4
 8000ef2:	d109      	bne.n	8000f08 <__aeabi_ddiv+0x33c>
 8000ef4:	2302      	movs	r3, #2
 8000ef6:	464a      	mov	r2, r9
 8000ef8:	431a      	orrs	r2, r3
 8000efa:	4b18      	ldr	r3, [pc, #96]	; (8000f5c <__aeabi_ddiv+0x390>)
 8000efc:	4691      	mov	r9, r2
 8000efe:	469c      	mov	ip, r3
 8000f00:	2400      	movs	r4, #0
 8000f02:	2002      	movs	r0, #2
 8000f04:	44e3      	add	fp, ip
 8000f06:	e6a1      	b.n	8000c4c <__aeabi_ddiv+0x80>
 8000f08:	2303      	movs	r3, #3
 8000f0a:	464a      	mov	r2, r9
 8000f0c:	431a      	orrs	r2, r3
 8000f0e:	4b13      	ldr	r3, [pc, #76]	; (8000f5c <__aeabi_ddiv+0x390>)
 8000f10:	4691      	mov	r9, r2
 8000f12:	469c      	mov	ip, r3
 8000f14:	4651      	mov	r1, sl
 8000f16:	2003      	movs	r0, #3
 8000f18:	44e3      	add	fp, ip
 8000f1a:	e697      	b.n	8000c4c <__aeabi_ddiv+0x80>
 8000f1c:	220c      	movs	r2, #12
 8000f1e:	469b      	mov	fp, r3
 8000f20:	2303      	movs	r3, #3
 8000f22:	46a0      	mov	r8, r4
 8000f24:	4691      	mov	r9, r2
 8000f26:	9300      	str	r3, [sp, #0]
 8000f28:	e675      	b.n	8000c16 <__aeabi_ddiv+0x4a>
 8000f2a:	2304      	movs	r3, #4
 8000f2c:	4699      	mov	r9, r3
 8000f2e:	2300      	movs	r3, #0
 8000f30:	469b      	mov	fp, r3
 8000f32:	3301      	adds	r3, #1
 8000f34:	2500      	movs	r5, #0
 8000f36:	9300      	str	r3, [sp, #0]
 8000f38:	e66d      	b.n	8000c16 <__aeabi_ddiv+0x4a>
 8000f3a:	46c0      	nop			; (mov r8, r8)
 8000f3c:	000007ff 	.word	0x000007ff
 8000f40:	fffffc01 	.word	0xfffffc01
 8000f44:	08003740 	.word	0x08003740
 8000f48:	000003ff 	.word	0x000003ff
 8000f4c:	feffffff 	.word	0xfeffffff
 8000f50:	000007fe 	.word	0x000007fe
 8000f54:	000003f3 	.word	0x000003f3
 8000f58:	fffffc0d 	.word	0xfffffc0d
 8000f5c:	fffff801 	.word	0xfffff801
 8000f60:	464a      	mov	r2, r9
 8000f62:	2301      	movs	r3, #1
 8000f64:	431a      	orrs	r2, r3
 8000f66:	4691      	mov	r9, r2
 8000f68:	2400      	movs	r4, #0
 8000f6a:	2001      	movs	r0, #1
 8000f6c:	e66e      	b.n	8000c4c <__aeabi_ddiv+0x80>
 8000f6e:	2300      	movs	r3, #0
 8000f70:	2280      	movs	r2, #128	; 0x80
 8000f72:	469a      	mov	sl, r3
 8000f74:	2500      	movs	r5, #0
 8000f76:	4b88      	ldr	r3, [pc, #544]	; (8001198 <__aeabi_ddiv+0x5cc>)
 8000f78:	0312      	lsls	r2, r2, #12
 8000f7a:	e67e      	b.n	8000c7a <__aeabi_ddiv+0xae>
 8000f7c:	2501      	movs	r5, #1
 8000f7e:	426d      	negs	r5, r5
 8000f80:	2201      	movs	r2, #1
 8000f82:	1ad2      	subs	r2, r2, r3
 8000f84:	2a38      	cmp	r2, #56	; 0x38
 8000f86:	dd00      	ble.n	8000f8a <__aeabi_ddiv+0x3be>
 8000f88:	e674      	b.n	8000c74 <__aeabi_ddiv+0xa8>
 8000f8a:	2a1f      	cmp	r2, #31
 8000f8c:	dc00      	bgt.n	8000f90 <__aeabi_ddiv+0x3c4>
 8000f8e:	e0bd      	b.n	800110c <__aeabi_ddiv+0x540>
 8000f90:	211f      	movs	r1, #31
 8000f92:	4249      	negs	r1, r1
 8000f94:	1acb      	subs	r3, r1, r3
 8000f96:	4641      	mov	r1, r8
 8000f98:	40d9      	lsrs	r1, r3
 8000f9a:	000b      	movs	r3, r1
 8000f9c:	2a20      	cmp	r2, #32
 8000f9e:	d004      	beq.n	8000faa <__aeabi_ddiv+0x3de>
 8000fa0:	4641      	mov	r1, r8
 8000fa2:	4a7e      	ldr	r2, [pc, #504]	; (800119c <__aeabi_ddiv+0x5d0>)
 8000fa4:	445a      	add	r2, fp
 8000fa6:	4091      	lsls	r1, r2
 8000fa8:	430d      	orrs	r5, r1
 8000faa:	0029      	movs	r1, r5
 8000fac:	1e4a      	subs	r2, r1, #1
 8000fae:	4191      	sbcs	r1, r2
 8000fb0:	4319      	orrs	r1, r3
 8000fb2:	2307      	movs	r3, #7
 8000fb4:	001d      	movs	r5, r3
 8000fb6:	2200      	movs	r2, #0
 8000fb8:	400d      	ands	r5, r1
 8000fba:	420b      	tst	r3, r1
 8000fbc:	d100      	bne.n	8000fc0 <__aeabi_ddiv+0x3f4>
 8000fbe:	e0d0      	b.n	8001162 <__aeabi_ddiv+0x596>
 8000fc0:	220f      	movs	r2, #15
 8000fc2:	2300      	movs	r3, #0
 8000fc4:	400a      	ands	r2, r1
 8000fc6:	2a04      	cmp	r2, #4
 8000fc8:	d100      	bne.n	8000fcc <__aeabi_ddiv+0x400>
 8000fca:	e0c7      	b.n	800115c <__aeabi_ddiv+0x590>
 8000fcc:	1d0a      	adds	r2, r1, #4
 8000fce:	428a      	cmp	r2, r1
 8000fd0:	4189      	sbcs	r1, r1
 8000fd2:	4249      	negs	r1, r1
 8000fd4:	185b      	adds	r3, r3, r1
 8000fd6:	0011      	movs	r1, r2
 8000fd8:	021a      	lsls	r2, r3, #8
 8000fda:	d400      	bmi.n	8000fde <__aeabi_ddiv+0x412>
 8000fdc:	e0be      	b.n	800115c <__aeabi_ddiv+0x590>
 8000fde:	2301      	movs	r3, #1
 8000fe0:	2200      	movs	r2, #0
 8000fe2:	2500      	movs	r5, #0
 8000fe4:	e649      	b.n	8000c7a <__aeabi_ddiv+0xae>
 8000fe6:	2280      	movs	r2, #128	; 0x80
 8000fe8:	4643      	mov	r3, r8
 8000fea:	0312      	lsls	r2, r2, #12
 8000fec:	4213      	tst	r3, r2
 8000fee:	d008      	beq.n	8001002 <__aeabi_ddiv+0x436>
 8000ff0:	4214      	tst	r4, r2
 8000ff2:	d106      	bne.n	8001002 <__aeabi_ddiv+0x436>
 8000ff4:	4322      	orrs	r2, r4
 8000ff6:	0312      	lsls	r2, r2, #12
 8000ff8:	46ba      	mov	sl, r7
 8000ffa:	000d      	movs	r5, r1
 8000ffc:	4b66      	ldr	r3, [pc, #408]	; (8001198 <__aeabi_ddiv+0x5cc>)
 8000ffe:	0b12      	lsrs	r2, r2, #12
 8001000:	e63b      	b.n	8000c7a <__aeabi_ddiv+0xae>
 8001002:	2280      	movs	r2, #128	; 0x80
 8001004:	4643      	mov	r3, r8
 8001006:	0312      	lsls	r2, r2, #12
 8001008:	431a      	orrs	r2, r3
 800100a:	0312      	lsls	r2, r2, #12
 800100c:	46b2      	mov	sl, r6
 800100e:	4b62      	ldr	r3, [pc, #392]	; (8001198 <__aeabi_ddiv+0x5cc>)
 8001010:	0b12      	lsrs	r2, r2, #12
 8001012:	e632      	b.n	8000c7a <__aeabi_ddiv+0xae>
 8001014:	2b00      	cmp	r3, #0
 8001016:	d100      	bne.n	800101a <__aeabi_ddiv+0x44e>
 8001018:	e702      	b.n	8000e20 <__aeabi_ddiv+0x254>
 800101a:	19a6      	adds	r6, r4, r6
 800101c:	1e6a      	subs	r2, r5, #1
 800101e:	42a6      	cmp	r6, r4
 8001020:	d200      	bcs.n	8001024 <__aeabi_ddiv+0x458>
 8001022:	e089      	b.n	8001138 <__aeabi_ddiv+0x56c>
 8001024:	4286      	cmp	r6, r0
 8001026:	d200      	bcs.n	800102a <__aeabi_ddiv+0x45e>
 8001028:	e09f      	b.n	800116a <__aeabi_ddiv+0x59e>
 800102a:	d100      	bne.n	800102e <__aeabi_ddiv+0x462>
 800102c:	e0af      	b.n	800118e <__aeabi_ddiv+0x5c2>
 800102e:	0015      	movs	r5, r2
 8001030:	e6f4      	b.n	8000e1c <__aeabi_ddiv+0x250>
 8001032:	42a9      	cmp	r1, r5
 8001034:	d900      	bls.n	8001038 <__aeabi_ddiv+0x46c>
 8001036:	e63c      	b.n	8000cb2 <__aeabi_ddiv+0xe6>
 8001038:	4643      	mov	r3, r8
 800103a:	07de      	lsls	r6, r3, #31
 800103c:	0858      	lsrs	r0, r3, #1
 800103e:	086b      	lsrs	r3, r5, #1
 8001040:	431e      	orrs	r6, r3
 8001042:	07ed      	lsls	r5, r5, #31
 8001044:	e63c      	b.n	8000cc0 <__aeabi_ddiv+0xf4>
 8001046:	f001 f88b 	bl	8002160 <__clzsi2>
 800104a:	0001      	movs	r1, r0
 800104c:	0002      	movs	r2, r0
 800104e:	3115      	adds	r1, #21
 8001050:	3220      	adds	r2, #32
 8001052:	291c      	cmp	r1, #28
 8001054:	dc00      	bgt.n	8001058 <__aeabi_ddiv+0x48c>
 8001056:	e72c      	b.n	8000eb2 <__aeabi_ddiv+0x2e6>
 8001058:	464b      	mov	r3, r9
 800105a:	3808      	subs	r0, #8
 800105c:	4083      	lsls	r3, r0
 800105e:	2500      	movs	r5, #0
 8001060:	4698      	mov	r8, r3
 8001062:	e732      	b.n	8000eca <__aeabi_ddiv+0x2fe>
 8001064:	f001 f87c 	bl	8002160 <__clzsi2>
 8001068:	0003      	movs	r3, r0
 800106a:	001a      	movs	r2, r3
 800106c:	3215      	adds	r2, #21
 800106e:	3020      	adds	r0, #32
 8001070:	2a1c      	cmp	r2, #28
 8001072:	dc00      	bgt.n	8001076 <__aeabi_ddiv+0x4aa>
 8001074:	e6ff      	b.n	8000e76 <__aeabi_ddiv+0x2aa>
 8001076:	4654      	mov	r4, sl
 8001078:	3b08      	subs	r3, #8
 800107a:	2100      	movs	r1, #0
 800107c:	409c      	lsls	r4, r3
 800107e:	e705      	b.n	8000e8c <__aeabi_ddiv+0x2c0>
 8001080:	1936      	adds	r6, r6, r4
 8001082:	3b01      	subs	r3, #1
 8001084:	42b4      	cmp	r4, r6
 8001086:	d900      	bls.n	800108a <__aeabi_ddiv+0x4be>
 8001088:	e6a6      	b.n	8000dd8 <__aeabi_ddiv+0x20c>
 800108a:	42b2      	cmp	r2, r6
 800108c:	d800      	bhi.n	8001090 <__aeabi_ddiv+0x4c4>
 800108e:	e6a3      	b.n	8000dd8 <__aeabi_ddiv+0x20c>
 8001090:	1e83      	subs	r3, r0, #2
 8001092:	1936      	adds	r6, r6, r4
 8001094:	e6a0      	b.n	8000dd8 <__aeabi_ddiv+0x20c>
 8001096:	1909      	adds	r1, r1, r4
 8001098:	3d01      	subs	r5, #1
 800109a:	428c      	cmp	r4, r1
 800109c:	d900      	bls.n	80010a0 <__aeabi_ddiv+0x4d4>
 800109e:	e68d      	b.n	8000dbc <__aeabi_ddiv+0x1f0>
 80010a0:	428a      	cmp	r2, r1
 80010a2:	d800      	bhi.n	80010a6 <__aeabi_ddiv+0x4da>
 80010a4:	e68a      	b.n	8000dbc <__aeabi_ddiv+0x1f0>
 80010a6:	1e85      	subs	r5, r0, #2
 80010a8:	1909      	adds	r1, r1, r4
 80010aa:	e687      	b.n	8000dbc <__aeabi_ddiv+0x1f0>
 80010ac:	220f      	movs	r2, #15
 80010ae:	402a      	ands	r2, r5
 80010b0:	2a04      	cmp	r2, #4
 80010b2:	d100      	bne.n	80010b6 <__aeabi_ddiv+0x4ea>
 80010b4:	e6bc      	b.n	8000e30 <__aeabi_ddiv+0x264>
 80010b6:	1d29      	adds	r1, r5, #4
 80010b8:	42a9      	cmp	r1, r5
 80010ba:	41ad      	sbcs	r5, r5
 80010bc:	426d      	negs	r5, r5
 80010be:	08c9      	lsrs	r1, r1, #3
 80010c0:	44a8      	add	r8, r5
 80010c2:	e6b6      	b.n	8000e32 <__aeabi_ddiv+0x266>
 80010c4:	42af      	cmp	r7, r5
 80010c6:	d900      	bls.n	80010ca <__aeabi_ddiv+0x4fe>
 80010c8:	e662      	b.n	8000d90 <__aeabi_ddiv+0x1c4>
 80010ca:	4281      	cmp	r1, r0
 80010cc:	d804      	bhi.n	80010d8 <__aeabi_ddiv+0x50c>
 80010ce:	d000      	beq.n	80010d2 <__aeabi_ddiv+0x506>
 80010d0:	e65e      	b.n	8000d90 <__aeabi_ddiv+0x1c4>
 80010d2:	42ae      	cmp	r6, r5
 80010d4:	d800      	bhi.n	80010d8 <__aeabi_ddiv+0x50c>
 80010d6:	e65b      	b.n	8000d90 <__aeabi_ddiv+0x1c4>
 80010d8:	2302      	movs	r3, #2
 80010da:	425b      	negs	r3, r3
 80010dc:	469c      	mov	ip, r3
 80010de:	9b00      	ldr	r3, [sp, #0]
 80010e0:	44e0      	add	r8, ip
 80010e2:	469c      	mov	ip, r3
 80010e4:	4465      	add	r5, ip
 80010e6:	429d      	cmp	r5, r3
 80010e8:	419b      	sbcs	r3, r3
 80010ea:	425b      	negs	r3, r3
 80010ec:	191b      	adds	r3, r3, r4
 80010ee:	18c0      	adds	r0, r0, r3
 80010f0:	e64f      	b.n	8000d92 <__aeabi_ddiv+0x1c6>
 80010f2:	42b2      	cmp	r2, r6
 80010f4:	d800      	bhi.n	80010f8 <__aeabi_ddiv+0x52c>
 80010f6:	e612      	b.n	8000d1e <__aeabi_ddiv+0x152>
 80010f8:	1e83      	subs	r3, r0, #2
 80010fa:	1936      	adds	r6, r6, r4
 80010fc:	e60f      	b.n	8000d1e <__aeabi_ddiv+0x152>
 80010fe:	428a      	cmp	r2, r1
 8001100:	d800      	bhi.n	8001104 <__aeabi_ddiv+0x538>
 8001102:	e5fa      	b.n	8000cfa <__aeabi_ddiv+0x12e>
 8001104:	1e83      	subs	r3, r0, #2
 8001106:	4698      	mov	r8, r3
 8001108:	1909      	adds	r1, r1, r4
 800110a:	e5f6      	b.n	8000cfa <__aeabi_ddiv+0x12e>
 800110c:	4b24      	ldr	r3, [pc, #144]	; (80011a0 <__aeabi_ddiv+0x5d4>)
 800110e:	0028      	movs	r0, r5
 8001110:	445b      	add	r3, fp
 8001112:	4641      	mov	r1, r8
 8001114:	409d      	lsls	r5, r3
 8001116:	4099      	lsls	r1, r3
 8001118:	40d0      	lsrs	r0, r2
 800111a:	1e6b      	subs	r3, r5, #1
 800111c:	419d      	sbcs	r5, r3
 800111e:	4643      	mov	r3, r8
 8001120:	4301      	orrs	r1, r0
 8001122:	4329      	orrs	r1, r5
 8001124:	40d3      	lsrs	r3, r2
 8001126:	074a      	lsls	r2, r1, #29
 8001128:	d100      	bne.n	800112c <__aeabi_ddiv+0x560>
 800112a:	e755      	b.n	8000fd8 <__aeabi_ddiv+0x40c>
 800112c:	220f      	movs	r2, #15
 800112e:	400a      	ands	r2, r1
 8001130:	2a04      	cmp	r2, #4
 8001132:	d000      	beq.n	8001136 <__aeabi_ddiv+0x56a>
 8001134:	e74a      	b.n	8000fcc <__aeabi_ddiv+0x400>
 8001136:	e74f      	b.n	8000fd8 <__aeabi_ddiv+0x40c>
 8001138:	0015      	movs	r5, r2
 800113a:	4286      	cmp	r6, r0
 800113c:	d000      	beq.n	8001140 <__aeabi_ddiv+0x574>
 800113e:	e66d      	b.n	8000e1c <__aeabi_ddiv+0x250>
 8001140:	9a00      	ldr	r2, [sp, #0]
 8001142:	429a      	cmp	r2, r3
 8001144:	d000      	beq.n	8001148 <__aeabi_ddiv+0x57c>
 8001146:	e669      	b.n	8000e1c <__aeabi_ddiv+0x250>
 8001148:	e66a      	b.n	8000e20 <__aeabi_ddiv+0x254>
 800114a:	4b16      	ldr	r3, [pc, #88]	; (80011a4 <__aeabi_ddiv+0x5d8>)
 800114c:	445b      	add	r3, fp
 800114e:	2b00      	cmp	r3, #0
 8001150:	dc00      	bgt.n	8001154 <__aeabi_ddiv+0x588>
 8001152:	e713      	b.n	8000f7c <__aeabi_ddiv+0x3b0>
 8001154:	2501      	movs	r5, #1
 8001156:	2100      	movs	r1, #0
 8001158:	44a8      	add	r8, r5
 800115a:	e66a      	b.n	8000e32 <__aeabi_ddiv+0x266>
 800115c:	075d      	lsls	r5, r3, #29
 800115e:	025b      	lsls	r3, r3, #9
 8001160:	0b1a      	lsrs	r2, r3, #12
 8001162:	08c9      	lsrs	r1, r1, #3
 8001164:	2300      	movs	r3, #0
 8001166:	430d      	orrs	r5, r1
 8001168:	e587      	b.n	8000c7a <__aeabi_ddiv+0xae>
 800116a:	9900      	ldr	r1, [sp, #0]
 800116c:	3d02      	subs	r5, #2
 800116e:	004a      	lsls	r2, r1, #1
 8001170:	428a      	cmp	r2, r1
 8001172:	41bf      	sbcs	r7, r7
 8001174:	427f      	negs	r7, r7
 8001176:	193f      	adds	r7, r7, r4
 8001178:	19f6      	adds	r6, r6, r7
 800117a:	9200      	str	r2, [sp, #0]
 800117c:	e7dd      	b.n	800113a <__aeabi_ddiv+0x56e>
 800117e:	2280      	movs	r2, #128	; 0x80
 8001180:	4643      	mov	r3, r8
 8001182:	0312      	lsls	r2, r2, #12
 8001184:	431a      	orrs	r2, r3
 8001186:	0312      	lsls	r2, r2, #12
 8001188:	4b03      	ldr	r3, [pc, #12]	; (8001198 <__aeabi_ddiv+0x5cc>)
 800118a:	0b12      	lsrs	r2, r2, #12
 800118c:	e575      	b.n	8000c7a <__aeabi_ddiv+0xae>
 800118e:	9900      	ldr	r1, [sp, #0]
 8001190:	4299      	cmp	r1, r3
 8001192:	d3ea      	bcc.n	800116a <__aeabi_ddiv+0x59e>
 8001194:	0015      	movs	r5, r2
 8001196:	e7d3      	b.n	8001140 <__aeabi_ddiv+0x574>
 8001198:	000007ff 	.word	0x000007ff
 800119c:	0000043e 	.word	0x0000043e
 80011a0:	0000041e 	.word	0x0000041e
 80011a4:	000003ff 	.word	0x000003ff

080011a8 <__eqdf2>:
 80011a8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80011aa:	464e      	mov	r6, r9
 80011ac:	4645      	mov	r5, r8
 80011ae:	46de      	mov	lr, fp
 80011b0:	4657      	mov	r7, sl
 80011b2:	4690      	mov	r8, r2
 80011b4:	b5e0      	push	{r5, r6, r7, lr}
 80011b6:	0017      	movs	r7, r2
 80011b8:	031a      	lsls	r2, r3, #12
 80011ba:	0b12      	lsrs	r2, r2, #12
 80011bc:	0005      	movs	r5, r0
 80011be:	4684      	mov	ip, r0
 80011c0:	4819      	ldr	r0, [pc, #100]	; (8001228 <__eqdf2+0x80>)
 80011c2:	030e      	lsls	r6, r1, #12
 80011c4:	004c      	lsls	r4, r1, #1
 80011c6:	4691      	mov	r9, r2
 80011c8:	005a      	lsls	r2, r3, #1
 80011ca:	0fdb      	lsrs	r3, r3, #31
 80011cc:	469b      	mov	fp, r3
 80011ce:	0b36      	lsrs	r6, r6, #12
 80011d0:	0d64      	lsrs	r4, r4, #21
 80011d2:	0fc9      	lsrs	r1, r1, #31
 80011d4:	0d52      	lsrs	r2, r2, #21
 80011d6:	4284      	cmp	r4, r0
 80011d8:	d019      	beq.n	800120e <__eqdf2+0x66>
 80011da:	4282      	cmp	r2, r0
 80011dc:	d010      	beq.n	8001200 <__eqdf2+0x58>
 80011de:	2001      	movs	r0, #1
 80011e0:	4294      	cmp	r4, r2
 80011e2:	d10e      	bne.n	8001202 <__eqdf2+0x5a>
 80011e4:	454e      	cmp	r6, r9
 80011e6:	d10c      	bne.n	8001202 <__eqdf2+0x5a>
 80011e8:	2001      	movs	r0, #1
 80011ea:	45c4      	cmp	ip, r8
 80011ec:	d109      	bne.n	8001202 <__eqdf2+0x5a>
 80011ee:	4559      	cmp	r1, fp
 80011f0:	d017      	beq.n	8001222 <__eqdf2+0x7a>
 80011f2:	2c00      	cmp	r4, #0
 80011f4:	d105      	bne.n	8001202 <__eqdf2+0x5a>
 80011f6:	0030      	movs	r0, r6
 80011f8:	4328      	orrs	r0, r5
 80011fa:	1e43      	subs	r3, r0, #1
 80011fc:	4198      	sbcs	r0, r3
 80011fe:	e000      	b.n	8001202 <__eqdf2+0x5a>
 8001200:	2001      	movs	r0, #1
 8001202:	bcf0      	pop	{r4, r5, r6, r7}
 8001204:	46bb      	mov	fp, r7
 8001206:	46b2      	mov	sl, r6
 8001208:	46a9      	mov	r9, r5
 800120a:	46a0      	mov	r8, r4
 800120c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800120e:	0033      	movs	r3, r6
 8001210:	2001      	movs	r0, #1
 8001212:	432b      	orrs	r3, r5
 8001214:	d1f5      	bne.n	8001202 <__eqdf2+0x5a>
 8001216:	42a2      	cmp	r2, r4
 8001218:	d1f3      	bne.n	8001202 <__eqdf2+0x5a>
 800121a:	464b      	mov	r3, r9
 800121c:	433b      	orrs	r3, r7
 800121e:	d1f0      	bne.n	8001202 <__eqdf2+0x5a>
 8001220:	e7e2      	b.n	80011e8 <__eqdf2+0x40>
 8001222:	2000      	movs	r0, #0
 8001224:	e7ed      	b.n	8001202 <__eqdf2+0x5a>
 8001226:	46c0      	nop			; (mov r8, r8)
 8001228:	000007ff 	.word	0x000007ff

0800122c <__gedf2>:
 800122c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800122e:	4647      	mov	r7, r8
 8001230:	46ce      	mov	lr, r9
 8001232:	0004      	movs	r4, r0
 8001234:	0018      	movs	r0, r3
 8001236:	0016      	movs	r6, r2
 8001238:	031b      	lsls	r3, r3, #12
 800123a:	0b1b      	lsrs	r3, r3, #12
 800123c:	4d2d      	ldr	r5, [pc, #180]	; (80012f4 <__gedf2+0xc8>)
 800123e:	004a      	lsls	r2, r1, #1
 8001240:	4699      	mov	r9, r3
 8001242:	b580      	push	{r7, lr}
 8001244:	0043      	lsls	r3, r0, #1
 8001246:	030f      	lsls	r7, r1, #12
 8001248:	46a4      	mov	ip, r4
 800124a:	46b0      	mov	r8, r6
 800124c:	0b3f      	lsrs	r7, r7, #12
 800124e:	0d52      	lsrs	r2, r2, #21
 8001250:	0fc9      	lsrs	r1, r1, #31
 8001252:	0d5b      	lsrs	r3, r3, #21
 8001254:	0fc0      	lsrs	r0, r0, #31
 8001256:	42aa      	cmp	r2, r5
 8001258:	d021      	beq.n	800129e <__gedf2+0x72>
 800125a:	42ab      	cmp	r3, r5
 800125c:	d013      	beq.n	8001286 <__gedf2+0x5a>
 800125e:	2a00      	cmp	r2, #0
 8001260:	d122      	bne.n	80012a8 <__gedf2+0x7c>
 8001262:	433c      	orrs	r4, r7
 8001264:	2b00      	cmp	r3, #0
 8001266:	d102      	bne.n	800126e <__gedf2+0x42>
 8001268:	464d      	mov	r5, r9
 800126a:	432e      	orrs	r6, r5
 800126c:	d022      	beq.n	80012b4 <__gedf2+0x88>
 800126e:	2c00      	cmp	r4, #0
 8001270:	d010      	beq.n	8001294 <__gedf2+0x68>
 8001272:	4281      	cmp	r1, r0
 8001274:	d022      	beq.n	80012bc <__gedf2+0x90>
 8001276:	2002      	movs	r0, #2
 8001278:	3901      	subs	r1, #1
 800127a:	4008      	ands	r0, r1
 800127c:	3801      	subs	r0, #1
 800127e:	bcc0      	pop	{r6, r7}
 8001280:	46b9      	mov	r9, r7
 8001282:	46b0      	mov	r8, r6
 8001284:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001286:	464d      	mov	r5, r9
 8001288:	432e      	orrs	r6, r5
 800128a:	d129      	bne.n	80012e0 <__gedf2+0xb4>
 800128c:	2a00      	cmp	r2, #0
 800128e:	d1f0      	bne.n	8001272 <__gedf2+0x46>
 8001290:	433c      	orrs	r4, r7
 8001292:	d1ee      	bne.n	8001272 <__gedf2+0x46>
 8001294:	2800      	cmp	r0, #0
 8001296:	d1f2      	bne.n	800127e <__gedf2+0x52>
 8001298:	2001      	movs	r0, #1
 800129a:	4240      	negs	r0, r0
 800129c:	e7ef      	b.n	800127e <__gedf2+0x52>
 800129e:	003d      	movs	r5, r7
 80012a0:	4325      	orrs	r5, r4
 80012a2:	d11d      	bne.n	80012e0 <__gedf2+0xb4>
 80012a4:	4293      	cmp	r3, r2
 80012a6:	d0ee      	beq.n	8001286 <__gedf2+0x5a>
 80012a8:	2b00      	cmp	r3, #0
 80012aa:	d1e2      	bne.n	8001272 <__gedf2+0x46>
 80012ac:	464c      	mov	r4, r9
 80012ae:	4326      	orrs	r6, r4
 80012b0:	d1df      	bne.n	8001272 <__gedf2+0x46>
 80012b2:	e7e0      	b.n	8001276 <__gedf2+0x4a>
 80012b4:	2000      	movs	r0, #0
 80012b6:	2c00      	cmp	r4, #0
 80012b8:	d0e1      	beq.n	800127e <__gedf2+0x52>
 80012ba:	e7dc      	b.n	8001276 <__gedf2+0x4a>
 80012bc:	429a      	cmp	r2, r3
 80012be:	dc0a      	bgt.n	80012d6 <__gedf2+0xaa>
 80012c0:	dbe8      	blt.n	8001294 <__gedf2+0x68>
 80012c2:	454f      	cmp	r7, r9
 80012c4:	d8d7      	bhi.n	8001276 <__gedf2+0x4a>
 80012c6:	d00e      	beq.n	80012e6 <__gedf2+0xba>
 80012c8:	2000      	movs	r0, #0
 80012ca:	454f      	cmp	r7, r9
 80012cc:	d2d7      	bcs.n	800127e <__gedf2+0x52>
 80012ce:	2900      	cmp	r1, #0
 80012d0:	d0e2      	beq.n	8001298 <__gedf2+0x6c>
 80012d2:	0008      	movs	r0, r1
 80012d4:	e7d3      	b.n	800127e <__gedf2+0x52>
 80012d6:	4243      	negs	r3, r0
 80012d8:	4158      	adcs	r0, r3
 80012da:	0040      	lsls	r0, r0, #1
 80012dc:	3801      	subs	r0, #1
 80012de:	e7ce      	b.n	800127e <__gedf2+0x52>
 80012e0:	2002      	movs	r0, #2
 80012e2:	4240      	negs	r0, r0
 80012e4:	e7cb      	b.n	800127e <__gedf2+0x52>
 80012e6:	45c4      	cmp	ip, r8
 80012e8:	d8c5      	bhi.n	8001276 <__gedf2+0x4a>
 80012ea:	2000      	movs	r0, #0
 80012ec:	45c4      	cmp	ip, r8
 80012ee:	d2c6      	bcs.n	800127e <__gedf2+0x52>
 80012f0:	e7ed      	b.n	80012ce <__gedf2+0xa2>
 80012f2:	46c0      	nop			; (mov r8, r8)
 80012f4:	000007ff 	.word	0x000007ff

080012f8 <__ledf2>:
 80012f8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80012fa:	4647      	mov	r7, r8
 80012fc:	46ce      	mov	lr, r9
 80012fe:	0004      	movs	r4, r0
 8001300:	0018      	movs	r0, r3
 8001302:	0016      	movs	r6, r2
 8001304:	031b      	lsls	r3, r3, #12
 8001306:	0b1b      	lsrs	r3, r3, #12
 8001308:	4d2c      	ldr	r5, [pc, #176]	; (80013bc <__ledf2+0xc4>)
 800130a:	004a      	lsls	r2, r1, #1
 800130c:	4699      	mov	r9, r3
 800130e:	b580      	push	{r7, lr}
 8001310:	0043      	lsls	r3, r0, #1
 8001312:	030f      	lsls	r7, r1, #12
 8001314:	46a4      	mov	ip, r4
 8001316:	46b0      	mov	r8, r6
 8001318:	0b3f      	lsrs	r7, r7, #12
 800131a:	0d52      	lsrs	r2, r2, #21
 800131c:	0fc9      	lsrs	r1, r1, #31
 800131e:	0d5b      	lsrs	r3, r3, #21
 8001320:	0fc0      	lsrs	r0, r0, #31
 8001322:	42aa      	cmp	r2, r5
 8001324:	d00d      	beq.n	8001342 <__ledf2+0x4a>
 8001326:	42ab      	cmp	r3, r5
 8001328:	d010      	beq.n	800134c <__ledf2+0x54>
 800132a:	2a00      	cmp	r2, #0
 800132c:	d127      	bne.n	800137e <__ledf2+0x86>
 800132e:	433c      	orrs	r4, r7
 8001330:	2b00      	cmp	r3, #0
 8001332:	d111      	bne.n	8001358 <__ledf2+0x60>
 8001334:	464d      	mov	r5, r9
 8001336:	432e      	orrs	r6, r5
 8001338:	d10e      	bne.n	8001358 <__ledf2+0x60>
 800133a:	2000      	movs	r0, #0
 800133c:	2c00      	cmp	r4, #0
 800133e:	d015      	beq.n	800136c <__ledf2+0x74>
 8001340:	e00e      	b.n	8001360 <__ledf2+0x68>
 8001342:	003d      	movs	r5, r7
 8001344:	4325      	orrs	r5, r4
 8001346:	d110      	bne.n	800136a <__ledf2+0x72>
 8001348:	4293      	cmp	r3, r2
 800134a:	d118      	bne.n	800137e <__ledf2+0x86>
 800134c:	464d      	mov	r5, r9
 800134e:	432e      	orrs	r6, r5
 8001350:	d10b      	bne.n	800136a <__ledf2+0x72>
 8001352:	2a00      	cmp	r2, #0
 8001354:	d102      	bne.n	800135c <__ledf2+0x64>
 8001356:	433c      	orrs	r4, r7
 8001358:	2c00      	cmp	r4, #0
 800135a:	d00b      	beq.n	8001374 <__ledf2+0x7c>
 800135c:	4281      	cmp	r1, r0
 800135e:	d014      	beq.n	800138a <__ledf2+0x92>
 8001360:	2002      	movs	r0, #2
 8001362:	3901      	subs	r1, #1
 8001364:	4008      	ands	r0, r1
 8001366:	3801      	subs	r0, #1
 8001368:	e000      	b.n	800136c <__ledf2+0x74>
 800136a:	2002      	movs	r0, #2
 800136c:	bcc0      	pop	{r6, r7}
 800136e:	46b9      	mov	r9, r7
 8001370:	46b0      	mov	r8, r6
 8001372:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001374:	2800      	cmp	r0, #0
 8001376:	d1f9      	bne.n	800136c <__ledf2+0x74>
 8001378:	2001      	movs	r0, #1
 800137a:	4240      	negs	r0, r0
 800137c:	e7f6      	b.n	800136c <__ledf2+0x74>
 800137e:	2b00      	cmp	r3, #0
 8001380:	d1ec      	bne.n	800135c <__ledf2+0x64>
 8001382:	464c      	mov	r4, r9
 8001384:	4326      	orrs	r6, r4
 8001386:	d1e9      	bne.n	800135c <__ledf2+0x64>
 8001388:	e7ea      	b.n	8001360 <__ledf2+0x68>
 800138a:	429a      	cmp	r2, r3
 800138c:	dd04      	ble.n	8001398 <__ledf2+0xa0>
 800138e:	4243      	negs	r3, r0
 8001390:	4158      	adcs	r0, r3
 8001392:	0040      	lsls	r0, r0, #1
 8001394:	3801      	subs	r0, #1
 8001396:	e7e9      	b.n	800136c <__ledf2+0x74>
 8001398:	429a      	cmp	r2, r3
 800139a:	dbeb      	blt.n	8001374 <__ledf2+0x7c>
 800139c:	454f      	cmp	r7, r9
 800139e:	d8df      	bhi.n	8001360 <__ledf2+0x68>
 80013a0:	d006      	beq.n	80013b0 <__ledf2+0xb8>
 80013a2:	2000      	movs	r0, #0
 80013a4:	454f      	cmp	r7, r9
 80013a6:	d2e1      	bcs.n	800136c <__ledf2+0x74>
 80013a8:	2900      	cmp	r1, #0
 80013aa:	d0e5      	beq.n	8001378 <__ledf2+0x80>
 80013ac:	0008      	movs	r0, r1
 80013ae:	e7dd      	b.n	800136c <__ledf2+0x74>
 80013b0:	45c4      	cmp	ip, r8
 80013b2:	d8d5      	bhi.n	8001360 <__ledf2+0x68>
 80013b4:	2000      	movs	r0, #0
 80013b6:	45c4      	cmp	ip, r8
 80013b8:	d2d8      	bcs.n	800136c <__ledf2+0x74>
 80013ba:	e7f5      	b.n	80013a8 <__ledf2+0xb0>
 80013bc:	000007ff 	.word	0x000007ff

080013c0 <__aeabi_dmul>:
 80013c0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80013c2:	4645      	mov	r5, r8
 80013c4:	46de      	mov	lr, fp
 80013c6:	4657      	mov	r7, sl
 80013c8:	464e      	mov	r6, r9
 80013ca:	b5e0      	push	{r5, r6, r7, lr}
 80013cc:	001f      	movs	r7, r3
 80013ce:	030b      	lsls	r3, r1, #12
 80013d0:	0b1b      	lsrs	r3, r3, #12
 80013d2:	469b      	mov	fp, r3
 80013d4:	004d      	lsls	r5, r1, #1
 80013d6:	0fcb      	lsrs	r3, r1, #31
 80013d8:	0004      	movs	r4, r0
 80013da:	4691      	mov	r9, r2
 80013dc:	4698      	mov	r8, r3
 80013de:	b087      	sub	sp, #28
 80013e0:	0d6d      	lsrs	r5, r5, #21
 80013e2:	d100      	bne.n	80013e6 <__aeabi_dmul+0x26>
 80013e4:	e1cd      	b.n	8001782 <__aeabi_dmul+0x3c2>
 80013e6:	4bce      	ldr	r3, [pc, #824]	; (8001720 <__aeabi_dmul+0x360>)
 80013e8:	429d      	cmp	r5, r3
 80013ea:	d100      	bne.n	80013ee <__aeabi_dmul+0x2e>
 80013ec:	e1e9      	b.n	80017c2 <__aeabi_dmul+0x402>
 80013ee:	465a      	mov	r2, fp
 80013f0:	0f43      	lsrs	r3, r0, #29
 80013f2:	00d2      	lsls	r2, r2, #3
 80013f4:	4313      	orrs	r3, r2
 80013f6:	2280      	movs	r2, #128	; 0x80
 80013f8:	0412      	lsls	r2, r2, #16
 80013fa:	431a      	orrs	r2, r3
 80013fc:	00c3      	lsls	r3, r0, #3
 80013fe:	469a      	mov	sl, r3
 8001400:	4bc8      	ldr	r3, [pc, #800]	; (8001724 <__aeabi_dmul+0x364>)
 8001402:	4693      	mov	fp, r2
 8001404:	469c      	mov	ip, r3
 8001406:	2300      	movs	r3, #0
 8001408:	2600      	movs	r6, #0
 800140a:	4465      	add	r5, ip
 800140c:	9300      	str	r3, [sp, #0]
 800140e:	033c      	lsls	r4, r7, #12
 8001410:	007b      	lsls	r3, r7, #1
 8001412:	4648      	mov	r0, r9
 8001414:	0b24      	lsrs	r4, r4, #12
 8001416:	0d5b      	lsrs	r3, r3, #21
 8001418:	0fff      	lsrs	r7, r7, #31
 800141a:	2b00      	cmp	r3, #0
 800141c:	d100      	bne.n	8001420 <__aeabi_dmul+0x60>
 800141e:	e189      	b.n	8001734 <__aeabi_dmul+0x374>
 8001420:	4abf      	ldr	r2, [pc, #764]	; (8001720 <__aeabi_dmul+0x360>)
 8001422:	4293      	cmp	r3, r2
 8001424:	d019      	beq.n	800145a <__aeabi_dmul+0x9a>
 8001426:	0f42      	lsrs	r2, r0, #29
 8001428:	00e4      	lsls	r4, r4, #3
 800142a:	4322      	orrs	r2, r4
 800142c:	2480      	movs	r4, #128	; 0x80
 800142e:	0424      	lsls	r4, r4, #16
 8001430:	4314      	orrs	r4, r2
 8001432:	4abc      	ldr	r2, [pc, #752]	; (8001724 <__aeabi_dmul+0x364>)
 8001434:	2100      	movs	r1, #0
 8001436:	4694      	mov	ip, r2
 8001438:	4642      	mov	r2, r8
 800143a:	4463      	add	r3, ip
 800143c:	195b      	adds	r3, r3, r5
 800143e:	9301      	str	r3, [sp, #4]
 8001440:	9b01      	ldr	r3, [sp, #4]
 8001442:	407a      	eors	r2, r7
 8001444:	3301      	adds	r3, #1
 8001446:	00c0      	lsls	r0, r0, #3
 8001448:	b2d2      	uxtb	r2, r2
 800144a:	9302      	str	r3, [sp, #8]
 800144c:	2e0a      	cmp	r6, #10
 800144e:	dd1c      	ble.n	800148a <__aeabi_dmul+0xca>
 8001450:	003a      	movs	r2, r7
 8001452:	2e0b      	cmp	r6, #11
 8001454:	d05e      	beq.n	8001514 <__aeabi_dmul+0x154>
 8001456:	4647      	mov	r7, r8
 8001458:	e056      	b.n	8001508 <__aeabi_dmul+0x148>
 800145a:	4649      	mov	r1, r9
 800145c:	4bb0      	ldr	r3, [pc, #704]	; (8001720 <__aeabi_dmul+0x360>)
 800145e:	4321      	orrs	r1, r4
 8001460:	18eb      	adds	r3, r5, r3
 8001462:	9301      	str	r3, [sp, #4]
 8001464:	2900      	cmp	r1, #0
 8001466:	d12a      	bne.n	80014be <__aeabi_dmul+0xfe>
 8001468:	2080      	movs	r0, #128	; 0x80
 800146a:	2202      	movs	r2, #2
 800146c:	0100      	lsls	r0, r0, #4
 800146e:	002b      	movs	r3, r5
 8001470:	4684      	mov	ip, r0
 8001472:	4316      	orrs	r6, r2
 8001474:	4642      	mov	r2, r8
 8001476:	4463      	add	r3, ip
 8001478:	407a      	eors	r2, r7
 800147a:	b2d2      	uxtb	r2, r2
 800147c:	9302      	str	r3, [sp, #8]
 800147e:	2e0a      	cmp	r6, #10
 8001480:	dd00      	ble.n	8001484 <__aeabi_dmul+0xc4>
 8001482:	e231      	b.n	80018e8 <__aeabi_dmul+0x528>
 8001484:	2000      	movs	r0, #0
 8001486:	2400      	movs	r4, #0
 8001488:	2102      	movs	r1, #2
 800148a:	2e02      	cmp	r6, #2
 800148c:	dc26      	bgt.n	80014dc <__aeabi_dmul+0x11c>
 800148e:	3e01      	subs	r6, #1
 8001490:	2e01      	cmp	r6, #1
 8001492:	d852      	bhi.n	800153a <__aeabi_dmul+0x17a>
 8001494:	2902      	cmp	r1, #2
 8001496:	d04c      	beq.n	8001532 <__aeabi_dmul+0x172>
 8001498:	2901      	cmp	r1, #1
 800149a:	d000      	beq.n	800149e <__aeabi_dmul+0xde>
 800149c:	e118      	b.n	80016d0 <__aeabi_dmul+0x310>
 800149e:	2300      	movs	r3, #0
 80014a0:	2400      	movs	r4, #0
 80014a2:	2500      	movs	r5, #0
 80014a4:	051b      	lsls	r3, r3, #20
 80014a6:	4323      	orrs	r3, r4
 80014a8:	07d2      	lsls	r2, r2, #31
 80014aa:	4313      	orrs	r3, r2
 80014ac:	0028      	movs	r0, r5
 80014ae:	0019      	movs	r1, r3
 80014b0:	b007      	add	sp, #28
 80014b2:	bcf0      	pop	{r4, r5, r6, r7}
 80014b4:	46bb      	mov	fp, r7
 80014b6:	46b2      	mov	sl, r6
 80014b8:	46a9      	mov	r9, r5
 80014ba:	46a0      	mov	r8, r4
 80014bc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80014be:	2180      	movs	r1, #128	; 0x80
 80014c0:	2203      	movs	r2, #3
 80014c2:	0109      	lsls	r1, r1, #4
 80014c4:	002b      	movs	r3, r5
 80014c6:	468c      	mov	ip, r1
 80014c8:	4316      	orrs	r6, r2
 80014ca:	4642      	mov	r2, r8
 80014cc:	4463      	add	r3, ip
 80014ce:	407a      	eors	r2, r7
 80014d0:	b2d2      	uxtb	r2, r2
 80014d2:	9302      	str	r3, [sp, #8]
 80014d4:	2e0a      	cmp	r6, #10
 80014d6:	dd00      	ble.n	80014da <__aeabi_dmul+0x11a>
 80014d8:	e228      	b.n	800192c <__aeabi_dmul+0x56c>
 80014da:	2103      	movs	r1, #3
 80014dc:	2501      	movs	r5, #1
 80014de:	40b5      	lsls	r5, r6
 80014e0:	46ac      	mov	ip, r5
 80014e2:	26a6      	movs	r6, #166	; 0xa6
 80014e4:	4663      	mov	r3, ip
 80014e6:	00f6      	lsls	r6, r6, #3
 80014e8:	4035      	ands	r5, r6
 80014ea:	4233      	tst	r3, r6
 80014ec:	d10b      	bne.n	8001506 <__aeabi_dmul+0x146>
 80014ee:	2690      	movs	r6, #144	; 0x90
 80014f0:	00b6      	lsls	r6, r6, #2
 80014f2:	4233      	tst	r3, r6
 80014f4:	d118      	bne.n	8001528 <__aeabi_dmul+0x168>
 80014f6:	3eb9      	subs	r6, #185	; 0xb9
 80014f8:	3eff      	subs	r6, #255	; 0xff
 80014fa:	421e      	tst	r6, r3
 80014fc:	d01d      	beq.n	800153a <__aeabi_dmul+0x17a>
 80014fe:	46a3      	mov	fp, r4
 8001500:	4682      	mov	sl, r0
 8001502:	9100      	str	r1, [sp, #0]
 8001504:	e000      	b.n	8001508 <__aeabi_dmul+0x148>
 8001506:	0017      	movs	r7, r2
 8001508:	9900      	ldr	r1, [sp, #0]
 800150a:	003a      	movs	r2, r7
 800150c:	2902      	cmp	r1, #2
 800150e:	d010      	beq.n	8001532 <__aeabi_dmul+0x172>
 8001510:	465c      	mov	r4, fp
 8001512:	4650      	mov	r0, sl
 8001514:	2903      	cmp	r1, #3
 8001516:	d1bf      	bne.n	8001498 <__aeabi_dmul+0xd8>
 8001518:	2380      	movs	r3, #128	; 0x80
 800151a:	031b      	lsls	r3, r3, #12
 800151c:	431c      	orrs	r4, r3
 800151e:	0324      	lsls	r4, r4, #12
 8001520:	0005      	movs	r5, r0
 8001522:	4b7f      	ldr	r3, [pc, #508]	; (8001720 <__aeabi_dmul+0x360>)
 8001524:	0b24      	lsrs	r4, r4, #12
 8001526:	e7bd      	b.n	80014a4 <__aeabi_dmul+0xe4>
 8001528:	2480      	movs	r4, #128	; 0x80
 800152a:	2200      	movs	r2, #0
 800152c:	4b7c      	ldr	r3, [pc, #496]	; (8001720 <__aeabi_dmul+0x360>)
 800152e:	0324      	lsls	r4, r4, #12
 8001530:	e7b8      	b.n	80014a4 <__aeabi_dmul+0xe4>
 8001532:	2400      	movs	r4, #0
 8001534:	2500      	movs	r5, #0
 8001536:	4b7a      	ldr	r3, [pc, #488]	; (8001720 <__aeabi_dmul+0x360>)
 8001538:	e7b4      	b.n	80014a4 <__aeabi_dmul+0xe4>
 800153a:	4653      	mov	r3, sl
 800153c:	041e      	lsls	r6, r3, #16
 800153e:	0c36      	lsrs	r6, r6, #16
 8001540:	0c1f      	lsrs	r7, r3, #16
 8001542:	0033      	movs	r3, r6
 8001544:	0c01      	lsrs	r1, r0, #16
 8001546:	0400      	lsls	r0, r0, #16
 8001548:	0c00      	lsrs	r0, r0, #16
 800154a:	4343      	muls	r3, r0
 800154c:	4698      	mov	r8, r3
 800154e:	0003      	movs	r3, r0
 8001550:	437b      	muls	r3, r7
 8001552:	4699      	mov	r9, r3
 8001554:	0033      	movs	r3, r6
 8001556:	434b      	muls	r3, r1
 8001558:	469c      	mov	ip, r3
 800155a:	4643      	mov	r3, r8
 800155c:	000d      	movs	r5, r1
 800155e:	0c1b      	lsrs	r3, r3, #16
 8001560:	469a      	mov	sl, r3
 8001562:	437d      	muls	r5, r7
 8001564:	44cc      	add	ip, r9
 8001566:	44d4      	add	ip, sl
 8001568:	9500      	str	r5, [sp, #0]
 800156a:	45e1      	cmp	r9, ip
 800156c:	d904      	bls.n	8001578 <__aeabi_dmul+0x1b8>
 800156e:	2380      	movs	r3, #128	; 0x80
 8001570:	025b      	lsls	r3, r3, #9
 8001572:	4699      	mov	r9, r3
 8001574:	444d      	add	r5, r9
 8001576:	9500      	str	r5, [sp, #0]
 8001578:	4663      	mov	r3, ip
 800157a:	0c1b      	lsrs	r3, r3, #16
 800157c:	001d      	movs	r5, r3
 800157e:	4663      	mov	r3, ip
 8001580:	041b      	lsls	r3, r3, #16
 8001582:	469c      	mov	ip, r3
 8001584:	4643      	mov	r3, r8
 8001586:	041b      	lsls	r3, r3, #16
 8001588:	0c1b      	lsrs	r3, r3, #16
 800158a:	4698      	mov	r8, r3
 800158c:	4663      	mov	r3, ip
 800158e:	4443      	add	r3, r8
 8001590:	9303      	str	r3, [sp, #12]
 8001592:	0c23      	lsrs	r3, r4, #16
 8001594:	4698      	mov	r8, r3
 8001596:	0033      	movs	r3, r6
 8001598:	0424      	lsls	r4, r4, #16
 800159a:	0c24      	lsrs	r4, r4, #16
 800159c:	4363      	muls	r3, r4
 800159e:	469c      	mov	ip, r3
 80015a0:	0023      	movs	r3, r4
 80015a2:	437b      	muls	r3, r7
 80015a4:	4699      	mov	r9, r3
 80015a6:	4643      	mov	r3, r8
 80015a8:	435e      	muls	r6, r3
 80015aa:	435f      	muls	r7, r3
 80015ac:	444e      	add	r6, r9
 80015ae:	4663      	mov	r3, ip
 80015b0:	46b2      	mov	sl, r6
 80015b2:	0c1e      	lsrs	r6, r3, #16
 80015b4:	4456      	add	r6, sl
 80015b6:	45b1      	cmp	r9, r6
 80015b8:	d903      	bls.n	80015c2 <__aeabi_dmul+0x202>
 80015ba:	2380      	movs	r3, #128	; 0x80
 80015bc:	025b      	lsls	r3, r3, #9
 80015be:	4699      	mov	r9, r3
 80015c0:	444f      	add	r7, r9
 80015c2:	0c33      	lsrs	r3, r6, #16
 80015c4:	4699      	mov	r9, r3
 80015c6:	003b      	movs	r3, r7
 80015c8:	444b      	add	r3, r9
 80015ca:	9305      	str	r3, [sp, #20]
 80015cc:	4663      	mov	r3, ip
 80015ce:	46ac      	mov	ip, r5
 80015d0:	041f      	lsls	r7, r3, #16
 80015d2:	0c3f      	lsrs	r7, r7, #16
 80015d4:	0436      	lsls	r6, r6, #16
 80015d6:	19f6      	adds	r6, r6, r7
 80015d8:	44b4      	add	ip, r6
 80015da:	4663      	mov	r3, ip
 80015dc:	9304      	str	r3, [sp, #16]
 80015de:	465b      	mov	r3, fp
 80015e0:	0c1b      	lsrs	r3, r3, #16
 80015e2:	469c      	mov	ip, r3
 80015e4:	465b      	mov	r3, fp
 80015e6:	041f      	lsls	r7, r3, #16
 80015e8:	0c3f      	lsrs	r7, r7, #16
 80015ea:	003b      	movs	r3, r7
 80015ec:	4343      	muls	r3, r0
 80015ee:	4699      	mov	r9, r3
 80015f0:	4663      	mov	r3, ip
 80015f2:	4343      	muls	r3, r0
 80015f4:	469a      	mov	sl, r3
 80015f6:	464b      	mov	r3, r9
 80015f8:	4660      	mov	r0, ip
 80015fa:	0c1b      	lsrs	r3, r3, #16
 80015fc:	469b      	mov	fp, r3
 80015fe:	4348      	muls	r0, r1
 8001600:	4379      	muls	r1, r7
 8001602:	4451      	add	r1, sl
 8001604:	4459      	add	r1, fp
 8001606:	458a      	cmp	sl, r1
 8001608:	d903      	bls.n	8001612 <__aeabi_dmul+0x252>
 800160a:	2380      	movs	r3, #128	; 0x80
 800160c:	025b      	lsls	r3, r3, #9
 800160e:	469a      	mov	sl, r3
 8001610:	4450      	add	r0, sl
 8001612:	0c0b      	lsrs	r3, r1, #16
 8001614:	469a      	mov	sl, r3
 8001616:	464b      	mov	r3, r9
 8001618:	041b      	lsls	r3, r3, #16
 800161a:	0c1b      	lsrs	r3, r3, #16
 800161c:	4699      	mov	r9, r3
 800161e:	003b      	movs	r3, r7
 8001620:	4363      	muls	r3, r4
 8001622:	0409      	lsls	r1, r1, #16
 8001624:	4645      	mov	r5, r8
 8001626:	4449      	add	r1, r9
 8001628:	4699      	mov	r9, r3
 800162a:	4663      	mov	r3, ip
 800162c:	435c      	muls	r4, r3
 800162e:	436b      	muls	r3, r5
 8001630:	469c      	mov	ip, r3
 8001632:	464b      	mov	r3, r9
 8001634:	0c1b      	lsrs	r3, r3, #16
 8001636:	4698      	mov	r8, r3
 8001638:	436f      	muls	r7, r5
 800163a:	193f      	adds	r7, r7, r4
 800163c:	4447      	add	r7, r8
 800163e:	4450      	add	r0, sl
 8001640:	42bc      	cmp	r4, r7
 8001642:	d903      	bls.n	800164c <__aeabi_dmul+0x28c>
 8001644:	2380      	movs	r3, #128	; 0x80
 8001646:	025b      	lsls	r3, r3, #9
 8001648:	4698      	mov	r8, r3
 800164a:	44c4      	add	ip, r8
 800164c:	9b04      	ldr	r3, [sp, #16]
 800164e:	9d00      	ldr	r5, [sp, #0]
 8001650:	4698      	mov	r8, r3
 8001652:	4445      	add	r5, r8
 8001654:	42b5      	cmp	r5, r6
 8001656:	41b6      	sbcs	r6, r6
 8001658:	4273      	negs	r3, r6
 800165a:	4698      	mov	r8, r3
 800165c:	464b      	mov	r3, r9
 800165e:	041e      	lsls	r6, r3, #16
 8001660:	9b05      	ldr	r3, [sp, #20]
 8001662:	043c      	lsls	r4, r7, #16
 8001664:	4699      	mov	r9, r3
 8001666:	0c36      	lsrs	r6, r6, #16
 8001668:	19a4      	adds	r4, r4, r6
 800166a:	444c      	add	r4, r9
 800166c:	46a1      	mov	r9, r4
 800166e:	4683      	mov	fp, r0
 8001670:	186e      	adds	r6, r5, r1
 8001672:	44c1      	add	r9, r8
 8001674:	428e      	cmp	r6, r1
 8001676:	4189      	sbcs	r1, r1
 8001678:	44cb      	add	fp, r9
 800167a:	465d      	mov	r5, fp
 800167c:	4249      	negs	r1, r1
 800167e:	186d      	adds	r5, r5, r1
 8001680:	429c      	cmp	r4, r3
 8001682:	41a4      	sbcs	r4, r4
 8001684:	45c1      	cmp	r9, r8
 8001686:	419b      	sbcs	r3, r3
 8001688:	4583      	cmp	fp, r0
 800168a:	4180      	sbcs	r0, r0
 800168c:	428d      	cmp	r5, r1
 800168e:	4189      	sbcs	r1, r1
 8001690:	425b      	negs	r3, r3
 8001692:	4264      	negs	r4, r4
 8001694:	431c      	orrs	r4, r3
 8001696:	4240      	negs	r0, r0
 8001698:	9b03      	ldr	r3, [sp, #12]
 800169a:	4249      	negs	r1, r1
 800169c:	4301      	orrs	r1, r0
 800169e:	0270      	lsls	r0, r6, #9
 80016a0:	0c3f      	lsrs	r7, r7, #16
 80016a2:	4318      	orrs	r0, r3
 80016a4:	19e4      	adds	r4, r4, r7
 80016a6:	1e47      	subs	r7, r0, #1
 80016a8:	41b8      	sbcs	r0, r7
 80016aa:	1864      	adds	r4, r4, r1
 80016ac:	4464      	add	r4, ip
 80016ae:	0df6      	lsrs	r6, r6, #23
 80016b0:	0261      	lsls	r1, r4, #9
 80016b2:	4330      	orrs	r0, r6
 80016b4:	0dec      	lsrs	r4, r5, #23
 80016b6:	026e      	lsls	r6, r5, #9
 80016b8:	430c      	orrs	r4, r1
 80016ba:	4330      	orrs	r0, r6
 80016bc:	01c9      	lsls	r1, r1, #7
 80016be:	d400      	bmi.n	80016c2 <__aeabi_dmul+0x302>
 80016c0:	e0f1      	b.n	80018a6 <__aeabi_dmul+0x4e6>
 80016c2:	2101      	movs	r1, #1
 80016c4:	0843      	lsrs	r3, r0, #1
 80016c6:	4001      	ands	r1, r0
 80016c8:	430b      	orrs	r3, r1
 80016ca:	07e0      	lsls	r0, r4, #31
 80016cc:	4318      	orrs	r0, r3
 80016ce:	0864      	lsrs	r4, r4, #1
 80016d0:	4915      	ldr	r1, [pc, #84]	; (8001728 <__aeabi_dmul+0x368>)
 80016d2:	9b02      	ldr	r3, [sp, #8]
 80016d4:	468c      	mov	ip, r1
 80016d6:	4463      	add	r3, ip
 80016d8:	2b00      	cmp	r3, #0
 80016da:	dc00      	bgt.n	80016de <__aeabi_dmul+0x31e>
 80016dc:	e097      	b.n	800180e <__aeabi_dmul+0x44e>
 80016de:	0741      	lsls	r1, r0, #29
 80016e0:	d009      	beq.n	80016f6 <__aeabi_dmul+0x336>
 80016e2:	210f      	movs	r1, #15
 80016e4:	4001      	ands	r1, r0
 80016e6:	2904      	cmp	r1, #4
 80016e8:	d005      	beq.n	80016f6 <__aeabi_dmul+0x336>
 80016ea:	1d01      	adds	r1, r0, #4
 80016ec:	4281      	cmp	r1, r0
 80016ee:	4180      	sbcs	r0, r0
 80016f0:	4240      	negs	r0, r0
 80016f2:	1824      	adds	r4, r4, r0
 80016f4:	0008      	movs	r0, r1
 80016f6:	01e1      	lsls	r1, r4, #7
 80016f8:	d506      	bpl.n	8001708 <__aeabi_dmul+0x348>
 80016fa:	2180      	movs	r1, #128	; 0x80
 80016fc:	00c9      	lsls	r1, r1, #3
 80016fe:	468c      	mov	ip, r1
 8001700:	4b0a      	ldr	r3, [pc, #40]	; (800172c <__aeabi_dmul+0x36c>)
 8001702:	401c      	ands	r4, r3
 8001704:	9b02      	ldr	r3, [sp, #8]
 8001706:	4463      	add	r3, ip
 8001708:	4909      	ldr	r1, [pc, #36]	; (8001730 <__aeabi_dmul+0x370>)
 800170a:	428b      	cmp	r3, r1
 800170c:	dd00      	ble.n	8001710 <__aeabi_dmul+0x350>
 800170e:	e710      	b.n	8001532 <__aeabi_dmul+0x172>
 8001710:	0761      	lsls	r1, r4, #29
 8001712:	08c5      	lsrs	r5, r0, #3
 8001714:	0264      	lsls	r4, r4, #9
 8001716:	055b      	lsls	r3, r3, #21
 8001718:	430d      	orrs	r5, r1
 800171a:	0b24      	lsrs	r4, r4, #12
 800171c:	0d5b      	lsrs	r3, r3, #21
 800171e:	e6c1      	b.n	80014a4 <__aeabi_dmul+0xe4>
 8001720:	000007ff 	.word	0x000007ff
 8001724:	fffffc01 	.word	0xfffffc01
 8001728:	000003ff 	.word	0x000003ff
 800172c:	feffffff 	.word	0xfeffffff
 8001730:	000007fe 	.word	0x000007fe
 8001734:	464b      	mov	r3, r9
 8001736:	4323      	orrs	r3, r4
 8001738:	d059      	beq.n	80017ee <__aeabi_dmul+0x42e>
 800173a:	2c00      	cmp	r4, #0
 800173c:	d100      	bne.n	8001740 <__aeabi_dmul+0x380>
 800173e:	e0a3      	b.n	8001888 <__aeabi_dmul+0x4c8>
 8001740:	0020      	movs	r0, r4
 8001742:	f000 fd0d 	bl	8002160 <__clzsi2>
 8001746:	0001      	movs	r1, r0
 8001748:	0003      	movs	r3, r0
 800174a:	390b      	subs	r1, #11
 800174c:	221d      	movs	r2, #29
 800174e:	1a52      	subs	r2, r2, r1
 8001750:	4649      	mov	r1, r9
 8001752:	0018      	movs	r0, r3
 8001754:	40d1      	lsrs	r1, r2
 8001756:	464a      	mov	r2, r9
 8001758:	3808      	subs	r0, #8
 800175a:	4082      	lsls	r2, r0
 800175c:	4084      	lsls	r4, r0
 800175e:	0010      	movs	r0, r2
 8001760:	430c      	orrs	r4, r1
 8001762:	4a74      	ldr	r2, [pc, #464]	; (8001934 <__aeabi_dmul+0x574>)
 8001764:	1aeb      	subs	r3, r5, r3
 8001766:	4694      	mov	ip, r2
 8001768:	4642      	mov	r2, r8
 800176a:	4463      	add	r3, ip
 800176c:	9301      	str	r3, [sp, #4]
 800176e:	9b01      	ldr	r3, [sp, #4]
 8001770:	407a      	eors	r2, r7
 8001772:	3301      	adds	r3, #1
 8001774:	2100      	movs	r1, #0
 8001776:	b2d2      	uxtb	r2, r2
 8001778:	9302      	str	r3, [sp, #8]
 800177a:	2e0a      	cmp	r6, #10
 800177c:	dd00      	ble.n	8001780 <__aeabi_dmul+0x3c0>
 800177e:	e667      	b.n	8001450 <__aeabi_dmul+0x90>
 8001780:	e683      	b.n	800148a <__aeabi_dmul+0xca>
 8001782:	465b      	mov	r3, fp
 8001784:	4303      	orrs	r3, r0
 8001786:	469a      	mov	sl, r3
 8001788:	d02a      	beq.n	80017e0 <__aeabi_dmul+0x420>
 800178a:	465b      	mov	r3, fp
 800178c:	2b00      	cmp	r3, #0
 800178e:	d06d      	beq.n	800186c <__aeabi_dmul+0x4ac>
 8001790:	4658      	mov	r0, fp
 8001792:	f000 fce5 	bl	8002160 <__clzsi2>
 8001796:	0001      	movs	r1, r0
 8001798:	0003      	movs	r3, r0
 800179a:	390b      	subs	r1, #11
 800179c:	221d      	movs	r2, #29
 800179e:	1a52      	subs	r2, r2, r1
 80017a0:	0021      	movs	r1, r4
 80017a2:	0018      	movs	r0, r3
 80017a4:	465d      	mov	r5, fp
 80017a6:	40d1      	lsrs	r1, r2
 80017a8:	3808      	subs	r0, #8
 80017aa:	4085      	lsls	r5, r0
 80017ac:	000a      	movs	r2, r1
 80017ae:	4084      	lsls	r4, r0
 80017b0:	432a      	orrs	r2, r5
 80017b2:	4693      	mov	fp, r2
 80017b4:	46a2      	mov	sl, r4
 80017b6:	4d5f      	ldr	r5, [pc, #380]	; (8001934 <__aeabi_dmul+0x574>)
 80017b8:	2600      	movs	r6, #0
 80017ba:	1aed      	subs	r5, r5, r3
 80017bc:	2300      	movs	r3, #0
 80017be:	9300      	str	r3, [sp, #0]
 80017c0:	e625      	b.n	800140e <__aeabi_dmul+0x4e>
 80017c2:	465b      	mov	r3, fp
 80017c4:	4303      	orrs	r3, r0
 80017c6:	469a      	mov	sl, r3
 80017c8:	d105      	bne.n	80017d6 <__aeabi_dmul+0x416>
 80017ca:	2300      	movs	r3, #0
 80017cc:	469b      	mov	fp, r3
 80017ce:	3302      	adds	r3, #2
 80017d0:	2608      	movs	r6, #8
 80017d2:	9300      	str	r3, [sp, #0]
 80017d4:	e61b      	b.n	800140e <__aeabi_dmul+0x4e>
 80017d6:	2303      	movs	r3, #3
 80017d8:	4682      	mov	sl, r0
 80017da:	260c      	movs	r6, #12
 80017dc:	9300      	str	r3, [sp, #0]
 80017de:	e616      	b.n	800140e <__aeabi_dmul+0x4e>
 80017e0:	2300      	movs	r3, #0
 80017e2:	469b      	mov	fp, r3
 80017e4:	3301      	adds	r3, #1
 80017e6:	2604      	movs	r6, #4
 80017e8:	2500      	movs	r5, #0
 80017ea:	9300      	str	r3, [sp, #0]
 80017ec:	e60f      	b.n	800140e <__aeabi_dmul+0x4e>
 80017ee:	4642      	mov	r2, r8
 80017f0:	3301      	adds	r3, #1
 80017f2:	9501      	str	r5, [sp, #4]
 80017f4:	431e      	orrs	r6, r3
 80017f6:	9b01      	ldr	r3, [sp, #4]
 80017f8:	407a      	eors	r2, r7
 80017fa:	3301      	adds	r3, #1
 80017fc:	2400      	movs	r4, #0
 80017fe:	2000      	movs	r0, #0
 8001800:	2101      	movs	r1, #1
 8001802:	b2d2      	uxtb	r2, r2
 8001804:	9302      	str	r3, [sp, #8]
 8001806:	2e0a      	cmp	r6, #10
 8001808:	dd00      	ble.n	800180c <__aeabi_dmul+0x44c>
 800180a:	e621      	b.n	8001450 <__aeabi_dmul+0x90>
 800180c:	e63d      	b.n	800148a <__aeabi_dmul+0xca>
 800180e:	2101      	movs	r1, #1
 8001810:	1ac9      	subs	r1, r1, r3
 8001812:	2938      	cmp	r1, #56	; 0x38
 8001814:	dd00      	ble.n	8001818 <__aeabi_dmul+0x458>
 8001816:	e642      	b.n	800149e <__aeabi_dmul+0xde>
 8001818:	291f      	cmp	r1, #31
 800181a:	dd47      	ble.n	80018ac <__aeabi_dmul+0x4ec>
 800181c:	261f      	movs	r6, #31
 800181e:	0025      	movs	r5, r4
 8001820:	4276      	negs	r6, r6
 8001822:	1af3      	subs	r3, r6, r3
 8001824:	40dd      	lsrs	r5, r3
 8001826:	002b      	movs	r3, r5
 8001828:	2920      	cmp	r1, #32
 800182a:	d005      	beq.n	8001838 <__aeabi_dmul+0x478>
 800182c:	4942      	ldr	r1, [pc, #264]	; (8001938 <__aeabi_dmul+0x578>)
 800182e:	9d02      	ldr	r5, [sp, #8]
 8001830:	468c      	mov	ip, r1
 8001832:	4465      	add	r5, ip
 8001834:	40ac      	lsls	r4, r5
 8001836:	4320      	orrs	r0, r4
 8001838:	1e41      	subs	r1, r0, #1
 800183a:	4188      	sbcs	r0, r1
 800183c:	4318      	orrs	r0, r3
 800183e:	2307      	movs	r3, #7
 8001840:	001d      	movs	r5, r3
 8001842:	2400      	movs	r4, #0
 8001844:	4005      	ands	r5, r0
 8001846:	4203      	tst	r3, r0
 8001848:	d04a      	beq.n	80018e0 <__aeabi_dmul+0x520>
 800184a:	230f      	movs	r3, #15
 800184c:	2400      	movs	r4, #0
 800184e:	4003      	ands	r3, r0
 8001850:	2b04      	cmp	r3, #4
 8001852:	d042      	beq.n	80018da <__aeabi_dmul+0x51a>
 8001854:	1d03      	adds	r3, r0, #4
 8001856:	4283      	cmp	r3, r0
 8001858:	4180      	sbcs	r0, r0
 800185a:	4240      	negs	r0, r0
 800185c:	1824      	adds	r4, r4, r0
 800185e:	0018      	movs	r0, r3
 8001860:	0223      	lsls	r3, r4, #8
 8001862:	d53a      	bpl.n	80018da <__aeabi_dmul+0x51a>
 8001864:	2301      	movs	r3, #1
 8001866:	2400      	movs	r4, #0
 8001868:	2500      	movs	r5, #0
 800186a:	e61b      	b.n	80014a4 <__aeabi_dmul+0xe4>
 800186c:	f000 fc78 	bl	8002160 <__clzsi2>
 8001870:	0001      	movs	r1, r0
 8001872:	0003      	movs	r3, r0
 8001874:	3115      	adds	r1, #21
 8001876:	3320      	adds	r3, #32
 8001878:	291c      	cmp	r1, #28
 800187a:	dd8f      	ble.n	800179c <__aeabi_dmul+0x3dc>
 800187c:	3808      	subs	r0, #8
 800187e:	2200      	movs	r2, #0
 8001880:	4084      	lsls	r4, r0
 8001882:	4692      	mov	sl, r2
 8001884:	46a3      	mov	fp, r4
 8001886:	e796      	b.n	80017b6 <__aeabi_dmul+0x3f6>
 8001888:	f000 fc6a 	bl	8002160 <__clzsi2>
 800188c:	0001      	movs	r1, r0
 800188e:	0003      	movs	r3, r0
 8001890:	3115      	adds	r1, #21
 8001892:	3320      	adds	r3, #32
 8001894:	291c      	cmp	r1, #28
 8001896:	dc00      	bgt.n	800189a <__aeabi_dmul+0x4da>
 8001898:	e758      	b.n	800174c <__aeabi_dmul+0x38c>
 800189a:	0002      	movs	r2, r0
 800189c:	464c      	mov	r4, r9
 800189e:	3a08      	subs	r2, #8
 80018a0:	2000      	movs	r0, #0
 80018a2:	4094      	lsls	r4, r2
 80018a4:	e75d      	b.n	8001762 <__aeabi_dmul+0x3a2>
 80018a6:	9b01      	ldr	r3, [sp, #4]
 80018a8:	9302      	str	r3, [sp, #8]
 80018aa:	e711      	b.n	80016d0 <__aeabi_dmul+0x310>
 80018ac:	4b23      	ldr	r3, [pc, #140]	; (800193c <__aeabi_dmul+0x57c>)
 80018ae:	0026      	movs	r6, r4
 80018b0:	469c      	mov	ip, r3
 80018b2:	0003      	movs	r3, r0
 80018b4:	9d02      	ldr	r5, [sp, #8]
 80018b6:	40cb      	lsrs	r3, r1
 80018b8:	4465      	add	r5, ip
 80018ba:	40ae      	lsls	r6, r5
 80018bc:	431e      	orrs	r6, r3
 80018be:	0003      	movs	r3, r0
 80018c0:	40ab      	lsls	r3, r5
 80018c2:	1e58      	subs	r0, r3, #1
 80018c4:	4183      	sbcs	r3, r0
 80018c6:	0030      	movs	r0, r6
 80018c8:	4318      	orrs	r0, r3
 80018ca:	40cc      	lsrs	r4, r1
 80018cc:	0743      	lsls	r3, r0, #29
 80018ce:	d0c7      	beq.n	8001860 <__aeabi_dmul+0x4a0>
 80018d0:	230f      	movs	r3, #15
 80018d2:	4003      	ands	r3, r0
 80018d4:	2b04      	cmp	r3, #4
 80018d6:	d1bd      	bne.n	8001854 <__aeabi_dmul+0x494>
 80018d8:	e7c2      	b.n	8001860 <__aeabi_dmul+0x4a0>
 80018da:	0765      	lsls	r5, r4, #29
 80018dc:	0264      	lsls	r4, r4, #9
 80018de:	0b24      	lsrs	r4, r4, #12
 80018e0:	08c0      	lsrs	r0, r0, #3
 80018e2:	2300      	movs	r3, #0
 80018e4:	4305      	orrs	r5, r0
 80018e6:	e5dd      	b.n	80014a4 <__aeabi_dmul+0xe4>
 80018e8:	2500      	movs	r5, #0
 80018ea:	2302      	movs	r3, #2
 80018ec:	2e0f      	cmp	r6, #15
 80018ee:	d10c      	bne.n	800190a <__aeabi_dmul+0x54a>
 80018f0:	2480      	movs	r4, #128	; 0x80
 80018f2:	465b      	mov	r3, fp
 80018f4:	0324      	lsls	r4, r4, #12
 80018f6:	4223      	tst	r3, r4
 80018f8:	d00e      	beq.n	8001918 <__aeabi_dmul+0x558>
 80018fa:	4221      	tst	r1, r4
 80018fc:	d10c      	bne.n	8001918 <__aeabi_dmul+0x558>
 80018fe:	430c      	orrs	r4, r1
 8001900:	0324      	lsls	r4, r4, #12
 8001902:	003a      	movs	r2, r7
 8001904:	4b0e      	ldr	r3, [pc, #56]	; (8001940 <__aeabi_dmul+0x580>)
 8001906:	0b24      	lsrs	r4, r4, #12
 8001908:	e5cc      	b.n	80014a4 <__aeabi_dmul+0xe4>
 800190a:	2e0b      	cmp	r6, #11
 800190c:	d000      	beq.n	8001910 <__aeabi_dmul+0x550>
 800190e:	e5a2      	b.n	8001456 <__aeabi_dmul+0x96>
 8001910:	468b      	mov	fp, r1
 8001912:	46aa      	mov	sl, r5
 8001914:	9300      	str	r3, [sp, #0]
 8001916:	e5f7      	b.n	8001508 <__aeabi_dmul+0x148>
 8001918:	2480      	movs	r4, #128	; 0x80
 800191a:	465b      	mov	r3, fp
 800191c:	0324      	lsls	r4, r4, #12
 800191e:	431c      	orrs	r4, r3
 8001920:	0324      	lsls	r4, r4, #12
 8001922:	4642      	mov	r2, r8
 8001924:	4655      	mov	r5, sl
 8001926:	4b06      	ldr	r3, [pc, #24]	; (8001940 <__aeabi_dmul+0x580>)
 8001928:	0b24      	lsrs	r4, r4, #12
 800192a:	e5bb      	b.n	80014a4 <__aeabi_dmul+0xe4>
 800192c:	464d      	mov	r5, r9
 800192e:	0021      	movs	r1, r4
 8001930:	2303      	movs	r3, #3
 8001932:	e7db      	b.n	80018ec <__aeabi_dmul+0x52c>
 8001934:	fffffc0d 	.word	0xfffffc0d
 8001938:	0000043e 	.word	0x0000043e
 800193c:	0000041e 	.word	0x0000041e
 8001940:	000007ff 	.word	0x000007ff

08001944 <__aeabi_dsub>:
 8001944:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001946:	4657      	mov	r7, sl
 8001948:	464e      	mov	r6, r9
 800194a:	4645      	mov	r5, r8
 800194c:	46de      	mov	lr, fp
 800194e:	b5e0      	push	{r5, r6, r7, lr}
 8001950:	000d      	movs	r5, r1
 8001952:	0004      	movs	r4, r0
 8001954:	0019      	movs	r1, r3
 8001956:	0010      	movs	r0, r2
 8001958:	032b      	lsls	r3, r5, #12
 800195a:	0a5b      	lsrs	r3, r3, #9
 800195c:	0f62      	lsrs	r2, r4, #29
 800195e:	431a      	orrs	r2, r3
 8001960:	00e3      	lsls	r3, r4, #3
 8001962:	030c      	lsls	r4, r1, #12
 8001964:	0a64      	lsrs	r4, r4, #9
 8001966:	0f47      	lsrs	r7, r0, #29
 8001968:	4327      	orrs	r7, r4
 800196a:	4cd0      	ldr	r4, [pc, #832]	; (8001cac <__aeabi_dsub+0x368>)
 800196c:	006e      	lsls	r6, r5, #1
 800196e:	4691      	mov	r9, r2
 8001970:	b083      	sub	sp, #12
 8001972:	004a      	lsls	r2, r1, #1
 8001974:	00c0      	lsls	r0, r0, #3
 8001976:	4698      	mov	r8, r3
 8001978:	46a2      	mov	sl, r4
 800197a:	0d76      	lsrs	r6, r6, #21
 800197c:	0fed      	lsrs	r5, r5, #31
 800197e:	0d52      	lsrs	r2, r2, #21
 8001980:	0fc9      	lsrs	r1, r1, #31
 8001982:	9001      	str	r0, [sp, #4]
 8001984:	42a2      	cmp	r2, r4
 8001986:	d100      	bne.n	800198a <__aeabi_dsub+0x46>
 8001988:	e0b9      	b.n	8001afe <__aeabi_dsub+0x1ba>
 800198a:	2401      	movs	r4, #1
 800198c:	4061      	eors	r1, r4
 800198e:	468b      	mov	fp, r1
 8001990:	428d      	cmp	r5, r1
 8001992:	d100      	bne.n	8001996 <__aeabi_dsub+0x52>
 8001994:	e08d      	b.n	8001ab2 <__aeabi_dsub+0x16e>
 8001996:	1ab4      	subs	r4, r6, r2
 8001998:	46a4      	mov	ip, r4
 800199a:	2c00      	cmp	r4, #0
 800199c:	dc00      	bgt.n	80019a0 <__aeabi_dsub+0x5c>
 800199e:	e0b7      	b.n	8001b10 <__aeabi_dsub+0x1cc>
 80019a0:	2a00      	cmp	r2, #0
 80019a2:	d100      	bne.n	80019a6 <__aeabi_dsub+0x62>
 80019a4:	e0cb      	b.n	8001b3e <__aeabi_dsub+0x1fa>
 80019a6:	4ac1      	ldr	r2, [pc, #772]	; (8001cac <__aeabi_dsub+0x368>)
 80019a8:	4296      	cmp	r6, r2
 80019aa:	d100      	bne.n	80019ae <__aeabi_dsub+0x6a>
 80019ac:	e186      	b.n	8001cbc <__aeabi_dsub+0x378>
 80019ae:	2280      	movs	r2, #128	; 0x80
 80019b0:	0412      	lsls	r2, r2, #16
 80019b2:	4317      	orrs	r7, r2
 80019b4:	4662      	mov	r2, ip
 80019b6:	2a38      	cmp	r2, #56	; 0x38
 80019b8:	dd00      	ble.n	80019bc <__aeabi_dsub+0x78>
 80019ba:	e1a4      	b.n	8001d06 <__aeabi_dsub+0x3c2>
 80019bc:	2a1f      	cmp	r2, #31
 80019be:	dd00      	ble.n	80019c2 <__aeabi_dsub+0x7e>
 80019c0:	e21d      	b.n	8001dfe <__aeabi_dsub+0x4ba>
 80019c2:	4661      	mov	r1, ip
 80019c4:	2220      	movs	r2, #32
 80019c6:	003c      	movs	r4, r7
 80019c8:	1a52      	subs	r2, r2, r1
 80019ca:	0001      	movs	r1, r0
 80019cc:	4090      	lsls	r0, r2
 80019ce:	4094      	lsls	r4, r2
 80019d0:	1e42      	subs	r2, r0, #1
 80019d2:	4190      	sbcs	r0, r2
 80019d4:	4662      	mov	r2, ip
 80019d6:	46a0      	mov	r8, r4
 80019d8:	4664      	mov	r4, ip
 80019da:	40d7      	lsrs	r7, r2
 80019dc:	464a      	mov	r2, r9
 80019de:	40e1      	lsrs	r1, r4
 80019e0:	4644      	mov	r4, r8
 80019e2:	1bd2      	subs	r2, r2, r7
 80019e4:	4691      	mov	r9, r2
 80019e6:	430c      	orrs	r4, r1
 80019e8:	4304      	orrs	r4, r0
 80019ea:	1b1c      	subs	r4, r3, r4
 80019ec:	42a3      	cmp	r3, r4
 80019ee:	4192      	sbcs	r2, r2
 80019f0:	464b      	mov	r3, r9
 80019f2:	4252      	negs	r2, r2
 80019f4:	1a9b      	subs	r3, r3, r2
 80019f6:	469a      	mov	sl, r3
 80019f8:	4653      	mov	r3, sl
 80019fa:	021b      	lsls	r3, r3, #8
 80019fc:	d400      	bmi.n	8001a00 <__aeabi_dsub+0xbc>
 80019fe:	e12b      	b.n	8001c58 <__aeabi_dsub+0x314>
 8001a00:	4653      	mov	r3, sl
 8001a02:	025a      	lsls	r2, r3, #9
 8001a04:	0a53      	lsrs	r3, r2, #9
 8001a06:	469a      	mov	sl, r3
 8001a08:	4653      	mov	r3, sl
 8001a0a:	2b00      	cmp	r3, #0
 8001a0c:	d100      	bne.n	8001a10 <__aeabi_dsub+0xcc>
 8001a0e:	e166      	b.n	8001cde <__aeabi_dsub+0x39a>
 8001a10:	4650      	mov	r0, sl
 8001a12:	f000 fba5 	bl	8002160 <__clzsi2>
 8001a16:	0003      	movs	r3, r0
 8001a18:	3b08      	subs	r3, #8
 8001a1a:	2220      	movs	r2, #32
 8001a1c:	0020      	movs	r0, r4
 8001a1e:	1ad2      	subs	r2, r2, r3
 8001a20:	4651      	mov	r1, sl
 8001a22:	40d0      	lsrs	r0, r2
 8001a24:	4099      	lsls	r1, r3
 8001a26:	0002      	movs	r2, r0
 8001a28:	409c      	lsls	r4, r3
 8001a2a:	430a      	orrs	r2, r1
 8001a2c:	429e      	cmp	r6, r3
 8001a2e:	dd00      	ble.n	8001a32 <__aeabi_dsub+0xee>
 8001a30:	e164      	b.n	8001cfc <__aeabi_dsub+0x3b8>
 8001a32:	1b9b      	subs	r3, r3, r6
 8001a34:	1c59      	adds	r1, r3, #1
 8001a36:	291f      	cmp	r1, #31
 8001a38:	dd00      	ble.n	8001a3c <__aeabi_dsub+0xf8>
 8001a3a:	e0fe      	b.n	8001c3a <__aeabi_dsub+0x2f6>
 8001a3c:	2320      	movs	r3, #32
 8001a3e:	0010      	movs	r0, r2
 8001a40:	0026      	movs	r6, r4
 8001a42:	1a5b      	subs	r3, r3, r1
 8001a44:	409c      	lsls	r4, r3
 8001a46:	4098      	lsls	r0, r3
 8001a48:	40ce      	lsrs	r6, r1
 8001a4a:	40ca      	lsrs	r2, r1
 8001a4c:	1e63      	subs	r3, r4, #1
 8001a4e:	419c      	sbcs	r4, r3
 8001a50:	4330      	orrs	r0, r6
 8001a52:	4692      	mov	sl, r2
 8001a54:	2600      	movs	r6, #0
 8001a56:	4304      	orrs	r4, r0
 8001a58:	0763      	lsls	r3, r4, #29
 8001a5a:	d009      	beq.n	8001a70 <__aeabi_dsub+0x12c>
 8001a5c:	230f      	movs	r3, #15
 8001a5e:	4023      	ands	r3, r4
 8001a60:	2b04      	cmp	r3, #4
 8001a62:	d005      	beq.n	8001a70 <__aeabi_dsub+0x12c>
 8001a64:	1d23      	adds	r3, r4, #4
 8001a66:	42a3      	cmp	r3, r4
 8001a68:	41a4      	sbcs	r4, r4
 8001a6a:	4264      	negs	r4, r4
 8001a6c:	44a2      	add	sl, r4
 8001a6e:	001c      	movs	r4, r3
 8001a70:	4653      	mov	r3, sl
 8001a72:	021b      	lsls	r3, r3, #8
 8001a74:	d400      	bmi.n	8001a78 <__aeabi_dsub+0x134>
 8001a76:	e0f2      	b.n	8001c5e <__aeabi_dsub+0x31a>
 8001a78:	4b8c      	ldr	r3, [pc, #560]	; (8001cac <__aeabi_dsub+0x368>)
 8001a7a:	3601      	adds	r6, #1
 8001a7c:	429e      	cmp	r6, r3
 8001a7e:	d100      	bne.n	8001a82 <__aeabi_dsub+0x13e>
 8001a80:	e10f      	b.n	8001ca2 <__aeabi_dsub+0x35e>
 8001a82:	4653      	mov	r3, sl
 8001a84:	498a      	ldr	r1, [pc, #552]	; (8001cb0 <__aeabi_dsub+0x36c>)
 8001a86:	08e4      	lsrs	r4, r4, #3
 8001a88:	400b      	ands	r3, r1
 8001a8a:	0019      	movs	r1, r3
 8001a8c:	075b      	lsls	r3, r3, #29
 8001a8e:	4323      	orrs	r3, r4
 8001a90:	0572      	lsls	r2, r6, #21
 8001a92:	024c      	lsls	r4, r1, #9
 8001a94:	0b24      	lsrs	r4, r4, #12
 8001a96:	0d52      	lsrs	r2, r2, #21
 8001a98:	0512      	lsls	r2, r2, #20
 8001a9a:	4322      	orrs	r2, r4
 8001a9c:	07ed      	lsls	r5, r5, #31
 8001a9e:	432a      	orrs	r2, r5
 8001aa0:	0018      	movs	r0, r3
 8001aa2:	0011      	movs	r1, r2
 8001aa4:	b003      	add	sp, #12
 8001aa6:	bcf0      	pop	{r4, r5, r6, r7}
 8001aa8:	46bb      	mov	fp, r7
 8001aaa:	46b2      	mov	sl, r6
 8001aac:	46a9      	mov	r9, r5
 8001aae:	46a0      	mov	r8, r4
 8001ab0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001ab2:	1ab4      	subs	r4, r6, r2
 8001ab4:	46a4      	mov	ip, r4
 8001ab6:	2c00      	cmp	r4, #0
 8001ab8:	dd59      	ble.n	8001b6e <__aeabi_dsub+0x22a>
 8001aba:	2a00      	cmp	r2, #0
 8001abc:	d100      	bne.n	8001ac0 <__aeabi_dsub+0x17c>
 8001abe:	e0b0      	b.n	8001c22 <__aeabi_dsub+0x2de>
 8001ac0:	4556      	cmp	r6, sl
 8001ac2:	d100      	bne.n	8001ac6 <__aeabi_dsub+0x182>
 8001ac4:	e0fa      	b.n	8001cbc <__aeabi_dsub+0x378>
 8001ac6:	2280      	movs	r2, #128	; 0x80
 8001ac8:	0412      	lsls	r2, r2, #16
 8001aca:	4317      	orrs	r7, r2
 8001acc:	4662      	mov	r2, ip
 8001ace:	2a38      	cmp	r2, #56	; 0x38
 8001ad0:	dd00      	ble.n	8001ad4 <__aeabi_dsub+0x190>
 8001ad2:	e0d4      	b.n	8001c7e <__aeabi_dsub+0x33a>
 8001ad4:	2a1f      	cmp	r2, #31
 8001ad6:	dc00      	bgt.n	8001ada <__aeabi_dsub+0x196>
 8001ad8:	e1c0      	b.n	8001e5c <__aeabi_dsub+0x518>
 8001ada:	0039      	movs	r1, r7
 8001adc:	3a20      	subs	r2, #32
 8001ade:	40d1      	lsrs	r1, r2
 8001ae0:	4662      	mov	r2, ip
 8001ae2:	2a20      	cmp	r2, #32
 8001ae4:	d006      	beq.n	8001af4 <__aeabi_dsub+0x1b0>
 8001ae6:	4664      	mov	r4, ip
 8001ae8:	2240      	movs	r2, #64	; 0x40
 8001aea:	1b12      	subs	r2, r2, r4
 8001aec:	003c      	movs	r4, r7
 8001aee:	4094      	lsls	r4, r2
 8001af0:	4304      	orrs	r4, r0
 8001af2:	9401      	str	r4, [sp, #4]
 8001af4:	9c01      	ldr	r4, [sp, #4]
 8001af6:	1e62      	subs	r2, r4, #1
 8001af8:	4194      	sbcs	r4, r2
 8001afa:	430c      	orrs	r4, r1
 8001afc:	e0c3      	b.n	8001c86 <__aeabi_dsub+0x342>
 8001afe:	003c      	movs	r4, r7
 8001b00:	4304      	orrs	r4, r0
 8001b02:	d02b      	beq.n	8001b5c <__aeabi_dsub+0x218>
 8001b04:	468b      	mov	fp, r1
 8001b06:	428d      	cmp	r5, r1
 8001b08:	d02e      	beq.n	8001b68 <__aeabi_dsub+0x224>
 8001b0a:	4c6a      	ldr	r4, [pc, #424]	; (8001cb4 <__aeabi_dsub+0x370>)
 8001b0c:	46a4      	mov	ip, r4
 8001b0e:	44b4      	add	ip, r6
 8001b10:	4664      	mov	r4, ip
 8001b12:	2c00      	cmp	r4, #0
 8001b14:	d05f      	beq.n	8001bd6 <__aeabi_dsub+0x292>
 8001b16:	1b94      	subs	r4, r2, r6
 8001b18:	46a4      	mov	ip, r4
 8001b1a:	2e00      	cmp	r6, #0
 8001b1c:	d000      	beq.n	8001b20 <__aeabi_dsub+0x1dc>
 8001b1e:	e120      	b.n	8001d62 <__aeabi_dsub+0x41e>
 8001b20:	464c      	mov	r4, r9
 8001b22:	431c      	orrs	r4, r3
 8001b24:	d100      	bne.n	8001b28 <__aeabi_dsub+0x1e4>
 8001b26:	e1c7      	b.n	8001eb8 <__aeabi_dsub+0x574>
 8001b28:	4661      	mov	r1, ip
 8001b2a:	1e4c      	subs	r4, r1, #1
 8001b2c:	2901      	cmp	r1, #1
 8001b2e:	d100      	bne.n	8001b32 <__aeabi_dsub+0x1ee>
 8001b30:	e223      	b.n	8001f7a <__aeabi_dsub+0x636>
 8001b32:	4d5e      	ldr	r5, [pc, #376]	; (8001cac <__aeabi_dsub+0x368>)
 8001b34:	45ac      	cmp	ip, r5
 8001b36:	d100      	bne.n	8001b3a <__aeabi_dsub+0x1f6>
 8001b38:	e1d8      	b.n	8001eec <__aeabi_dsub+0x5a8>
 8001b3a:	46a4      	mov	ip, r4
 8001b3c:	e11a      	b.n	8001d74 <__aeabi_dsub+0x430>
 8001b3e:	003a      	movs	r2, r7
 8001b40:	4302      	orrs	r2, r0
 8001b42:	d100      	bne.n	8001b46 <__aeabi_dsub+0x202>
 8001b44:	e0e4      	b.n	8001d10 <__aeabi_dsub+0x3cc>
 8001b46:	0022      	movs	r2, r4
 8001b48:	3a01      	subs	r2, #1
 8001b4a:	2c01      	cmp	r4, #1
 8001b4c:	d100      	bne.n	8001b50 <__aeabi_dsub+0x20c>
 8001b4e:	e1c3      	b.n	8001ed8 <__aeabi_dsub+0x594>
 8001b50:	4956      	ldr	r1, [pc, #344]	; (8001cac <__aeabi_dsub+0x368>)
 8001b52:	428c      	cmp	r4, r1
 8001b54:	d100      	bne.n	8001b58 <__aeabi_dsub+0x214>
 8001b56:	e0b1      	b.n	8001cbc <__aeabi_dsub+0x378>
 8001b58:	4694      	mov	ip, r2
 8001b5a:	e72b      	b.n	80019b4 <__aeabi_dsub+0x70>
 8001b5c:	2401      	movs	r4, #1
 8001b5e:	4061      	eors	r1, r4
 8001b60:	468b      	mov	fp, r1
 8001b62:	428d      	cmp	r5, r1
 8001b64:	d000      	beq.n	8001b68 <__aeabi_dsub+0x224>
 8001b66:	e716      	b.n	8001996 <__aeabi_dsub+0x52>
 8001b68:	4952      	ldr	r1, [pc, #328]	; (8001cb4 <__aeabi_dsub+0x370>)
 8001b6a:	468c      	mov	ip, r1
 8001b6c:	44b4      	add	ip, r6
 8001b6e:	4664      	mov	r4, ip
 8001b70:	2c00      	cmp	r4, #0
 8001b72:	d100      	bne.n	8001b76 <__aeabi_dsub+0x232>
 8001b74:	e0d3      	b.n	8001d1e <__aeabi_dsub+0x3da>
 8001b76:	1b91      	subs	r1, r2, r6
 8001b78:	468c      	mov	ip, r1
 8001b7a:	2e00      	cmp	r6, #0
 8001b7c:	d100      	bne.n	8001b80 <__aeabi_dsub+0x23c>
 8001b7e:	e15e      	b.n	8001e3e <__aeabi_dsub+0x4fa>
 8001b80:	494a      	ldr	r1, [pc, #296]	; (8001cac <__aeabi_dsub+0x368>)
 8001b82:	428a      	cmp	r2, r1
 8001b84:	d100      	bne.n	8001b88 <__aeabi_dsub+0x244>
 8001b86:	e1be      	b.n	8001f06 <__aeabi_dsub+0x5c2>
 8001b88:	2180      	movs	r1, #128	; 0x80
 8001b8a:	464c      	mov	r4, r9
 8001b8c:	0409      	lsls	r1, r1, #16
 8001b8e:	430c      	orrs	r4, r1
 8001b90:	46a1      	mov	r9, r4
 8001b92:	4661      	mov	r1, ip
 8001b94:	2938      	cmp	r1, #56	; 0x38
 8001b96:	dd00      	ble.n	8001b9a <__aeabi_dsub+0x256>
 8001b98:	e1ba      	b.n	8001f10 <__aeabi_dsub+0x5cc>
 8001b9a:	291f      	cmp	r1, #31
 8001b9c:	dd00      	ble.n	8001ba0 <__aeabi_dsub+0x25c>
 8001b9e:	e227      	b.n	8001ff0 <__aeabi_dsub+0x6ac>
 8001ba0:	2420      	movs	r4, #32
 8001ba2:	1a64      	subs	r4, r4, r1
 8001ba4:	4649      	mov	r1, r9
 8001ba6:	40a1      	lsls	r1, r4
 8001ba8:	001e      	movs	r6, r3
 8001baa:	4688      	mov	r8, r1
 8001bac:	4661      	mov	r1, ip
 8001bae:	40a3      	lsls	r3, r4
 8001bb0:	40ce      	lsrs	r6, r1
 8001bb2:	4641      	mov	r1, r8
 8001bb4:	1e5c      	subs	r4, r3, #1
 8001bb6:	41a3      	sbcs	r3, r4
 8001bb8:	4331      	orrs	r1, r6
 8001bba:	4319      	orrs	r1, r3
 8001bbc:	000c      	movs	r4, r1
 8001bbe:	4663      	mov	r3, ip
 8001bc0:	4649      	mov	r1, r9
 8001bc2:	40d9      	lsrs	r1, r3
 8001bc4:	187f      	adds	r7, r7, r1
 8001bc6:	1824      	adds	r4, r4, r0
 8001bc8:	4284      	cmp	r4, r0
 8001bca:	419b      	sbcs	r3, r3
 8001bcc:	425b      	negs	r3, r3
 8001bce:	469a      	mov	sl, r3
 8001bd0:	0016      	movs	r6, r2
 8001bd2:	44ba      	add	sl, r7
 8001bd4:	e05d      	b.n	8001c92 <__aeabi_dsub+0x34e>
 8001bd6:	4c38      	ldr	r4, [pc, #224]	; (8001cb8 <__aeabi_dsub+0x374>)
 8001bd8:	1c72      	adds	r2, r6, #1
 8001bda:	4222      	tst	r2, r4
 8001bdc:	d000      	beq.n	8001be0 <__aeabi_dsub+0x29c>
 8001bde:	e0df      	b.n	8001da0 <__aeabi_dsub+0x45c>
 8001be0:	464a      	mov	r2, r9
 8001be2:	431a      	orrs	r2, r3
 8001be4:	2e00      	cmp	r6, #0
 8001be6:	d000      	beq.n	8001bea <__aeabi_dsub+0x2a6>
 8001be8:	e15c      	b.n	8001ea4 <__aeabi_dsub+0x560>
 8001bea:	2a00      	cmp	r2, #0
 8001bec:	d100      	bne.n	8001bf0 <__aeabi_dsub+0x2ac>
 8001bee:	e1cf      	b.n	8001f90 <__aeabi_dsub+0x64c>
 8001bf0:	003a      	movs	r2, r7
 8001bf2:	4302      	orrs	r2, r0
 8001bf4:	d100      	bne.n	8001bf8 <__aeabi_dsub+0x2b4>
 8001bf6:	e17f      	b.n	8001ef8 <__aeabi_dsub+0x5b4>
 8001bf8:	1a1c      	subs	r4, r3, r0
 8001bfa:	464a      	mov	r2, r9
 8001bfc:	42a3      	cmp	r3, r4
 8001bfe:	4189      	sbcs	r1, r1
 8001c00:	1bd2      	subs	r2, r2, r7
 8001c02:	4249      	negs	r1, r1
 8001c04:	1a52      	subs	r2, r2, r1
 8001c06:	4692      	mov	sl, r2
 8001c08:	0212      	lsls	r2, r2, #8
 8001c0a:	d400      	bmi.n	8001c0e <__aeabi_dsub+0x2ca>
 8001c0c:	e20a      	b.n	8002024 <__aeabi_dsub+0x6e0>
 8001c0e:	1ac4      	subs	r4, r0, r3
 8001c10:	42a0      	cmp	r0, r4
 8001c12:	4180      	sbcs	r0, r0
 8001c14:	464b      	mov	r3, r9
 8001c16:	4240      	negs	r0, r0
 8001c18:	1aff      	subs	r7, r7, r3
 8001c1a:	1a3b      	subs	r3, r7, r0
 8001c1c:	469a      	mov	sl, r3
 8001c1e:	465d      	mov	r5, fp
 8001c20:	e71a      	b.n	8001a58 <__aeabi_dsub+0x114>
 8001c22:	003a      	movs	r2, r7
 8001c24:	4302      	orrs	r2, r0
 8001c26:	d073      	beq.n	8001d10 <__aeabi_dsub+0x3cc>
 8001c28:	0022      	movs	r2, r4
 8001c2a:	3a01      	subs	r2, #1
 8001c2c:	2c01      	cmp	r4, #1
 8001c2e:	d100      	bne.n	8001c32 <__aeabi_dsub+0x2ee>
 8001c30:	e0cb      	b.n	8001dca <__aeabi_dsub+0x486>
 8001c32:	4554      	cmp	r4, sl
 8001c34:	d042      	beq.n	8001cbc <__aeabi_dsub+0x378>
 8001c36:	4694      	mov	ip, r2
 8001c38:	e748      	b.n	8001acc <__aeabi_dsub+0x188>
 8001c3a:	0010      	movs	r0, r2
 8001c3c:	3b1f      	subs	r3, #31
 8001c3e:	40d8      	lsrs	r0, r3
 8001c40:	2920      	cmp	r1, #32
 8001c42:	d003      	beq.n	8001c4c <__aeabi_dsub+0x308>
 8001c44:	2340      	movs	r3, #64	; 0x40
 8001c46:	1a5b      	subs	r3, r3, r1
 8001c48:	409a      	lsls	r2, r3
 8001c4a:	4314      	orrs	r4, r2
 8001c4c:	1e63      	subs	r3, r4, #1
 8001c4e:	419c      	sbcs	r4, r3
 8001c50:	2300      	movs	r3, #0
 8001c52:	2600      	movs	r6, #0
 8001c54:	469a      	mov	sl, r3
 8001c56:	4304      	orrs	r4, r0
 8001c58:	0763      	lsls	r3, r4, #29
 8001c5a:	d000      	beq.n	8001c5e <__aeabi_dsub+0x31a>
 8001c5c:	e6fe      	b.n	8001a5c <__aeabi_dsub+0x118>
 8001c5e:	4652      	mov	r2, sl
 8001c60:	08e3      	lsrs	r3, r4, #3
 8001c62:	0752      	lsls	r2, r2, #29
 8001c64:	4313      	orrs	r3, r2
 8001c66:	4652      	mov	r2, sl
 8001c68:	46b4      	mov	ip, r6
 8001c6a:	08d2      	lsrs	r2, r2, #3
 8001c6c:	490f      	ldr	r1, [pc, #60]	; (8001cac <__aeabi_dsub+0x368>)
 8001c6e:	458c      	cmp	ip, r1
 8001c70:	d02a      	beq.n	8001cc8 <__aeabi_dsub+0x384>
 8001c72:	0312      	lsls	r2, r2, #12
 8001c74:	0b14      	lsrs	r4, r2, #12
 8001c76:	4662      	mov	r2, ip
 8001c78:	0552      	lsls	r2, r2, #21
 8001c7a:	0d52      	lsrs	r2, r2, #21
 8001c7c:	e70c      	b.n	8001a98 <__aeabi_dsub+0x154>
 8001c7e:	003c      	movs	r4, r7
 8001c80:	4304      	orrs	r4, r0
 8001c82:	1e62      	subs	r2, r4, #1
 8001c84:	4194      	sbcs	r4, r2
 8001c86:	18e4      	adds	r4, r4, r3
 8001c88:	429c      	cmp	r4, r3
 8001c8a:	4192      	sbcs	r2, r2
 8001c8c:	4252      	negs	r2, r2
 8001c8e:	444a      	add	r2, r9
 8001c90:	4692      	mov	sl, r2
 8001c92:	4653      	mov	r3, sl
 8001c94:	021b      	lsls	r3, r3, #8
 8001c96:	d5df      	bpl.n	8001c58 <__aeabi_dsub+0x314>
 8001c98:	4b04      	ldr	r3, [pc, #16]	; (8001cac <__aeabi_dsub+0x368>)
 8001c9a:	3601      	adds	r6, #1
 8001c9c:	429e      	cmp	r6, r3
 8001c9e:	d000      	beq.n	8001ca2 <__aeabi_dsub+0x35e>
 8001ca0:	e0a0      	b.n	8001de4 <__aeabi_dsub+0x4a0>
 8001ca2:	0032      	movs	r2, r6
 8001ca4:	2400      	movs	r4, #0
 8001ca6:	2300      	movs	r3, #0
 8001ca8:	e6f6      	b.n	8001a98 <__aeabi_dsub+0x154>
 8001caa:	46c0      	nop			; (mov r8, r8)
 8001cac:	000007ff 	.word	0x000007ff
 8001cb0:	ff7fffff 	.word	0xff7fffff
 8001cb4:	fffff801 	.word	0xfffff801
 8001cb8:	000007fe 	.word	0x000007fe
 8001cbc:	08db      	lsrs	r3, r3, #3
 8001cbe:	464a      	mov	r2, r9
 8001cc0:	0752      	lsls	r2, r2, #29
 8001cc2:	4313      	orrs	r3, r2
 8001cc4:	464a      	mov	r2, r9
 8001cc6:	08d2      	lsrs	r2, r2, #3
 8001cc8:	0019      	movs	r1, r3
 8001cca:	4311      	orrs	r1, r2
 8001ccc:	d100      	bne.n	8001cd0 <__aeabi_dsub+0x38c>
 8001cce:	e1b5      	b.n	800203c <__aeabi_dsub+0x6f8>
 8001cd0:	2480      	movs	r4, #128	; 0x80
 8001cd2:	0324      	lsls	r4, r4, #12
 8001cd4:	4314      	orrs	r4, r2
 8001cd6:	0324      	lsls	r4, r4, #12
 8001cd8:	4ad5      	ldr	r2, [pc, #852]	; (8002030 <__aeabi_dsub+0x6ec>)
 8001cda:	0b24      	lsrs	r4, r4, #12
 8001cdc:	e6dc      	b.n	8001a98 <__aeabi_dsub+0x154>
 8001cde:	0020      	movs	r0, r4
 8001ce0:	f000 fa3e 	bl	8002160 <__clzsi2>
 8001ce4:	0003      	movs	r3, r0
 8001ce6:	3318      	adds	r3, #24
 8001ce8:	2b1f      	cmp	r3, #31
 8001cea:	dc00      	bgt.n	8001cee <__aeabi_dsub+0x3aa>
 8001cec:	e695      	b.n	8001a1a <__aeabi_dsub+0xd6>
 8001cee:	0022      	movs	r2, r4
 8001cf0:	3808      	subs	r0, #8
 8001cf2:	4082      	lsls	r2, r0
 8001cf4:	2400      	movs	r4, #0
 8001cf6:	429e      	cmp	r6, r3
 8001cf8:	dc00      	bgt.n	8001cfc <__aeabi_dsub+0x3b8>
 8001cfa:	e69a      	b.n	8001a32 <__aeabi_dsub+0xee>
 8001cfc:	1af6      	subs	r6, r6, r3
 8001cfe:	4bcd      	ldr	r3, [pc, #820]	; (8002034 <__aeabi_dsub+0x6f0>)
 8001d00:	401a      	ands	r2, r3
 8001d02:	4692      	mov	sl, r2
 8001d04:	e6a8      	b.n	8001a58 <__aeabi_dsub+0x114>
 8001d06:	003c      	movs	r4, r7
 8001d08:	4304      	orrs	r4, r0
 8001d0a:	1e62      	subs	r2, r4, #1
 8001d0c:	4194      	sbcs	r4, r2
 8001d0e:	e66c      	b.n	80019ea <__aeabi_dsub+0xa6>
 8001d10:	464a      	mov	r2, r9
 8001d12:	08db      	lsrs	r3, r3, #3
 8001d14:	0752      	lsls	r2, r2, #29
 8001d16:	4313      	orrs	r3, r2
 8001d18:	464a      	mov	r2, r9
 8001d1a:	08d2      	lsrs	r2, r2, #3
 8001d1c:	e7a6      	b.n	8001c6c <__aeabi_dsub+0x328>
 8001d1e:	4cc6      	ldr	r4, [pc, #792]	; (8002038 <__aeabi_dsub+0x6f4>)
 8001d20:	1c72      	adds	r2, r6, #1
 8001d22:	4222      	tst	r2, r4
 8001d24:	d000      	beq.n	8001d28 <__aeabi_dsub+0x3e4>
 8001d26:	e0ac      	b.n	8001e82 <__aeabi_dsub+0x53e>
 8001d28:	464a      	mov	r2, r9
 8001d2a:	431a      	orrs	r2, r3
 8001d2c:	2e00      	cmp	r6, #0
 8001d2e:	d000      	beq.n	8001d32 <__aeabi_dsub+0x3ee>
 8001d30:	e105      	b.n	8001f3e <__aeabi_dsub+0x5fa>
 8001d32:	2a00      	cmp	r2, #0
 8001d34:	d100      	bne.n	8001d38 <__aeabi_dsub+0x3f4>
 8001d36:	e156      	b.n	8001fe6 <__aeabi_dsub+0x6a2>
 8001d38:	003a      	movs	r2, r7
 8001d3a:	4302      	orrs	r2, r0
 8001d3c:	d100      	bne.n	8001d40 <__aeabi_dsub+0x3fc>
 8001d3e:	e0db      	b.n	8001ef8 <__aeabi_dsub+0x5b4>
 8001d40:	181c      	adds	r4, r3, r0
 8001d42:	429c      	cmp	r4, r3
 8001d44:	419b      	sbcs	r3, r3
 8001d46:	444f      	add	r7, r9
 8001d48:	46ba      	mov	sl, r7
 8001d4a:	425b      	negs	r3, r3
 8001d4c:	449a      	add	sl, r3
 8001d4e:	4653      	mov	r3, sl
 8001d50:	021b      	lsls	r3, r3, #8
 8001d52:	d400      	bmi.n	8001d56 <__aeabi_dsub+0x412>
 8001d54:	e780      	b.n	8001c58 <__aeabi_dsub+0x314>
 8001d56:	4652      	mov	r2, sl
 8001d58:	4bb6      	ldr	r3, [pc, #728]	; (8002034 <__aeabi_dsub+0x6f0>)
 8001d5a:	2601      	movs	r6, #1
 8001d5c:	401a      	ands	r2, r3
 8001d5e:	4692      	mov	sl, r2
 8001d60:	e77a      	b.n	8001c58 <__aeabi_dsub+0x314>
 8001d62:	4cb3      	ldr	r4, [pc, #716]	; (8002030 <__aeabi_dsub+0x6ec>)
 8001d64:	42a2      	cmp	r2, r4
 8001d66:	d100      	bne.n	8001d6a <__aeabi_dsub+0x426>
 8001d68:	e0c0      	b.n	8001eec <__aeabi_dsub+0x5a8>
 8001d6a:	2480      	movs	r4, #128	; 0x80
 8001d6c:	464d      	mov	r5, r9
 8001d6e:	0424      	lsls	r4, r4, #16
 8001d70:	4325      	orrs	r5, r4
 8001d72:	46a9      	mov	r9, r5
 8001d74:	4664      	mov	r4, ip
 8001d76:	2c38      	cmp	r4, #56	; 0x38
 8001d78:	dc53      	bgt.n	8001e22 <__aeabi_dsub+0x4de>
 8001d7a:	4661      	mov	r1, ip
 8001d7c:	2c1f      	cmp	r4, #31
 8001d7e:	dd00      	ble.n	8001d82 <__aeabi_dsub+0x43e>
 8001d80:	e0cd      	b.n	8001f1e <__aeabi_dsub+0x5da>
 8001d82:	2520      	movs	r5, #32
 8001d84:	001e      	movs	r6, r3
 8001d86:	1b2d      	subs	r5, r5, r4
 8001d88:	464c      	mov	r4, r9
 8001d8a:	40ab      	lsls	r3, r5
 8001d8c:	40ac      	lsls	r4, r5
 8001d8e:	40ce      	lsrs	r6, r1
 8001d90:	1e5d      	subs	r5, r3, #1
 8001d92:	41ab      	sbcs	r3, r5
 8001d94:	4334      	orrs	r4, r6
 8001d96:	4323      	orrs	r3, r4
 8001d98:	464c      	mov	r4, r9
 8001d9a:	40cc      	lsrs	r4, r1
 8001d9c:	1b3f      	subs	r7, r7, r4
 8001d9e:	e045      	b.n	8001e2c <__aeabi_dsub+0x4e8>
 8001da0:	464a      	mov	r2, r9
 8001da2:	1a1c      	subs	r4, r3, r0
 8001da4:	1bd1      	subs	r1, r2, r7
 8001da6:	42a3      	cmp	r3, r4
 8001da8:	4192      	sbcs	r2, r2
 8001daa:	4252      	negs	r2, r2
 8001dac:	4692      	mov	sl, r2
 8001dae:	000a      	movs	r2, r1
 8001db0:	4651      	mov	r1, sl
 8001db2:	1a52      	subs	r2, r2, r1
 8001db4:	4692      	mov	sl, r2
 8001db6:	0212      	lsls	r2, r2, #8
 8001db8:	d500      	bpl.n	8001dbc <__aeabi_dsub+0x478>
 8001dba:	e083      	b.n	8001ec4 <__aeabi_dsub+0x580>
 8001dbc:	4653      	mov	r3, sl
 8001dbe:	4323      	orrs	r3, r4
 8001dc0:	d000      	beq.n	8001dc4 <__aeabi_dsub+0x480>
 8001dc2:	e621      	b.n	8001a08 <__aeabi_dsub+0xc4>
 8001dc4:	2200      	movs	r2, #0
 8001dc6:	2500      	movs	r5, #0
 8001dc8:	e753      	b.n	8001c72 <__aeabi_dsub+0x32e>
 8001dca:	181c      	adds	r4, r3, r0
 8001dcc:	429c      	cmp	r4, r3
 8001dce:	419b      	sbcs	r3, r3
 8001dd0:	444f      	add	r7, r9
 8001dd2:	46ba      	mov	sl, r7
 8001dd4:	425b      	negs	r3, r3
 8001dd6:	449a      	add	sl, r3
 8001dd8:	4653      	mov	r3, sl
 8001dda:	2601      	movs	r6, #1
 8001ddc:	021b      	lsls	r3, r3, #8
 8001dde:	d400      	bmi.n	8001de2 <__aeabi_dsub+0x49e>
 8001de0:	e73a      	b.n	8001c58 <__aeabi_dsub+0x314>
 8001de2:	2602      	movs	r6, #2
 8001de4:	4652      	mov	r2, sl
 8001de6:	4b93      	ldr	r3, [pc, #588]	; (8002034 <__aeabi_dsub+0x6f0>)
 8001de8:	2101      	movs	r1, #1
 8001dea:	401a      	ands	r2, r3
 8001dec:	0013      	movs	r3, r2
 8001dee:	4021      	ands	r1, r4
 8001df0:	0862      	lsrs	r2, r4, #1
 8001df2:	430a      	orrs	r2, r1
 8001df4:	07dc      	lsls	r4, r3, #31
 8001df6:	085b      	lsrs	r3, r3, #1
 8001df8:	469a      	mov	sl, r3
 8001dfa:	4314      	orrs	r4, r2
 8001dfc:	e62c      	b.n	8001a58 <__aeabi_dsub+0x114>
 8001dfe:	0039      	movs	r1, r7
 8001e00:	3a20      	subs	r2, #32
 8001e02:	40d1      	lsrs	r1, r2
 8001e04:	4662      	mov	r2, ip
 8001e06:	2a20      	cmp	r2, #32
 8001e08:	d006      	beq.n	8001e18 <__aeabi_dsub+0x4d4>
 8001e0a:	4664      	mov	r4, ip
 8001e0c:	2240      	movs	r2, #64	; 0x40
 8001e0e:	1b12      	subs	r2, r2, r4
 8001e10:	003c      	movs	r4, r7
 8001e12:	4094      	lsls	r4, r2
 8001e14:	4304      	orrs	r4, r0
 8001e16:	9401      	str	r4, [sp, #4]
 8001e18:	9c01      	ldr	r4, [sp, #4]
 8001e1a:	1e62      	subs	r2, r4, #1
 8001e1c:	4194      	sbcs	r4, r2
 8001e1e:	430c      	orrs	r4, r1
 8001e20:	e5e3      	b.n	80019ea <__aeabi_dsub+0xa6>
 8001e22:	4649      	mov	r1, r9
 8001e24:	4319      	orrs	r1, r3
 8001e26:	000b      	movs	r3, r1
 8001e28:	1e5c      	subs	r4, r3, #1
 8001e2a:	41a3      	sbcs	r3, r4
 8001e2c:	1ac4      	subs	r4, r0, r3
 8001e2e:	42a0      	cmp	r0, r4
 8001e30:	419b      	sbcs	r3, r3
 8001e32:	425b      	negs	r3, r3
 8001e34:	1afb      	subs	r3, r7, r3
 8001e36:	469a      	mov	sl, r3
 8001e38:	465d      	mov	r5, fp
 8001e3a:	0016      	movs	r6, r2
 8001e3c:	e5dc      	b.n	80019f8 <__aeabi_dsub+0xb4>
 8001e3e:	4649      	mov	r1, r9
 8001e40:	4319      	orrs	r1, r3
 8001e42:	d100      	bne.n	8001e46 <__aeabi_dsub+0x502>
 8001e44:	e0ae      	b.n	8001fa4 <__aeabi_dsub+0x660>
 8001e46:	4661      	mov	r1, ip
 8001e48:	4664      	mov	r4, ip
 8001e4a:	3901      	subs	r1, #1
 8001e4c:	2c01      	cmp	r4, #1
 8001e4e:	d100      	bne.n	8001e52 <__aeabi_dsub+0x50e>
 8001e50:	e0e0      	b.n	8002014 <__aeabi_dsub+0x6d0>
 8001e52:	4c77      	ldr	r4, [pc, #476]	; (8002030 <__aeabi_dsub+0x6ec>)
 8001e54:	45a4      	cmp	ip, r4
 8001e56:	d056      	beq.n	8001f06 <__aeabi_dsub+0x5c2>
 8001e58:	468c      	mov	ip, r1
 8001e5a:	e69a      	b.n	8001b92 <__aeabi_dsub+0x24e>
 8001e5c:	4661      	mov	r1, ip
 8001e5e:	2220      	movs	r2, #32
 8001e60:	003c      	movs	r4, r7
 8001e62:	1a52      	subs	r2, r2, r1
 8001e64:	4094      	lsls	r4, r2
 8001e66:	0001      	movs	r1, r0
 8001e68:	4090      	lsls	r0, r2
 8001e6a:	46a0      	mov	r8, r4
 8001e6c:	4664      	mov	r4, ip
 8001e6e:	1e42      	subs	r2, r0, #1
 8001e70:	4190      	sbcs	r0, r2
 8001e72:	4662      	mov	r2, ip
 8001e74:	40e1      	lsrs	r1, r4
 8001e76:	4644      	mov	r4, r8
 8001e78:	40d7      	lsrs	r7, r2
 8001e7a:	430c      	orrs	r4, r1
 8001e7c:	4304      	orrs	r4, r0
 8001e7e:	44b9      	add	r9, r7
 8001e80:	e701      	b.n	8001c86 <__aeabi_dsub+0x342>
 8001e82:	496b      	ldr	r1, [pc, #428]	; (8002030 <__aeabi_dsub+0x6ec>)
 8001e84:	428a      	cmp	r2, r1
 8001e86:	d100      	bne.n	8001e8a <__aeabi_dsub+0x546>
 8001e88:	e70c      	b.n	8001ca4 <__aeabi_dsub+0x360>
 8001e8a:	1818      	adds	r0, r3, r0
 8001e8c:	4298      	cmp	r0, r3
 8001e8e:	419b      	sbcs	r3, r3
 8001e90:	444f      	add	r7, r9
 8001e92:	425b      	negs	r3, r3
 8001e94:	18fb      	adds	r3, r7, r3
 8001e96:	07dc      	lsls	r4, r3, #31
 8001e98:	0840      	lsrs	r0, r0, #1
 8001e9a:	085b      	lsrs	r3, r3, #1
 8001e9c:	469a      	mov	sl, r3
 8001e9e:	0016      	movs	r6, r2
 8001ea0:	4304      	orrs	r4, r0
 8001ea2:	e6d9      	b.n	8001c58 <__aeabi_dsub+0x314>
 8001ea4:	2a00      	cmp	r2, #0
 8001ea6:	d000      	beq.n	8001eaa <__aeabi_dsub+0x566>
 8001ea8:	e081      	b.n	8001fae <__aeabi_dsub+0x66a>
 8001eaa:	003b      	movs	r3, r7
 8001eac:	4303      	orrs	r3, r0
 8001eae:	d11d      	bne.n	8001eec <__aeabi_dsub+0x5a8>
 8001eb0:	2280      	movs	r2, #128	; 0x80
 8001eb2:	2500      	movs	r5, #0
 8001eb4:	0312      	lsls	r2, r2, #12
 8001eb6:	e70b      	b.n	8001cd0 <__aeabi_dsub+0x38c>
 8001eb8:	08c0      	lsrs	r0, r0, #3
 8001eba:	077b      	lsls	r3, r7, #29
 8001ebc:	465d      	mov	r5, fp
 8001ebe:	4303      	orrs	r3, r0
 8001ec0:	08fa      	lsrs	r2, r7, #3
 8001ec2:	e6d3      	b.n	8001c6c <__aeabi_dsub+0x328>
 8001ec4:	1ac4      	subs	r4, r0, r3
 8001ec6:	42a0      	cmp	r0, r4
 8001ec8:	4180      	sbcs	r0, r0
 8001eca:	464b      	mov	r3, r9
 8001ecc:	4240      	negs	r0, r0
 8001ece:	1aff      	subs	r7, r7, r3
 8001ed0:	1a3b      	subs	r3, r7, r0
 8001ed2:	469a      	mov	sl, r3
 8001ed4:	465d      	mov	r5, fp
 8001ed6:	e597      	b.n	8001a08 <__aeabi_dsub+0xc4>
 8001ed8:	1a1c      	subs	r4, r3, r0
 8001eda:	464a      	mov	r2, r9
 8001edc:	42a3      	cmp	r3, r4
 8001ede:	419b      	sbcs	r3, r3
 8001ee0:	1bd7      	subs	r7, r2, r7
 8001ee2:	425b      	negs	r3, r3
 8001ee4:	1afb      	subs	r3, r7, r3
 8001ee6:	469a      	mov	sl, r3
 8001ee8:	2601      	movs	r6, #1
 8001eea:	e585      	b.n	80019f8 <__aeabi_dsub+0xb4>
 8001eec:	08c0      	lsrs	r0, r0, #3
 8001eee:	077b      	lsls	r3, r7, #29
 8001ef0:	465d      	mov	r5, fp
 8001ef2:	4303      	orrs	r3, r0
 8001ef4:	08fa      	lsrs	r2, r7, #3
 8001ef6:	e6e7      	b.n	8001cc8 <__aeabi_dsub+0x384>
 8001ef8:	464a      	mov	r2, r9
 8001efa:	08db      	lsrs	r3, r3, #3
 8001efc:	0752      	lsls	r2, r2, #29
 8001efe:	4313      	orrs	r3, r2
 8001f00:	464a      	mov	r2, r9
 8001f02:	08d2      	lsrs	r2, r2, #3
 8001f04:	e6b5      	b.n	8001c72 <__aeabi_dsub+0x32e>
 8001f06:	08c0      	lsrs	r0, r0, #3
 8001f08:	077b      	lsls	r3, r7, #29
 8001f0a:	4303      	orrs	r3, r0
 8001f0c:	08fa      	lsrs	r2, r7, #3
 8001f0e:	e6db      	b.n	8001cc8 <__aeabi_dsub+0x384>
 8001f10:	4649      	mov	r1, r9
 8001f12:	4319      	orrs	r1, r3
 8001f14:	000b      	movs	r3, r1
 8001f16:	1e59      	subs	r1, r3, #1
 8001f18:	418b      	sbcs	r3, r1
 8001f1a:	001c      	movs	r4, r3
 8001f1c:	e653      	b.n	8001bc6 <__aeabi_dsub+0x282>
 8001f1e:	464d      	mov	r5, r9
 8001f20:	3c20      	subs	r4, #32
 8001f22:	40e5      	lsrs	r5, r4
 8001f24:	2920      	cmp	r1, #32
 8001f26:	d005      	beq.n	8001f34 <__aeabi_dsub+0x5f0>
 8001f28:	2440      	movs	r4, #64	; 0x40
 8001f2a:	1a64      	subs	r4, r4, r1
 8001f2c:	4649      	mov	r1, r9
 8001f2e:	40a1      	lsls	r1, r4
 8001f30:	430b      	orrs	r3, r1
 8001f32:	4698      	mov	r8, r3
 8001f34:	4643      	mov	r3, r8
 8001f36:	1e5c      	subs	r4, r3, #1
 8001f38:	41a3      	sbcs	r3, r4
 8001f3a:	432b      	orrs	r3, r5
 8001f3c:	e776      	b.n	8001e2c <__aeabi_dsub+0x4e8>
 8001f3e:	2a00      	cmp	r2, #0
 8001f40:	d0e1      	beq.n	8001f06 <__aeabi_dsub+0x5c2>
 8001f42:	003a      	movs	r2, r7
 8001f44:	08db      	lsrs	r3, r3, #3
 8001f46:	4302      	orrs	r2, r0
 8001f48:	d100      	bne.n	8001f4c <__aeabi_dsub+0x608>
 8001f4a:	e6b8      	b.n	8001cbe <__aeabi_dsub+0x37a>
 8001f4c:	464a      	mov	r2, r9
 8001f4e:	0752      	lsls	r2, r2, #29
 8001f50:	2480      	movs	r4, #128	; 0x80
 8001f52:	4313      	orrs	r3, r2
 8001f54:	464a      	mov	r2, r9
 8001f56:	0324      	lsls	r4, r4, #12
 8001f58:	08d2      	lsrs	r2, r2, #3
 8001f5a:	4222      	tst	r2, r4
 8001f5c:	d007      	beq.n	8001f6e <__aeabi_dsub+0x62a>
 8001f5e:	08fe      	lsrs	r6, r7, #3
 8001f60:	4226      	tst	r6, r4
 8001f62:	d104      	bne.n	8001f6e <__aeabi_dsub+0x62a>
 8001f64:	465d      	mov	r5, fp
 8001f66:	0032      	movs	r2, r6
 8001f68:	08c3      	lsrs	r3, r0, #3
 8001f6a:	077f      	lsls	r7, r7, #29
 8001f6c:	433b      	orrs	r3, r7
 8001f6e:	0f59      	lsrs	r1, r3, #29
 8001f70:	00db      	lsls	r3, r3, #3
 8001f72:	0749      	lsls	r1, r1, #29
 8001f74:	08db      	lsrs	r3, r3, #3
 8001f76:	430b      	orrs	r3, r1
 8001f78:	e6a6      	b.n	8001cc8 <__aeabi_dsub+0x384>
 8001f7a:	1ac4      	subs	r4, r0, r3
 8001f7c:	42a0      	cmp	r0, r4
 8001f7e:	4180      	sbcs	r0, r0
 8001f80:	464b      	mov	r3, r9
 8001f82:	4240      	negs	r0, r0
 8001f84:	1aff      	subs	r7, r7, r3
 8001f86:	1a3b      	subs	r3, r7, r0
 8001f88:	469a      	mov	sl, r3
 8001f8a:	465d      	mov	r5, fp
 8001f8c:	2601      	movs	r6, #1
 8001f8e:	e533      	b.n	80019f8 <__aeabi_dsub+0xb4>
 8001f90:	003b      	movs	r3, r7
 8001f92:	4303      	orrs	r3, r0
 8001f94:	d100      	bne.n	8001f98 <__aeabi_dsub+0x654>
 8001f96:	e715      	b.n	8001dc4 <__aeabi_dsub+0x480>
 8001f98:	08c0      	lsrs	r0, r0, #3
 8001f9a:	077b      	lsls	r3, r7, #29
 8001f9c:	465d      	mov	r5, fp
 8001f9e:	4303      	orrs	r3, r0
 8001fa0:	08fa      	lsrs	r2, r7, #3
 8001fa2:	e666      	b.n	8001c72 <__aeabi_dsub+0x32e>
 8001fa4:	08c0      	lsrs	r0, r0, #3
 8001fa6:	077b      	lsls	r3, r7, #29
 8001fa8:	4303      	orrs	r3, r0
 8001faa:	08fa      	lsrs	r2, r7, #3
 8001fac:	e65e      	b.n	8001c6c <__aeabi_dsub+0x328>
 8001fae:	003a      	movs	r2, r7
 8001fb0:	08db      	lsrs	r3, r3, #3
 8001fb2:	4302      	orrs	r2, r0
 8001fb4:	d100      	bne.n	8001fb8 <__aeabi_dsub+0x674>
 8001fb6:	e682      	b.n	8001cbe <__aeabi_dsub+0x37a>
 8001fb8:	464a      	mov	r2, r9
 8001fba:	0752      	lsls	r2, r2, #29
 8001fbc:	2480      	movs	r4, #128	; 0x80
 8001fbe:	4313      	orrs	r3, r2
 8001fc0:	464a      	mov	r2, r9
 8001fc2:	0324      	lsls	r4, r4, #12
 8001fc4:	08d2      	lsrs	r2, r2, #3
 8001fc6:	4222      	tst	r2, r4
 8001fc8:	d007      	beq.n	8001fda <__aeabi_dsub+0x696>
 8001fca:	08fe      	lsrs	r6, r7, #3
 8001fcc:	4226      	tst	r6, r4
 8001fce:	d104      	bne.n	8001fda <__aeabi_dsub+0x696>
 8001fd0:	465d      	mov	r5, fp
 8001fd2:	0032      	movs	r2, r6
 8001fd4:	08c3      	lsrs	r3, r0, #3
 8001fd6:	077f      	lsls	r7, r7, #29
 8001fd8:	433b      	orrs	r3, r7
 8001fda:	0f59      	lsrs	r1, r3, #29
 8001fdc:	00db      	lsls	r3, r3, #3
 8001fde:	08db      	lsrs	r3, r3, #3
 8001fe0:	0749      	lsls	r1, r1, #29
 8001fe2:	430b      	orrs	r3, r1
 8001fe4:	e670      	b.n	8001cc8 <__aeabi_dsub+0x384>
 8001fe6:	08c0      	lsrs	r0, r0, #3
 8001fe8:	077b      	lsls	r3, r7, #29
 8001fea:	4303      	orrs	r3, r0
 8001fec:	08fa      	lsrs	r2, r7, #3
 8001fee:	e640      	b.n	8001c72 <__aeabi_dsub+0x32e>
 8001ff0:	464c      	mov	r4, r9
 8001ff2:	3920      	subs	r1, #32
 8001ff4:	40cc      	lsrs	r4, r1
 8001ff6:	4661      	mov	r1, ip
 8001ff8:	2920      	cmp	r1, #32
 8001ffa:	d006      	beq.n	800200a <__aeabi_dsub+0x6c6>
 8001ffc:	4666      	mov	r6, ip
 8001ffe:	2140      	movs	r1, #64	; 0x40
 8002000:	1b89      	subs	r1, r1, r6
 8002002:	464e      	mov	r6, r9
 8002004:	408e      	lsls	r6, r1
 8002006:	4333      	orrs	r3, r6
 8002008:	4698      	mov	r8, r3
 800200a:	4643      	mov	r3, r8
 800200c:	1e59      	subs	r1, r3, #1
 800200e:	418b      	sbcs	r3, r1
 8002010:	431c      	orrs	r4, r3
 8002012:	e5d8      	b.n	8001bc6 <__aeabi_dsub+0x282>
 8002014:	181c      	adds	r4, r3, r0
 8002016:	4284      	cmp	r4, r0
 8002018:	4180      	sbcs	r0, r0
 800201a:	444f      	add	r7, r9
 800201c:	46ba      	mov	sl, r7
 800201e:	4240      	negs	r0, r0
 8002020:	4482      	add	sl, r0
 8002022:	e6d9      	b.n	8001dd8 <__aeabi_dsub+0x494>
 8002024:	4653      	mov	r3, sl
 8002026:	4323      	orrs	r3, r4
 8002028:	d100      	bne.n	800202c <__aeabi_dsub+0x6e8>
 800202a:	e6cb      	b.n	8001dc4 <__aeabi_dsub+0x480>
 800202c:	e614      	b.n	8001c58 <__aeabi_dsub+0x314>
 800202e:	46c0      	nop			; (mov r8, r8)
 8002030:	000007ff 	.word	0x000007ff
 8002034:	ff7fffff 	.word	0xff7fffff
 8002038:	000007fe 	.word	0x000007fe
 800203c:	2300      	movs	r3, #0
 800203e:	4a01      	ldr	r2, [pc, #4]	; (8002044 <__aeabi_dsub+0x700>)
 8002040:	001c      	movs	r4, r3
 8002042:	e529      	b.n	8001a98 <__aeabi_dsub+0x154>
 8002044:	000007ff 	.word	0x000007ff

08002048 <__aeabi_d2iz>:
 8002048:	000a      	movs	r2, r1
 800204a:	b530      	push	{r4, r5, lr}
 800204c:	4c13      	ldr	r4, [pc, #76]	; (800209c <__aeabi_d2iz+0x54>)
 800204e:	0053      	lsls	r3, r2, #1
 8002050:	0309      	lsls	r1, r1, #12
 8002052:	0005      	movs	r5, r0
 8002054:	0b09      	lsrs	r1, r1, #12
 8002056:	2000      	movs	r0, #0
 8002058:	0d5b      	lsrs	r3, r3, #21
 800205a:	0fd2      	lsrs	r2, r2, #31
 800205c:	42a3      	cmp	r3, r4
 800205e:	dd04      	ble.n	800206a <__aeabi_d2iz+0x22>
 8002060:	480f      	ldr	r0, [pc, #60]	; (80020a0 <__aeabi_d2iz+0x58>)
 8002062:	4283      	cmp	r3, r0
 8002064:	dd02      	ble.n	800206c <__aeabi_d2iz+0x24>
 8002066:	4b0f      	ldr	r3, [pc, #60]	; (80020a4 <__aeabi_d2iz+0x5c>)
 8002068:	18d0      	adds	r0, r2, r3
 800206a:	bd30      	pop	{r4, r5, pc}
 800206c:	2080      	movs	r0, #128	; 0x80
 800206e:	0340      	lsls	r0, r0, #13
 8002070:	4301      	orrs	r1, r0
 8002072:	480d      	ldr	r0, [pc, #52]	; (80020a8 <__aeabi_d2iz+0x60>)
 8002074:	1ac0      	subs	r0, r0, r3
 8002076:	281f      	cmp	r0, #31
 8002078:	dd08      	ble.n	800208c <__aeabi_d2iz+0x44>
 800207a:	480c      	ldr	r0, [pc, #48]	; (80020ac <__aeabi_d2iz+0x64>)
 800207c:	1ac3      	subs	r3, r0, r3
 800207e:	40d9      	lsrs	r1, r3
 8002080:	000b      	movs	r3, r1
 8002082:	4258      	negs	r0, r3
 8002084:	2a00      	cmp	r2, #0
 8002086:	d1f0      	bne.n	800206a <__aeabi_d2iz+0x22>
 8002088:	0018      	movs	r0, r3
 800208a:	e7ee      	b.n	800206a <__aeabi_d2iz+0x22>
 800208c:	4c08      	ldr	r4, [pc, #32]	; (80020b0 <__aeabi_d2iz+0x68>)
 800208e:	40c5      	lsrs	r5, r0
 8002090:	46a4      	mov	ip, r4
 8002092:	4463      	add	r3, ip
 8002094:	4099      	lsls	r1, r3
 8002096:	000b      	movs	r3, r1
 8002098:	432b      	orrs	r3, r5
 800209a:	e7f2      	b.n	8002082 <__aeabi_d2iz+0x3a>
 800209c:	000003fe 	.word	0x000003fe
 80020a0:	0000041d 	.word	0x0000041d
 80020a4:	7fffffff 	.word	0x7fffffff
 80020a8:	00000433 	.word	0x00000433
 80020ac:	00000413 	.word	0x00000413
 80020b0:	fffffbed 	.word	0xfffffbed

080020b4 <__aeabi_i2d>:
 80020b4:	b570      	push	{r4, r5, r6, lr}
 80020b6:	2800      	cmp	r0, #0
 80020b8:	d016      	beq.n	80020e8 <__aeabi_i2d+0x34>
 80020ba:	17c3      	asrs	r3, r0, #31
 80020bc:	18c5      	adds	r5, r0, r3
 80020be:	405d      	eors	r5, r3
 80020c0:	0fc4      	lsrs	r4, r0, #31
 80020c2:	0028      	movs	r0, r5
 80020c4:	f000 f84c 	bl	8002160 <__clzsi2>
 80020c8:	4b11      	ldr	r3, [pc, #68]	; (8002110 <__aeabi_i2d+0x5c>)
 80020ca:	1a1b      	subs	r3, r3, r0
 80020cc:	280a      	cmp	r0, #10
 80020ce:	dc16      	bgt.n	80020fe <__aeabi_i2d+0x4a>
 80020d0:	0002      	movs	r2, r0
 80020d2:	002e      	movs	r6, r5
 80020d4:	3215      	adds	r2, #21
 80020d6:	4096      	lsls	r6, r2
 80020d8:	220b      	movs	r2, #11
 80020da:	1a12      	subs	r2, r2, r0
 80020dc:	40d5      	lsrs	r5, r2
 80020de:	055b      	lsls	r3, r3, #21
 80020e0:	032d      	lsls	r5, r5, #12
 80020e2:	0b2d      	lsrs	r5, r5, #12
 80020e4:	0d5b      	lsrs	r3, r3, #21
 80020e6:	e003      	b.n	80020f0 <__aeabi_i2d+0x3c>
 80020e8:	2400      	movs	r4, #0
 80020ea:	2300      	movs	r3, #0
 80020ec:	2500      	movs	r5, #0
 80020ee:	2600      	movs	r6, #0
 80020f0:	051b      	lsls	r3, r3, #20
 80020f2:	432b      	orrs	r3, r5
 80020f4:	07e4      	lsls	r4, r4, #31
 80020f6:	4323      	orrs	r3, r4
 80020f8:	0030      	movs	r0, r6
 80020fa:	0019      	movs	r1, r3
 80020fc:	bd70      	pop	{r4, r5, r6, pc}
 80020fe:	380b      	subs	r0, #11
 8002100:	4085      	lsls	r5, r0
 8002102:	055b      	lsls	r3, r3, #21
 8002104:	032d      	lsls	r5, r5, #12
 8002106:	2600      	movs	r6, #0
 8002108:	0b2d      	lsrs	r5, r5, #12
 800210a:	0d5b      	lsrs	r3, r3, #21
 800210c:	e7f0      	b.n	80020f0 <__aeabi_i2d+0x3c>
 800210e:	46c0      	nop			; (mov r8, r8)
 8002110:	0000041e 	.word	0x0000041e

08002114 <__aeabi_ui2d>:
 8002114:	b510      	push	{r4, lr}
 8002116:	1e04      	subs	r4, r0, #0
 8002118:	d010      	beq.n	800213c <__aeabi_ui2d+0x28>
 800211a:	f000 f821 	bl	8002160 <__clzsi2>
 800211e:	4b0f      	ldr	r3, [pc, #60]	; (800215c <__aeabi_ui2d+0x48>)
 8002120:	1a1b      	subs	r3, r3, r0
 8002122:	280a      	cmp	r0, #10
 8002124:	dc11      	bgt.n	800214a <__aeabi_ui2d+0x36>
 8002126:	220b      	movs	r2, #11
 8002128:	0021      	movs	r1, r4
 800212a:	1a12      	subs	r2, r2, r0
 800212c:	40d1      	lsrs	r1, r2
 800212e:	3015      	adds	r0, #21
 8002130:	030a      	lsls	r2, r1, #12
 8002132:	055b      	lsls	r3, r3, #21
 8002134:	4084      	lsls	r4, r0
 8002136:	0b12      	lsrs	r2, r2, #12
 8002138:	0d5b      	lsrs	r3, r3, #21
 800213a:	e001      	b.n	8002140 <__aeabi_ui2d+0x2c>
 800213c:	2300      	movs	r3, #0
 800213e:	2200      	movs	r2, #0
 8002140:	051b      	lsls	r3, r3, #20
 8002142:	4313      	orrs	r3, r2
 8002144:	0020      	movs	r0, r4
 8002146:	0019      	movs	r1, r3
 8002148:	bd10      	pop	{r4, pc}
 800214a:	0022      	movs	r2, r4
 800214c:	380b      	subs	r0, #11
 800214e:	4082      	lsls	r2, r0
 8002150:	055b      	lsls	r3, r3, #21
 8002152:	0312      	lsls	r2, r2, #12
 8002154:	2400      	movs	r4, #0
 8002156:	0b12      	lsrs	r2, r2, #12
 8002158:	0d5b      	lsrs	r3, r3, #21
 800215a:	e7f1      	b.n	8002140 <__aeabi_ui2d+0x2c>
 800215c:	0000041e 	.word	0x0000041e

08002160 <__clzsi2>:
 8002160:	211c      	movs	r1, #28
 8002162:	2301      	movs	r3, #1
 8002164:	041b      	lsls	r3, r3, #16
 8002166:	4298      	cmp	r0, r3
 8002168:	d301      	bcc.n	800216e <__clzsi2+0xe>
 800216a:	0c00      	lsrs	r0, r0, #16
 800216c:	3910      	subs	r1, #16
 800216e:	0a1b      	lsrs	r3, r3, #8
 8002170:	4298      	cmp	r0, r3
 8002172:	d301      	bcc.n	8002178 <__clzsi2+0x18>
 8002174:	0a00      	lsrs	r0, r0, #8
 8002176:	3908      	subs	r1, #8
 8002178:	091b      	lsrs	r3, r3, #4
 800217a:	4298      	cmp	r0, r3
 800217c:	d301      	bcc.n	8002182 <__clzsi2+0x22>
 800217e:	0900      	lsrs	r0, r0, #4
 8002180:	3904      	subs	r1, #4
 8002182:	a202      	add	r2, pc, #8	; (adr r2, 800218c <__clzsi2+0x2c>)
 8002184:	5c10      	ldrb	r0, [r2, r0]
 8002186:	1840      	adds	r0, r0, r1
 8002188:	4770      	bx	lr
 800218a:	46c0      	nop			; (mov r8, r8)
 800218c:	02020304 	.word	0x02020304
 8002190:	01010101 	.word	0x01010101
	...

0800219c <__clzdi2>:
 800219c:	b510      	push	{r4, lr}
 800219e:	2900      	cmp	r1, #0
 80021a0:	d103      	bne.n	80021aa <__clzdi2+0xe>
 80021a2:	f7ff ffdd 	bl	8002160 <__clzsi2>
 80021a6:	3020      	adds	r0, #32
 80021a8:	e002      	b.n	80021b0 <__clzdi2+0x14>
 80021aa:	0008      	movs	r0, r1
 80021ac:	f7ff ffd8 	bl	8002160 <__clzsi2>
 80021b0:	bd10      	pop	{r4, pc}
 80021b2:	46c0      	nop			; (mov r8, r8)

080021b4 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 80021b4:	b580      	push	{r7, lr}
 80021b6:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 80021b8:	f000 fa08 	bl	80025cc <HAL_Init>

  /* USER CODE BEGIN Init */
  UART2_init();
 80021bc:	f000 f8fc 	bl	80023b8 <UART2_init>
  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 80021c0:	f000 f80c 	bl	80021dc <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 80021c4:	f000 f85e 	bl	8002284 <MX_GPIO_Init>
  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {
    /* USER CODE END WHILE */
	  data='1';
 80021c8:	4b03      	ldr	r3, [pc, #12]	; (80021d8 <main+0x24>)
 80021ca:	2231      	movs	r2, #49	; 0x31
 80021cc:	701a      	strb	r2, [r3, #0]
	  uart_write(&data);
 80021ce:	4b02      	ldr	r3, [pc, #8]	; (80021d8 <main+0x24>)
 80021d0:	0018      	movs	r0, r3
 80021d2:	f000 f941 	bl	8002458 <uart_write>
	  data='1';
 80021d6:	e7f7      	b.n	80021c8 <main+0x14>
 80021d8:	20000028 	.word	0x20000028

080021dc <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80021dc:	b590      	push	{r4, r7, lr}
 80021de:	b095      	sub	sp, #84	; 0x54
 80021e0:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80021e2:	2418      	movs	r4, #24
 80021e4:	193b      	adds	r3, r7, r4
 80021e6:	0018      	movs	r0, r3
 80021e8:	2338      	movs	r3, #56	; 0x38
 80021ea:	001a      	movs	r2, r3
 80021ec:	2100      	movs	r1, #0
 80021ee:	f001 fa6f 	bl	80036d0 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80021f2:	1d3b      	adds	r3, r7, #4
 80021f4:	0018      	movs	r0, r3
 80021f6:	2314      	movs	r3, #20
 80021f8:	001a      	movs	r2, r3
 80021fa:	2100      	movs	r1, #0
 80021fc:	f001 fa68 	bl	80036d0 <memset>

  /** Configure the main internal regulator output voltage
  */
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8002200:	4b1e      	ldr	r3, [pc, #120]	; (800227c <SystemClock_Config+0xa0>)
 8002202:	681b      	ldr	r3, [r3, #0]
 8002204:	4a1e      	ldr	r2, [pc, #120]	; (8002280 <SystemClock_Config+0xa4>)
 8002206:	401a      	ands	r2, r3
 8002208:	4b1c      	ldr	r3, [pc, #112]	; (800227c <SystemClock_Config+0xa0>)
 800220a:	2180      	movs	r1, #128	; 0x80
 800220c:	0109      	lsls	r1, r1, #4
 800220e:	430a      	orrs	r2, r1
 8002210:	601a      	str	r2, [r3, #0]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_MSI;
 8002212:	0021      	movs	r1, r4
 8002214:	187b      	adds	r3, r7, r1
 8002216:	2210      	movs	r2, #16
 8002218:	601a      	str	r2, [r3, #0]
  RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 800221a:	187b      	adds	r3, r7, r1
 800221c:	2201      	movs	r2, #1
 800221e:	61da      	str	r2, [r3, #28]
  RCC_OscInitStruct.MSICalibrationValue = 0;
 8002220:	187b      	adds	r3, r7, r1
 8002222:	2200      	movs	r2, #0
 8002224:	621a      	str	r2, [r3, #32]
  RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_5;
 8002226:	187b      	adds	r3, r7, r1
 8002228:	22a0      	movs	r2, #160	; 0xa0
 800222a:	0212      	lsls	r2, r2, #8
 800222c:	625a      	str	r2, [r3, #36]	; 0x24
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 800222e:	187b      	adds	r3, r7, r1
 8002230:	2200      	movs	r2, #0
 8002232:	629a      	str	r2, [r3, #40]	; 0x28
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8002234:	187b      	adds	r3, r7, r1
 8002236:	0018      	movs	r0, r3
 8002238:	f000 fc88 	bl	8002b4c <HAL_RCC_OscConfig>
 800223c:	1e03      	subs	r3, r0, #0
 800223e:	d001      	beq.n	8002244 <SystemClock_Config+0x68>
  {
    Error_Handler();
 8002240:	f000 f884 	bl	800234c <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8002244:	1d3b      	adds	r3, r7, #4
 8002246:	220f      	movs	r2, #15
 8002248:	601a      	str	r2, [r3, #0]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_MSI;
 800224a:	1d3b      	adds	r3, r7, #4
 800224c:	2200      	movs	r2, #0
 800224e:	605a      	str	r2, [r3, #4]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8002250:	1d3b      	adds	r3, r7, #4
 8002252:	2200      	movs	r2, #0
 8002254:	609a      	str	r2, [r3, #8]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8002256:	1d3b      	adds	r3, r7, #4
 8002258:	2200      	movs	r2, #0
 800225a:	60da      	str	r2, [r3, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 800225c:	1d3b      	adds	r3, r7, #4
 800225e:	2200      	movs	r2, #0
 8002260:	611a      	str	r2, [r3, #16]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 8002262:	1d3b      	adds	r3, r7, #4
 8002264:	2100      	movs	r1, #0
 8002266:	0018      	movs	r0, r3
 8002268:	f001 f844 	bl	80032f4 <HAL_RCC_ClockConfig>
 800226c:	1e03      	subs	r3, r0, #0
 800226e:	d001      	beq.n	8002274 <SystemClock_Config+0x98>
  {
    Error_Handler();
 8002270:	f000 f86c 	bl	800234c <Error_Handler>
  }
}
 8002274:	46c0      	nop			; (mov r8, r8)
 8002276:	46bd      	mov	sp, r7
 8002278:	b015      	add	sp, #84	; 0x54
 800227a:	bd90      	pop	{r4, r7, pc}
 800227c:	40007000 	.word	0x40007000
 8002280:	ffffe7ff 	.word	0xffffe7ff

08002284 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8002284:	b590      	push	{r4, r7, lr}
 8002286:	b089      	sub	sp, #36	; 0x24
 8002288:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800228a:	240c      	movs	r4, #12
 800228c:	193b      	adds	r3, r7, r4
 800228e:	0018      	movs	r0, r3
 8002290:	2314      	movs	r3, #20
 8002292:	001a      	movs	r2, r3
 8002294:	2100      	movs	r1, #0
 8002296:	f001 fa1b 	bl	80036d0 <memset>
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800229a:	4b2a      	ldr	r3, [pc, #168]	; (8002344 <MX_GPIO_Init+0xc0>)
 800229c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800229e:	4b29      	ldr	r3, [pc, #164]	; (8002344 <MX_GPIO_Init+0xc0>)
 80022a0:	2104      	movs	r1, #4
 80022a2:	430a      	orrs	r2, r1
 80022a4:	62da      	str	r2, [r3, #44]	; 0x2c
 80022a6:	4b27      	ldr	r3, [pc, #156]	; (8002344 <MX_GPIO_Init+0xc0>)
 80022a8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80022aa:	2204      	movs	r2, #4
 80022ac:	4013      	ands	r3, r2
 80022ae:	60bb      	str	r3, [r7, #8]
 80022b0:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 80022b2:	4b24      	ldr	r3, [pc, #144]	; (8002344 <MX_GPIO_Init+0xc0>)
 80022b4:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80022b6:	4b23      	ldr	r3, [pc, #140]	; (8002344 <MX_GPIO_Init+0xc0>)
 80022b8:	2180      	movs	r1, #128	; 0x80
 80022ba:	430a      	orrs	r2, r1
 80022bc:	62da      	str	r2, [r3, #44]	; 0x2c
 80022be:	4b21      	ldr	r3, [pc, #132]	; (8002344 <MX_GPIO_Init+0xc0>)
 80022c0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80022c2:	2280      	movs	r2, #128	; 0x80
 80022c4:	4013      	ands	r3, r2
 80022c6:	607b      	str	r3, [r7, #4]
 80022c8:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80022ca:	4b1e      	ldr	r3, [pc, #120]	; (8002344 <MX_GPIO_Init+0xc0>)
 80022cc:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80022ce:	4b1d      	ldr	r3, [pc, #116]	; (8002344 <MX_GPIO_Init+0xc0>)
 80022d0:	2101      	movs	r1, #1
 80022d2:	430a      	orrs	r2, r1
 80022d4:	62da      	str	r2, [r3, #44]	; 0x2c
 80022d6:	4b1b      	ldr	r3, [pc, #108]	; (8002344 <MX_GPIO_Init+0xc0>)
 80022d8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80022da:	2201      	movs	r2, #1
 80022dc:	4013      	ands	r3, r2
 80022de:	603b      	str	r3, [r7, #0]
 80022e0:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);
 80022e2:	23a0      	movs	r3, #160	; 0xa0
 80022e4:	05db      	lsls	r3, r3, #23
 80022e6:	2200      	movs	r2, #0
 80022e8:	2120      	movs	r1, #32
 80022ea:	0018      	movs	r0, r3
 80022ec:	f000 fc10 	bl	8002b10 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : B1_Pin */
  GPIO_InitStruct.Pin = B1_Pin;
 80022f0:	193b      	adds	r3, r7, r4
 80022f2:	2280      	movs	r2, #128	; 0x80
 80022f4:	0192      	lsls	r2, r2, #6
 80022f6:	601a      	str	r2, [r3, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 80022f8:	193b      	adds	r3, r7, r4
 80022fa:	2284      	movs	r2, #132	; 0x84
 80022fc:	0392      	lsls	r2, r2, #14
 80022fe:	605a      	str	r2, [r3, #4]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002300:	193b      	adds	r3, r7, r4
 8002302:	2200      	movs	r2, #0
 8002304:	609a      	str	r2, [r3, #8]
  HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 8002306:	193b      	adds	r3, r7, r4
 8002308:	4a0f      	ldr	r2, [pc, #60]	; (8002348 <MX_GPIO_Init+0xc4>)
 800230a:	0019      	movs	r1, r3
 800230c:	0010      	movs	r0, r2
 800230e:	f000 fa81 	bl	8002814 <HAL_GPIO_Init>

  /*Configure GPIO pin : LD2_Pin */
  GPIO_InitStruct.Pin = LD2_Pin;
 8002312:	0021      	movs	r1, r4
 8002314:	187b      	adds	r3, r7, r1
 8002316:	2220      	movs	r2, #32
 8002318:	601a      	str	r2, [r3, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800231a:	187b      	adds	r3, r7, r1
 800231c:	2201      	movs	r2, #1
 800231e:	605a      	str	r2, [r3, #4]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002320:	187b      	adds	r3, r7, r1
 8002322:	2200      	movs	r2, #0
 8002324:	609a      	str	r2, [r3, #8]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002326:	187b      	adds	r3, r7, r1
 8002328:	2200      	movs	r2, #0
 800232a:	60da      	str	r2, [r3, #12]
  HAL_GPIO_Init(LD2_GPIO_Port, &GPIO_InitStruct);
 800232c:	187a      	adds	r2, r7, r1
 800232e:	23a0      	movs	r3, #160	; 0xa0
 8002330:	05db      	lsls	r3, r3, #23
 8002332:	0011      	movs	r1, r2
 8002334:	0018      	movs	r0, r3
 8002336:	f000 fa6d 	bl	8002814 <HAL_GPIO_Init>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 800233a:	46c0      	nop			; (mov r8, r8)
 800233c:	46bd      	mov	sp, r7
 800233e:	b009      	add	sp, #36	; 0x24
 8002340:	bd90      	pop	{r4, r7, pc}
 8002342:	46c0      	nop			; (mov r8, r8)
 8002344:	40021000 	.word	0x40021000
 8002348:	50000800 	.word	0x50000800

0800234c <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 800234c:	b580      	push	{r7, lr}
 800234e:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8002350:	b672      	cpsid	i
}
 8002352:	46c0      	nop			; (mov r8, r8)
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8002354:	e7fe      	b.n	8002354 <Error_Handler+0x8>
	...

08002358 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8002358:	b580      	push	{r7, lr}
 800235a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800235c:	4b07      	ldr	r3, [pc, #28]	; (800237c <HAL_MspInit+0x24>)
 800235e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8002360:	4b06      	ldr	r3, [pc, #24]	; (800237c <HAL_MspInit+0x24>)
 8002362:	2101      	movs	r1, #1
 8002364:	430a      	orrs	r2, r1
 8002366:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_RCC_PWR_CLK_ENABLE();
 8002368:	4b04      	ldr	r3, [pc, #16]	; (800237c <HAL_MspInit+0x24>)
 800236a:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800236c:	4b03      	ldr	r3, [pc, #12]	; (800237c <HAL_MspInit+0x24>)
 800236e:	2180      	movs	r1, #128	; 0x80
 8002370:	0549      	lsls	r1, r1, #21
 8002372:	430a      	orrs	r2, r1
 8002374:	639a      	str	r2, [r3, #56]	; 0x38
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8002376:	46c0      	nop			; (mov r8, r8)
 8002378:	46bd      	mov	sp, r7
 800237a:	bd80      	pop	{r7, pc}
 800237c:	40021000 	.word	0x40021000

08002380 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable Interrupt.
  */
void NMI_Handler(void)
{
 8002380:	b580      	push	{r7, lr}
 8002382:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8002384:	e7fe      	b.n	8002384 <NMI_Handler+0x4>

08002386 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8002386:	b580      	push	{r7, lr}
 8002388:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800238a:	e7fe      	b.n	800238a <HardFault_Handler+0x4>

0800238c <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 800238c:	b580      	push	{r7, lr}
 800238e:	af00      	add	r7, sp, #0

  /* USER CODE END SVC_IRQn 0 */
  /* USER CODE BEGIN SVC_IRQn 1 */

  /* USER CODE END SVC_IRQn 1 */
}
 8002390:	46c0      	nop			; (mov r8, r8)
 8002392:	46bd      	mov	sp, r7
 8002394:	bd80      	pop	{r7, pc}

08002396 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8002396:	b580      	push	{r7, lr}
 8002398:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 800239a:	46c0      	nop			; (mov r8, r8)
 800239c:	46bd      	mov	sp, r7
 800239e:	bd80      	pop	{r7, pc}

080023a0 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 80023a0:	b580      	push	{r7, lr}
 80023a2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 80023a4:	f000 f966 	bl	8002674 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 80023a8:	46c0      	nop			; (mov r8, r8)
 80023aa:	46bd      	mov	sp, r7
 80023ac:	bd80      	pop	{r7, pc}

080023ae <SystemInit>:
  * @brief  Setup the microcontroller system.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 80023ae:	b580      	push	{r7, lr}
 80023b0:	af00      	add	r7, sp, #0
  /* Configure the Vector Table location add offset address ------------------*/
#if defined (USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 80023b2:	46c0      	nop			; (mov r8, r8)
 80023b4:	46bd      	mov	sp, r7
 80023b6:	bd80      	pop	{r7, pc}

080023b8 <UART2_init>:

#include"uart4.h"

static void uart_set_baudrate(USART_TypeDef *USARTx,uint32_t periph_clk, uint32_t baudrate);

void UART2_init(void){
 80023b8:	b580      	push	{r7, lr}
 80023ba:	af00      	add	r7, sp, #0

	RCC->IOPENR  |= RCC_IOPENR_GPIOAEN;
 80023bc:	4b23      	ldr	r3, [pc, #140]	; (800244c <UART2_init+0x94>)
 80023be:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80023c0:	4b22      	ldr	r3, [pc, #136]	; (800244c <UART2_init+0x94>)
 80023c2:	2101      	movs	r1, #1
 80023c4:	430a      	orrs	r2, r1
 80023c6:	62da      	str	r2, [r3, #44]	; 0x2c

	GPIOA->MODER = ((GPIOA->MODER & ~(GPIO_MODER_MODE2)) | (GPIO_MODER_MODE2_1));
 80023c8:	23a0      	movs	r3, #160	; 0xa0
 80023ca:	05db      	lsls	r3, r3, #23
 80023cc:	681b      	ldr	r3, [r3, #0]
 80023ce:	2230      	movs	r2, #48	; 0x30
 80023d0:	4393      	bics	r3, r2
 80023d2:	001a      	movs	r2, r3
 80023d4:	23a0      	movs	r3, #160	; 0xa0
 80023d6:	05db      	lsls	r3, r3, #23
 80023d8:	2120      	movs	r1, #32
 80023da:	430a      	orrs	r2, r1
 80023dc:	601a      	str	r2, [r3, #0]
	GPIOA->MODER = ((GPIOA->MODER & ~(GPIO_MODER_MODE3)) | (GPIO_MODER_MODE3_1));
 80023de:	23a0      	movs	r3, #160	; 0xa0
 80023e0:	05db      	lsls	r3, r3, #23
 80023e2:	681b      	ldr	r3, [r3, #0]
 80023e4:	22c0      	movs	r2, #192	; 0xc0
 80023e6:	4393      	bics	r3, r2
 80023e8:	001a      	movs	r2, r3
 80023ea:	23a0      	movs	r3, #160	; 0xa0
 80023ec:	05db      	lsls	r3, r3, #23
 80023ee:	2180      	movs	r1, #128	; 0x80
 80023f0:	430a      	orrs	r2, r1
 80023f2:	601a      	str	r2, [r3, #0]
	GPIOA->AFR[0]|=1U<<18;
 80023f4:	23a0      	movs	r3, #160	; 0xa0
 80023f6:	05db      	lsls	r3, r3, #23
 80023f8:	6a1a      	ldr	r2, [r3, #32]
 80023fa:	23a0      	movs	r3, #160	; 0xa0
 80023fc:	05db      	lsls	r3, r3, #23
 80023fe:	2180      	movs	r1, #128	; 0x80
 8002400:	02c9      	lsls	r1, r1, #11
 8002402:	430a      	orrs	r2, r1
 8002404:	621a      	str	r2, [r3, #32]

	RCC->APB1ENR |= RCC_APB1ENR_USART2EN;
 8002406:	4b11      	ldr	r3, [pc, #68]	; (800244c <UART2_init+0x94>)
 8002408:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800240a:	4b10      	ldr	r3, [pc, #64]	; (800244c <UART2_init+0x94>)
 800240c:	2180      	movs	r1, #128	; 0x80
 800240e:	0289      	lsls	r1, r1, #10
 8002410:	430a      	orrs	r2, r1
 8002412:	639a      	str	r2, [r3, #56]	; 0x38

	uart_set_baudrate(USART2,SYS_Freq, UART_Baudrate);
 8002414:	23e1      	movs	r3, #225	; 0xe1
 8002416:	025b      	lsls	r3, r3, #9
 8002418:	490d      	ldr	r1, [pc, #52]	; (8002450 <UART2_init+0x98>)
 800241a:	480e      	ldr	r0, [pc, #56]	; (8002454 <UART2_init+0x9c>)
 800241c:	001a      	movs	r2, r3
 800241e:	f000 f82f 	bl	8002480 <uart_set_baudrate>

	USART2->CR1 |= USART_CR1_TE | USART_CR1_RE;
 8002422:	4b0c      	ldr	r3, [pc, #48]	; (8002454 <UART2_init+0x9c>)
 8002424:	681a      	ldr	r2, [r3, #0]
 8002426:	4b0b      	ldr	r3, [pc, #44]	; (8002454 <UART2_init+0x9c>)
 8002428:	210c      	movs	r1, #12
 800242a:	430a      	orrs	r2, r1
 800242c:	601a      	str	r2, [r3, #0]
	USART2->CR1 |= USART_CR1_RXNEIE;
 800242e:	4b09      	ldr	r3, [pc, #36]	; (8002454 <UART2_init+0x9c>)
 8002430:	681a      	ldr	r2, [r3, #0]
 8002432:	4b08      	ldr	r3, [pc, #32]	; (8002454 <UART2_init+0x9c>)
 8002434:	2120      	movs	r1, #32
 8002436:	430a      	orrs	r2, r1
 8002438:	601a      	str	r2, [r3, #0]

//	NVIC_SetPriority(USART2_IRQn, 3);
//	NVIC_EnableIRQ(USART2_IRQn);

	USART2->CR1 |=USART_CR1_UE;
 800243a:	4b06      	ldr	r3, [pc, #24]	; (8002454 <UART2_init+0x9c>)
 800243c:	681a      	ldr	r2, [r3, #0]
 800243e:	4b05      	ldr	r3, [pc, #20]	; (8002454 <UART2_init+0x9c>)
 8002440:	2101      	movs	r1, #1
 8002442:	430a      	orrs	r2, r1
 8002444:	601a      	str	r2, [r3, #0]
}
 8002446:	46c0      	nop			; (mov r8, r8)
 8002448:	46bd      	mov	sp, r7
 800244a:	bd80      	pop	{r7, pc}
 800244c:	40021000 	.word	0x40021000
 8002450:	001fff68 	.word	0x001fff68
 8002454:	40004400 	.word	0x40004400

08002458 <uart_write>:

void uart_write(uint8_t *data){
 8002458:	b580      	push	{r7, lr}
 800245a:	b082      	sub	sp, #8
 800245c:	af00      	add	r7, sp, #0
 800245e:	6078      	str	r0, [r7, #4]
	while(!(USART2->ISR & USART_ISR_TXE)){}
 8002460:	46c0      	nop			; (mov r8, r8)
 8002462:	4b06      	ldr	r3, [pc, #24]	; (800247c <uart_write+0x24>)
 8002464:	69db      	ldr	r3, [r3, #28]
 8002466:	2280      	movs	r2, #128	; 0x80
 8002468:	4013      	ands	r3, r2
 800246a:	d0fa      	beq.n	8002462 <uart_write+0xa>
	USART2->TDR=*data;
 800246c:	687b      	ldr	r3, [r7, #4]
 800246e:	781a      	ldrb	r2, [r3, #0]
 8002470:	4b02      	ldr	r3, [pc, #8]	; (800247c <uart_write+0x24>)
 8002472:	629a      	str	r2, [r3, #40]	; 0x28
}
 8002474:	46c0      	nop			; (mov r8, r8)
 8002476:	46bd      	mov	sp, r7
 8002478:	b002      	add	sp, #8
 800247a:	bd80      	pop	{r7, pc}
 800247c:	40004400 	.word	0x40004400

08002480 <uart_set_baudrate>:
uint8_t uart_read(USART_TypeDef *USARTx){
	while(!(USARTx->ISR & USART_ISR_RXNE)){}
	return USARTx->RDR;
}

static void uart_set_baudrate(USART_TypeDef *USARTx,uint32_t periph_clk, uint32_t baudrate){
 8002480:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002482:	b08b      	sub	sp, #44	; 0x2c
 8002484:	af00      	add	r7, sp, #0
 8002486:	60f8      	str	r0, [r7, #12]
 8002488:	60b9      	str	r1, [r7, #8]
 800248a:	607a      	str	r2, [r7, #4]
double fraction;

uint16_t USARTDIV_MANT;
uint16_t USARTDIV_FRAC;

mantissa = (double)periph_clk / (double)(baudrate*16);
 800248c:	68b8      	ldr	r0, [r7, #8]
 800248e:	f7ff fe41 	bl	8002114 <__aeabi_ui2d>
 8002492:	0004      	movs	r4, r0
 8002494:	000d      	movs	r5, r1
 8002496:	687b      	ldr	r3, [r7, #4]
 8002498:	011b      	lsls	r3, r3, #4
 800249a:	0018      	movs	r0, r3
 800249c:	f7ff fe3a 	bl	8002114 <__aeabi_ui2d>
 80024a0:	0002      	movs	r2, r0
 80024a2:	000b      	movs	r3, r1
 80024a4:	0020      	movs	r0, r4
 80024a6:	0029      	movs	r1, r5
 80024a8:	f7fe fb90 	bl	8000bcc <__aeabi_ddiv>
 80024ac:	0002      	movs	r2, r0
 80024ae:	000b      	movs	r3, r1
 80024b0:	61ba      	str	r2, [r7, #24]
 80024b2:	61fb      	str	r3, [r7, #28]
fraction = ((mantissa - ((long)mantissa)))*16;
 80024b4:	69b8      	ldr	r0, [r7, #24]
 80024b6:	69f9      	ldr	r1, [r7, #28]
 80024b8:	f7ff fdc6 	bl	8002048 <__aeabi_d2iz>
 80024bc:	0003      	movs	r3, r0
 80024be:	0018      	movs	r0, r3
 80024c0:	f7ff fdf8 	bl	80020b4 <__aeabi_i2d>
 80024c4:	0002      	movs	r2, r0
 80024c6:	000b      	movs	r3, r1
 80024c8:	69b8      	ldr	r0, [r7, #24]
 80024ca:	69f9      	ldr	r1, [r7, #28]
 80024cc:	f7ff fa3a 	bl	8001944 <__aeabi_dsub>
 80024d0:	0002      	movs	r2, r0
 80024d2:	000b      	movs	r3, r1
 80024d4:	0010      	movs	r0, r2
 80024d6:	0019      	movs	r1, r3
 80024d8:	2200      	movs	r2, #0
 80024da:	4b24      	ldr	r3, [pc, #144]	; (800256c <uart_set_baudrate+0xec>)
 80024dc:	f7fe ff70 	bl	80013c0 <__aeabi_dmul>
 80024e0:	0002      	movs	r2, r0
 80024e2:	000b      	movs	r3, r1
 80024e4:	623a      	str	r2, [r7, #32]
 80024e6:	627b      	str	r3, [r7, #36]	; 0x24
if (fraction - ((long)fraction) >= .5)
 80024e8:	6a38      	ldr	r0, [r7, #32]
 80024ea:	6a79      	ldr	r1, [r7, #36]	; 0x24
 80024ec:	f7ff fdac 	bl	8002048 <__aeabi_d2iz>
 80024f0:	0003      	movs	r3, r0
 80024f2:	0018      	movs	r0, r3
 80024f4:	f7ff fdde 	bl	80020b4 <__aeabi_i2d>
 80024f8:	0002      	movs	r2, r0
 80024fa:	000b      	movs	r3, r1
 80024fc:	6a38      	ldr	r0, [r7, #32]
 80024fe:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8002500:	f7ff fa20 	bl	8001944 <__aeabi_dsub>
 8002504:	0002      	movs	r2, r0
 8002506:	000b      	movs	r3, r1
 8002508:	0010      	movs	r0, r2
 800250a:	0019      	movs	r1, r3
 800250c:	2200      	movs	r2, #0
 800250e:	4b18      	ldr	r3, [pc, #96]	; (8002570 <uart_set_baudrate+0xf0>)
 8002510:	f7fd feba 	bl	8000288 <__aeabi_dcmpge>
 8002514:	1e03      	subs	r3, r0, #0
 8002516:	d009      	beq.n	800252c <uart_set_baudrate+0xac>
fraction++;
 8002518:	2200      	movs	r2, #0
 800251a:	4b16      	ldr	r3, [pc, #88]	; (8002574 <uart_set_baudrate+0xf4>)
 800251c:	6a38      	ldr	r0, [r7, #32]
 800251e:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8002520:	f7fd fff4 	bl	800050c <__aeabi_dadd>
 8002524:	0002      	movs	r2, r0
 8002526:	000b      	movs	r3, r1
 8002528:	623a      	str	r2, [r7, #32]
 800252a:	627b      	str	r3, [r7, #36]	; 0x24
USARTDIV_MANT = mantissa;
 800252c:	2516      	movs	r5, #22
 800252e:	197c      	adds	r4, r7, r5
 8002530:	69b8      	ldr	r0, [r7, #24]
 8002532:	69f9      	ldr	r1, [r7, #28]
 8002534:	f7fd ff00 	bl	8000338 <__aeabi_d2uiz>
 8002538:	0003      	movs	r3, r0
 800253a:	8023      	strh	r3, [r4, #0]
USARTDIV_FRAC = fraction;
 800253c:	2614      	movs	r6, #20
 800253e:	19bc      	adds	r4, r7, r6
 8002540:	6a38      	ldr	r0, [r7, #32]
 8002542:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8002544:	f7fd fef8 	bl	8000338 <__aeabi_d2uiz>
 8002548:	0003      	movs	r3, r0
 800254a:	8023      	strh	r3, [r4, #0]
USARTx->BRR = (USARTDIV_FRAC << 0);
 800254c:	19bb      	adds	r3, r7, r6
 800254e:	881a      	ldrh	r2, [r3, #0]
 8002550:	68fb      	ldr	r3, [r7, #12]
 8002552:	60da      	str	r2, [r3, #12]
USARTx->BRR |= (USARTDIV_MANT << 4);
 8002554:	68fb      	ldr	r3, [r7, #12]
 8002556:	68db      	ldr	r3, [r3, #12]
 8002558:	197a      	adds	r2, r7, r5
 800255a:	8812      	ldrh	r2, [r2, #0]
 800255c:	0112      	lsls	r2, r2, #4
 800255e:	431a      	orrs	r2, r3
 8002560:	68fb      	ldr	r3, [r7, #12]
 8002562:	60da      	str	r2, [r3, #12]
}
 8002564:	46c0      	nop			; (mov r8, r8)
 8002566:	46bd      	mov	sp, r7
 8002568:	b00b      	add	sp, #44	; 0x2c
 800256a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800256c:	40300000 	.word	0x40300000
 8002570:	3fe00000 	.word	0x3fe00000
 8002574:	3ff00000 	.word	0x3ff00000

08002578 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
   ldr   r0, =_estack
 8002578:	480d      	ldr	r0, [pc, #52]	; (80025b0 <LoopForever+0x2>)
   mov   sp, r0          /* set stack pointer */
 800257a:	4685      	mov	sp, r0

/* Call the clock system initialization function.*/
  bl  SystemInit
 800257c:	f7ff ff17 	bl	80023ae <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8002580:	480c      	ldr	r0, [pc, #48]	; (80025b4 <LoopForever+0x6>)
  ldr r1, =_edata
 8002582:	490d      	ldr	r1, [pc, #52]	; (80025b8 <LoopForever+0xa>)
  ldr r2, =_sidata
 8002584:	4a0d      	ldr	r2, [pc, #52]	; (80025bc <LoopForever+0xe>)
  movs r3, #0
 8002586:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8002588:	e002      	b.n	8002590 <LoopCopyDataInit>

0800258a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800258a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800258c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800258e:	3304      	adds	r3, #4

08002590 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8002590:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8002592:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8002594:	d3f9      	bcc.n	800258a <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8002596:	4a0a      	ldr	r2, [pc, #40]	; (80025c0 <LoopForever+0x12>)
  ldr r4, =_ebss
 8002598:	4c0a      	ldr	r4, [pc, #40]	; (80025c4 <LoopForever+0x16>)
  movs r3, #0
 800259a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800259c:	e001      	b.n	80025a2 <LoopFillZerobss>

0800259e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800259e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80025a0:	3204      	adds	r2, #4

080025a2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80025a2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80025a4:	d3fb      	bcc.n	800259e <FillZerobss>


/* Call static constructors */
    bl __libc_init_array
 80025a6:	f001 f89b 	bl	80036e0 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80025aa:	f7ff fe03 	bl	80021b4 <main>

080025ae <LoopForever>:

LoopForever:
    b LoopForever
 80025ae:	e7fe      	b.n	80025ae <LoopForever>
   ldr   r0, =_estack
 80025b0:	20005000 	.word	0x20005000
  ldr r0, =_sdata
 80025b4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80025b8:	2000000c 	.word	0x2000000c
  ldr r2, =_sidata
 80025bc:	080037ac 	.word	0x080037ac
  ldr r2, =_sbss
 80025c0:	2000000c 	.word	0x2000000c
  ldr r4, =_ebss
 80025c4:	20000030 	.word	0x20000030

080025c8 <ADC1_COMP_IRQHandler>:
 * @retval : None
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80025c8:	e7fe      	b.n	80025c8 <ADC1_COMP_IRQHandler>
	...

080025cc <HAL_Init>:
  *        In the default implementation,Systick is used as source of time base.
  *        the tick variable is incremented each 1ms in its ISR.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 80025cc:	b580      	push	{r7, lr}
 80025ce:	b082      	sub	sp, #8
 80025d0:	af00      	add	r7, sp, #0
  HAL_StatusTypeDef  status = HAL_OK;
 80025d2:	1dfb      	adds	r3, r7, #7
 80025d4:	2200      	movs	r2, #0
 80025d6:	701a      	strb	r2, [r3, #0]
#if (BUFFER_CACHE_DISABLE != 0)
  __HAL_FLASH_BUFFER_CACHE_DISABLE();
#endif /* BUFFER_CACHE_DISABLE */

#if (PREREAD_ENABLE != 0)
  __HAL_FLASH_PREREAD_BUFFER_ENABLE();
 80025d8:	4b0b      	ldr	r3, [pc, #44]	; (8002608 <HAL_Init+0x3c>)
 80025da:	681a      	ldr	r2, [r3, #0]
 80025dc:	4b0a      	ldr	r3, [pc, #40]	; (8002608 <HAL_Init+0x3c>)
 80025de:	2140      	movs	r1, #64	; 0x40
 80025e0:	430a      	orrs	r2, r1
 80025e2:	601a      	str	r2, [r3, #0]
#if (PREFETCH_ENABLE != 0)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
#endif /* PREFETCH_ENABLE */

  /* Use SysTick as time base source and configure 1ms tick (default clock after Reset is MSI) */
  if (HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 80025e4:	2000      	movs	r0, #0
 80025e6:	f000 f811 	bl	800260c <HAL_InitTick>
 80025ea:	1e03      	subs	r3, r0, #0
 80025ec:	d003      	beq.n	80025f6 <HAL_Init+0x2a>
  {
    status = HAL_ERROR;
 80025ee:	1dfb      	adds	r3, r7, #7
 80025f0:	2201      	movs	r2, #1
 80025f2:	701a      	strb	r2, [r3, #0]
 80025f4:	e001      	b.n	80025fa <HAL_Init+0x2e>
  }
  else
  {
    /* Init the low level hardware */
    HAL_MspInit();
 80025f6:	f7ff feaf 	bl	8002358 <HAL_MspInit>
  }

  /* Return function status */
  return status;
 80025fa:	1dfb      	adds	r3, r7, #7
 80025fc:	781b      	ldrb	r3, [r3, #0]
}
 80025fe:	0018      	movs	r0, r3
 8002600:	46bd      	mov	sp, r7
 8002602:	b002      	add	sp, #8
 8002604:	bd80      	pop	{r7, pc}
 8002606:	46c0      	nop			; (mov r8, r8)
 8002608:	40022000 	.word	0x40022000

0800260c <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 800260c:	b590      	push	{r4, r7, lr}
 800260e:	b083      	sub	sp, #12
 8002610:	af00      	add	r7, sp, #0
 8002612:	6078      	str	r0, [r7, #4]
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 8002614:	4b14      	ldr	r3, [pc, #80]	; (8002668 <HAL_InitTick+0x5c>)
 8002616:	681c      	ldr	r4, [r3, #0]
 8002618:	4b14      	ldr	r3, [pc, #80]	; (800266c <HAL_InitTick+0x60>)
 800261a:	781b      	ldrb	r3, [r3, #0]
 800261c:	0019      	movs	r1, r3
 800261e:	23fa      	movs	r3, #250	; 0xfa
 8002620:	0098      	lsls	r0, r3, #2
 8002622:	f7fd fd71 	bl	8000108 <__udivsi3>
 8002626:	0003      	movs	r3, r0
 8002628:	0019      	movs	r1, r3
 800262a:	0020      	movs	r0, r4
 800262c:	f7fd fd6c 	bl	8000108 <__udivsi3>
 8002630:	0003      	movs	r3, r0
 8002632:	0018      	movs	r0, r3
 8002634:	f000 f8e1 	bl	80027fa <HAL_SYSTICK_Config>
 8002638:	1e03      	subs	r3, r0, #0
 800263a:	d001      	beq.n	8002640 <HAL_InitTick+0x34>
  {
    return HAL_ERROR;
 800263c:	2301      	movs	r3, #1
 800263e:	e00f      	b.n	8002660 <HAL_InitTick+0x54>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8002640:	687b      	ldr	r3, [r7, #4]
 8002642:	2b03      	cmp	r3, #3
 8002644:	d80b      	bhi.n	800265e <HAL_InitTick+0x52>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 8002646:	6879      	ldr	r1, [r7, #4]
 8002648:	2301      	movs	r3, #1
 800264a:	425b      	negs	r3, r3
 800264c:	2200      	movs	r2, #0
 800264e:	0018      	movs	r0, r3
 8002650:	f000 f8be 	bl	80027d0 <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 8002654:	4b06      	ldr	r3, [pc, #24]	; (8002670 <HAL_InitTick+0x64>)
 8002656:	687a      	ldr	r2, [r7, #4]
 8002658:	601a      	str	r2, [r3, #0]
  {
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
 800265a:	2300      	movs	r3, #0
 800265c:	e000      	b.n	8002660 <HAL_InitTick+0x54>
    return HAL_ERROR;
 800265e:	2301      	movs	r3, #1
}
 8002660:	0018      	movs	r0, r3
 8002662:	46bd      	mov	sp, r7
 8002664:	b003      	add	sp, #12
 8002666:	bd90      	pop	{r4, r7, pc}
 8002668:	20000000 	.word	0x20000000
 800266c:	20000008 	.word	0x20000008
 8002670:	20000004 	.word	0x20000004

08002674 <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 8002674:	b580      	push	{r7, lr}
 8002676:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 8002678:	4b05      	ldr	r3, [pc, #20]	; (8002690 <HAL_IncTick+0x1c>)
 800267a:	781b      	ldrb	r3, [r3, #0]
 800267c:	001a      	movs	r2, r3
 800267e:	4b05      	ldr	r3, [pc, #20]	; (8002694 <HAL_IncTick+0x20>)
 8002680:	681b      	ldr	r3, [r3, #0]
 8002682:	18d2      	adds	r2, r2, r3
 8002684:	4b03      	ldr	r3, [pc, #12]	; (8002694 <HAL_IncTick+0x20>)
 8002686:	601a      	str	r2, [r3, #0]
}
 8002688:	46c0      	nop			; (mov r8, r8)
 800268a:	46bd      	mov	sp, r7
 800268c:	bd80      	pop	{r7, pc}
 800268e:	46c0      	nop			; (mov r8, r8)
 8002690:	20000008 	.word	0x20000008
 8002694:	2000002c 	.word	0x2000002c

08002698 <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 8002698:	b580      	push	{r7, lr}
 800269a:	af00      	add	r7, sp, #0
  return uwTick;
 800269c:	4b02      	ldr	r3, [pc, #8]	; (80026a8 <HAL_GetTick+0x10>)
 800269e:	681b      	ldr	r3, [r3, #0]
}
 80026a0:	0018      	movs	r0, r3
 80026a2:	46bd      	mov	sp, r7
 80026a4:	bd80      	pop	{r7, pc}
 80026a6:	46c0      	nop			; (mov r8, r8)
 80026a8:	2000002c 	.word	0x2000002c

080026ac <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 80026ac:	b590      	push	{r4, r7, lr}
 80026ae:	b083      	sub	sp, #12
 80026b0:	af00      	add	r7, sp, #0
 80026b2:	0002      	movs	r2, r0
 80026b4:	6039      	str	r1, [r7, #0]
 80026b6:	1dfb      	adds	r3, r7, #7
 80026b8:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) >= 0)
 80026ba:	1dfb      	adds	r3, r7, #7
 80026bc:	781b      	ldrb	r3, [r3, #0]
 80026be:	2b7f      	cmp	r3, #127	; 0x7f
 80026c0:	d828      	bhi.n	8002714 <__NVIC_SetPriority+0x68>
  {
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 80026c2:	4a2f      	ldr	r2, [pc, #188]	; (8002780 <__NVIC_SetPriority+0xd4>)
 80026c4:	1dfb      	adds	r3, r7, #7
 80026c6:	781b      	ldrb	r3, [r3, #0]
 80026c8:	b25b      	sxtb	r3, r3
 80026ca:	089b      	lsrs	r3, r3, #2
 80026cc:	33c0      	adds	r3, #192	; 0xc0
 80026ce:	009b      	lsls	r3, r3, #2
 80026d0:	589b      	ldr	r3, [r3, r2]
 80026d2:	1dfa      	adds	r2, r7, #7
 80026d4:	7812      	ldrb	r2, [r2, #0]
 80026d6:	0011      	movs	r1, r2
 80026d8:	2203      	movs	r2, #3
 80026da:	400a      	ands	r2, r1
 80026dc:	00d2      	lsls	r2, r2, #3
 80026de:	21ff      	movs	r1, #255	; 0xff
 80026e0:	4091      	lsls	r1, r2
 80026e2:	000a      	movs	r2, r1
 80026e4:	43d2      	mvns	r2, r2
 80026e6:	401a      	ands	r2, r3
 80026e8:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 80026ea:	683b      	ldr	r3, [r7, #0]
 80026ec:	019b      	lsls	r3, r3, #6
 80026ee:	22ff      	movs	r2, #255	; 0xff
 80026f0:	401a      	ands	r2, r3
 80026f2:	1dfb      	adds	r3, r7, #7
 80026f4:	781b      	ldrb	r3, [r3, #0]
 80026f6:	0018      	movs	r0, r3
 80026f8:	2303      	movs	r3, #3
 80026fa:	4003      	ands	r3, r0
 80026fc:	00db      	lsls	r3, r3, #3
 80026fe:	409a      	lsls	r2, r3
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002700:	481f      	ldr	r0, [pc, #124]	; (8002780 <__NVIC_SetPriority+0xd4>)
 8002702:	1dfb      	adds	r3, r7, #7
 8002704:	781b      	ldrb	r3, [r3, #0]
 8002706:	b25b      	sxtb	r3, r3
 8002708:	089b      	lsrs	r3, r3, #2
 800270a:	430a      	orrs	r2, r1
 800270c:	33c0      	adds	r3, #192	; 0xc0
 800270e:	009b      	lsls	r3, r3, #2
 8002710:	501a      	str	r2, [r3, r0]
  else
  {
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
  }
}
 8002712:	e031      	b.n	8002778 <__NVIC_SetPriority+0xcc>
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002714:	4a1b      	ldr	r2, [pc, #108]	; (8002784 <__NVIC_SetPriority+0xd8>)
 8002716:	1dfb      	adds	r3, r7, #7
 8002718:	781b      	ldrb	r3, [r3, #0]
 800271a:	0019      	movs	r1, r3
 800271c:	230f      	movs	r3, #15
 800271e:	400b      	ands	r3, r1
 8002720:	3b08      	subs	r3, #8
 8002722:	089b      	lsrs	r3, r3, #2
 8002724:	3306      	adds	r3, #6
 8002726:	009b      	lsls	r3, r3, #2
 8002728:	18d3      	adds	r3, r2, r3
 800272a:	3304      	adds	r3, #4
 800272c:	681b      	ldr	r3, [r3, #0]
 800272e:	1dfa      	adds	r2, r7, #7
 8002730:	7812      	ldrb	r2, [r2, #0]
 8002732:	0011      	movs	r1, r2
 8002734:	2203      	movs	r2, #3
 8002736:	400a      	ands	r2, r1
 8002738:	00d2      	lsls	r2, r2, #3
 800273a:	21ff      	movs	r1, #255	; 0xff
 800273c:	4091      	lsls	r1, r2
 800273e:	000a      	movs	r2, r1
 8002740:	43d2      	mvns	r2, r2
 8002742:	401a      	ands	r2, r3
 8002744:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 8002746:	683b      	ldr	r3, [r7, #0]
 8002748:	019b      	lsls	r3, r3, #6
 800274a:	22ff      	movs	r2, #255	; 0xff
 800274c:	401a      	ands	r2, r3
 800274e:	1dfb      	adds	r3, r7, #7
 8002750:	781b      	ldrb	r3, [r3, #0]
 8002752:	0018      	movs	r0, r3
 8002754:	2303      	movs	r3, #3
 8002756:	4003      	ands	r3, r0
 8002758:	00db      	lsls	r3, r3, #3
 800275a:	409a      	lsls	r2, r3
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 800275c:	4809      	ldr	r0, [pc, #36]	; (8002784 <__NVIC_SetPriority+0xd8>)
 800275e:	1dfb      	adds	r3, r7, #7
 8002760:	781b      	ldrb	r3, [r3, #0]
 8002762:	001c      	movs	r4, r3
 8002764:	230f      	movs	r3, #15
 8002766:	4023      	ands	r3, r4
 8002768:	3b08      	subs	r3, #8
 800276a:	089b      	lsrs	r3, r3, #2
 800276c:	430a      	orrs	r2, r1
 800276e:	3306      	adds	r3, #6
 8002770:	009b      	lsls	r3, r3, #2
 8002772:	18c3      	adds	r3, r0, r3
 8002774:	3304      	adds	r3, #4
 8002776:	601a      	str	r2, [r3, #0]
}
 8002778:	46c0      	nop			; (mov r8, r8)
 800277a:	46bd      	mov	sp, r7
 800277c:	b003      	add	sp, #12
 800277e:	bd90      	pop	{r4, r7, pc}
 8002780:	e000e100 	.word	0xe000e100
 8002784:	e000ed00 	.word	0xe000ed00

08002788 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 8002788:	b580      	push	{r7, lr}
 800278a:	b082      	sub	sp, #8
 800278c:	af00      	add	r7, sp, #0
 800278e:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8002790:	687b      	ldr	r3, [r7, #4]
 8002792:	1e5a      	subs	r2, r3, #1
 8002794:	2380      	movs	r3, #128	; 0x80
 8002796:	045b      	lsls	r3, r3, #17
 8002798:	429a      	cmp	r2, r3
 800279a:	d301      	bcc.n	80027a0 <SysTick_Config+0x18>
  {
    return (1UL);                                                   /* Reload value impossible */
 800279c:	2301      	movs	r3, #1
 800279e:	e010      	b.n	80027c2 <SysTick_Config+0x3a>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 80027a0:	4b0a      	ldr	r3, [pc, #40]	; (80027cc <SysTick_Config+0x44>)
 80027a2:	687a      	ldr	r2, [r7, #4]
 80027a4:	3a01      	subs	r2, #1
 80027a6:	605a      	str	r2, [r3, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 80027a8:	2301      	movs	r3, #1
 80027aa:	425b      	negs	r3, r3
 80027ac:	2103      	movs	r1, #3
 80027ae:	0018      	movs	r0, r3
 80027b0:	f7ff ff7c 	bl	80026ac <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 80027b4:	4b05      	ldr	r3, [pc, #20]	; (80027cc <SysTick_Config+0x44>)
 80027b6:	2200      	movs	r2, #0
 80027b8:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 80027ba:	4b04      	ldr	r3, [pc, #16]	; (80027cc <SysTick_Config+0x44>)
 80027bc:	2207      	movs	r2, #7
 80027be:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 80027c0:	2300      	movs	r3, #0
}
 80027c2:	0018      	movs	r0, r3
 80027c4:	46bd      	mov	sp, r7
 80027c6:	b002      	add	sp, #8
 80027c8:	bd80      	pop	{r7, pc}
 80027ca:	46c0      	nop			; (mov r8, r8)
 80027cc:	e000e010 	.word	0xe000e010

080027d0 <HAL_NVIC_SetPriority>:
  *         with stm32l0xx devices, this parameter is a dummy value and it is ignored, because 
  *         no subpriority supported in Cortex M0+ based products.   
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 80027d0:	b580      	push	{r7, lr}
 80027d2:	b084      	sub	sp, #16
 80027d4:	af00      	add	r7, sp, #0
 80027d6:	60b9      	str	r1, [r7, #8]
 80027d8:	607a      	str	r2, [r7, #4]
 80027da:	210f      	movs	r1, #15
 80027dc:	187b      	adds	r3, r7, r1
 80027de:	1c02      	adds	r2, r0, #0
 80027e0:	701a      	strb	r2, [r3, #0]
    /* Check the parameters */
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  NVIC_SetPriority(IRQn,PreemptPriority);
 80027e2:	68ba      	ldr	r2, [r7, #8]
 80027e4:	187b      	adds	r3, r7, r1
 80027e6:	781b      	ldrb	r3, [r3, #0]
 80027e8:	b25b      	sxtb	r3, r3
 80027ea:	0011      	movs	r1, r2
 80027ec:	0018      	movs	r0, r3
 80027ee:	f7ff ff5d 	bl	80026ac <__NVIC_SetPriority>
}
 80027f2:	46c0      	nop			; (mov r8, r8)
 80027f4:	46bd      	mov	sp, r7
 80027f6:	b004      	add	sp, #16
 80027f8:	bd80      	pop	{r7, pc}

080027fa <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 80027fa:	b580      	push	{r7, lr}
 80027fc:	b082      	sub	sp, #8
 80027fe:	af00      	add	r7, sp, #0
 8002800:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 8002802:	687b      	ldr	r3, [r7, #4]
 8002804:	0018      	movs	r0, r3
 8002806:	f7ff ffbf 	bl	8002788 <SysTick_Config>
 800280a:	0003      	movs	r3, r0
}
 800280c:	0018      	movs	r0, r3
 800280e:	46bd      	mov	sp, r7
 8002810:	b002      	add	sp, #8
 8002812:	bd80      	pop	{r7, pc}

08002814 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *                    the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8002814:	b580      	push	{r7, lr}
 8002816:	b086      	sub	sp, #24
 8002818:	af00      	add	r7, sp, #0
 800281a:	6078      	str	r0, [r7, #4]
 800281c:	6039      	str	r1, [r7, #0]
  uint32_t position = 0x00U;
 800281e:	2300      	movs	r3, #0
 8002820:	617b      	str	r3, [r7, #20]
  uint32_t iocurrent = 0x00U;
 8002822:	2300      	movs	r3, #0
 8002824:	60fb      	str	r3, [r7, #12]
  uint32_t temp = 0x00U;
 8002826:	2300      	movs	r3, #0
 8002828:	613b      	str	r3, [r7, #16]
  /* Check the parameters */
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
  assert_param(IS_GPIO_PIN_AVAILABLE(GPIOx, (GPIO_Init->Pin)));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0)
 800282a:	e155      	b.n	8002ad8 <HAL_GPIO_Init+0x2c4>
  {
    /* Get the IO position */
    iocurrent = (GPIO_Init->Pin) & (1U << position);
 800282c:	683b      	ldr	r3, [r7, #0]
 800282e:	681b      	ldr	r3, [r3, #0]
 8002830:	2101      	movs	r1, #1
 8002832:	697a      	ldr	r2, [r7, #20]
 8002834:	4091      	lsls	r1, r2
 8002836:	000a      	movs	r2, r1
 8002838:	4013      	ands	r3, r2
 800283a:	60fb      	str	r3, [r7, #12]

    if (iocurrent)
 800283c:	68fb      	ldr	r3, [r7, #12]
 800283e:	2b00      	cmp	r3, #0
 8002840:	d100      	bne.n	8002844 <HAL_GPIO_Init+0x30>
 8002842:	e146      	b.n	8002ad2 <HAL_GPIO_Init+0x2be>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) ||
 8002844:	683b      	ldr	r3, [r7, #0]
 8002846:	685b      	ldr	r3, [r3, #4]
 8002848:	2203      	movs	r2, #3
 800284a:	4013      	ands	r3, r2
 800284c:	2b01      	cmp	r3, #1
 800284e:	d005      	beq.n	800285c <HAL_GPIO_Init+0x48>
          ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 8002850:	683b      	ldr	r3, [r7, #0]
 8002852:	685b      	ldr	r3, [r3, #4]
 8002854:	2203      	movs	r2, #3
 8002856:	4013      	ands	r3, r2
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) ||
 8002858:	2b02      	cmp	r3, #2
 800285a:	d130      	bne.n	80028be <HAL_GPIO_Init+0xaa>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR;
 800285c:	687b      	ldr	r3, [r7, #4]
 800285e:	689b      	ldr	r3, [r3, #8]
 8002860:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_OSPEEDER_OSPEED0 << (position * 2U));
 8002862:	697b      	ldr	r3, [r7, #20]
 8002864:	005b      	lsls	r3, r3, #1
 8002866:	2203      	movs	r2, #3
 8002868:	409a      	lsls	r2, r3
 800286a:	0013      	movs	r3, r2
 800286c:	43da      	mvns	r2, r3
 800286e:	693b      	ldr	r3, [r7, #16]
 8002870:	4013      	ands	r3, r2
 8002872:	613b      	str	r3, [r7, #16]
        temp |= (GPIO_Init->Speed << (position * 2U));
 8002874:	683b      	ldr	r3, [r7, #0]
 8002876:	68da      	ldr	r2, [r3, #12]
 8002878:	697b      	ldr	r3, [r7, #20]
 800287a:	005b      	lsls	r3, r3, #1
 800287c:	409a      	lsls	r2, r3
 800287e:	0013      	movs	r3, r2
 8002880:	693a      	ldr	r2, [r7, #16]
 8002882:	4313      	orrs	r3, r2
 8002884:	613b      	str	r3, [r7, #16]
        GPIOx->OSPEEDR = temp;
 8002886:	687b      	ldr	r3, [r7, #4]
 8002888:	693a      	ldr	r2, [r7, #16]
 800288a:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 800288c:	687b      	ldr	r3, [r7, #4]
 800288e:	685b      	ldr	r3, [r3, #4]
 8002890:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8002892:	2201      	movs	r2, #1
 8002894:	697b      	ldr	r3, [r7, #20]
 8002896:	409a      	lsls	r2, r3
 8002898:	0013      	movs	r3, r2
 800289a:	43da      	mvns	r2, r3
 800289c:	693b      	ldr	r3, [r7, #16]
 800289e:	4013      	ands	r3, r2
 80028a0:	613b      	str	r3, [r7, #16]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 80028a2:	683b      	ldr	r3, [r7, #0]
 80028a4:	685b      	ldr	r3, [r3, #4]
 80028a6:	091b      	lsrs	r3, r3, #4
 80028a8:	2201      	movs	r2, #1
 80028aa:	401a      	ands	r2, r3
 80028ac:	697b      	ldr	r3, [r7, #20]
 80028ae:	409a      	lsls	r2, r3
 80028b0:	0013      	movs	r3, r2
 80028b2:	693a      	ldr	r2, [r7, #16]
 80028b4:	4313      	orrs	r3, r2
 80028b6:	613b      	str	r3, [r7, #16]
        GPIOx->OTYPER = temp;
 80028b8:	687b      	ldr	r3, [r7, #4]
 80028ba:	693a      	ldr	r2, [r7, #16]
 80028bc:	605a      	str	r2, [r3, #4]
      }

      if ((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 80028be:	683b      	ldr	r3, [r7, #0]
 80028c0:	685b      	ldr	r3, [r3, #4]
 80028c2:	2203      	movs	r2, #3
 80028c4:	4013      	ands	r3, r2
 80028c6:	2b03      	cmp	r3, #3
 80028c8:	d017      	beq.n	80028fa <HAL_GPIO_Init+0xe6>
      {
        /* Check the Pull parameter */
        assert_param(IS_GPIO_PULL(GPIO_Init->Pull));

        /* Activate the Pull-up or Pull down resistor for the current IO */
        temp = GPIOx->PUPDR;
 80028ca:	687b      	ldr	r3, [r7, #4]
 80028cc:	68db      	ldr	r3, [r3, #12]
 80028ce:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
 80028d0:	697b      	ldr	r3, [r7, #20]
 80028d2:	005b      	lsls	r3, r3, #1
 80028d4:	2203      	movs	r2, #3
 80028d6:	409a      	lsls	r2, r3
 80028d8:	0013      	movs	r3, r2
 80028da:	43da      	mvns	r2, r3
 80028dc:	693b      	ldr	r3, [r7, #16]
 80028de:	4013      	ands	r3, r2
 80028e0:	613b      	str	r3, [r7, #16]
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 80028e2:	683b      	ldr	r3, [r7, #0]
 80028e4:	689a      	ldr	r2, [r3, #8]
 80028e6:	697b      	ldr	r3, [r7, #20]
 80028e8:	005b      	lsls	r3, r3, #1
 80028ea:	409a      	lsls	r2, r3
 80028ec:	0013      	movs	r3, r2
 80028ee:	693a      	ldr	r2, [r7, #16]
 80028f0:	4313      	orrs	r3, r2
 80028f2:	613b      	str	r3, [r7, #16]
        GPIOx->PUPDR = temp;
 80028f4:	687b      	ldr	r3, [r7, #4]
 80028f6:	693a      	ldr	r2, [r7, #16]
 80028f8:	60da      	str	r2, [r3, #12]
      }

      /* In case of Alternate function mode selection */
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 80028fa:	683b      	ldr	r3, [r7, #0]
 80028fc:	685b      	ldr	r3, [r3, #4]
 80028fe:	2203      	movs	r2, #3
 8002900:	4013      	ands	r3, r2
 8002902:	2b02      	cmp	r3, #2
 8002904:	d123      	bne.n	800294e <HAL_GPIO_Init+0x13a>
        /* Check the Alternate function parameters */
        assert_param(IS_GPIO_AF_INSTANCE(GPIOx));
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));

        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3U];
 8002906:	697b      	ldr	r3, [r7, #20]
 8002908:	08da      	lsrs	r2, r3, #3
 800290a:	687b      	ldr	r3, [r7, #4]
 800290c:	3208      	adds	r2, #8
 800290e:	0092      	lsls	r2, r2, #2
 8002910:	58d3      	ldr	r3, [r2, r3]
 8002912:	613b      	str	r3, [r7, #16]
        temp &= ~(0xFUL << ((uint32_t)(position & 0x07UL) * 4U));
 8002914:	697b      	ldr	r3, [r7, #20]
 8002916:	2207      	movs	r2, #7
 8002918:	4013      	ands	r3, r2
 800291a:	009b      	lsls	r3, r3, #2
 800291c:	220f      	movs	r2, #15
 800291e:	409a      	lsls	r2, r3
 8002920:	0013      	movs	r3, r2
 8002922:	43da      	mvns	r2, r3
 8002924:	693b      	ldr	r3, [r7, #16]
 8002926:	4013      	ands	r3, r2
 8002928:	613b      	str	r3, [r7, #16]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & (uint32_t)0x07U) * 4U));
 800292a:	683b      	ldr	r3, [r7, #0]
 800292c:	691a      	ldr	r2, [r3, #16]
 800292e:	697b      	ldr	r3, [r7, #20]
 8002930:	2107      	movs	r1, #7
 8002932:	400b      	ands	r3, r1
 8002934:	009b      	lsls	r3, r3, #2
 8002936:	409a      	lsls	r2, r3
 8002938:	0013      	movs	r3, r2
 800293a:	693a      	ldr	r2, [r7, #16]
 800293c:	4313      	orrs	r3, r2
 800293e:	613b      	str	r3, [r7, #16]
        GPIOx->AFR[position >> 3U] = temp;
 8002940:	697b      	ldr	r3, [r7, #20]
 8002942:	08da      	lsrs	r2, r3, #3
 8002944:	687b      	ldr	r3, [r7, #4]
 8002946:	3208      	adds	r2, #8
 8002948:	0092      	lsls	r2, r2, #2
 800294a:	6939      	ldr	r1, [r7, #16]
 800294c:	50d1      	str	r1, [r2, r3]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 800294e:	687b      	ldr	r3, [r7, #4]
 8002950:	681b      	ldr	r3, [r3, #0]
 8002952:	613b      	str	r3, [r7, #16]
      temp &= ~(GPIO_MODER_MODE0 << (position * 2U));
 8002954:	697b      	ldr	r3, [r7, #20]
 8002956:	005b      	lsls	r3, r3, #1
 8002958:	2203      	movs	r2, #3
 800295a:	409a      	lsls	r2, r3
 800295c:	0013      	movs	r3, r2
 800295e:	43da      	mvns	r2, r3
 8002960:	693b      	ldr	r3, [r7, #16]
 8002962:	4013      	ands	r3, r2
 8002964:	613b      	str	r3, [r7, #16]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8002966:	683b      	ldr	r3, [r7, #0]
 8002968:	685b      	ldr	r3, [r3, #4]
 800296a:	2203      	movs	r2, #3
 800296c:	401a      	ands	r2, r3
 800296e:	697b      	ldr	r3, [r7, #20]
 8002970:	005b      	lsls	r3, r3, #1
 8002972:	409a      	lsls	r2, r3
 8002974:	0013      	movs	r3, r2
 8002976:	693a      	ldr	r2, [r7, #16]
 8002978:	4313      	orrs	r3, r2
 800297a:	613b      	str	r3, [r7, #16]
      GPIOx->MODER = temp;
 800297c:	687b      	ldr	r3, [r7, #4]
 800297e:	693a      	ldr	r2, [r7, #16]
 8002980:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8002982:	683b      	ldr	r3, [r7, #0]
 8002984:	685a      	ldr	r2, [r3, #4]
 8002986:	23c0      	movs	r3, #192	; 0xc0
 8002988:	029b      	lsls	r3, r3, #10
 800298a:	4013      	ands	r3, r2
 800298c:	d100      	bne.n	8002990 <HAL_GPIO_Init+0x17c>
 800298e:	e0a0      	b.n	8002ad2 <HAL_GPIO_Init+0x2be>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8002990:	4b57      	ldr	r3, [pc, #348]	; (8002af0 <HAL_GPIO_Init+0x2dc>)
 8002992:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8002994:	4b56      	ldr	r3, [pc, #344]	; (8002af0 <HAL_GPIO_Init+0x2dc>)
 8002996:	2101      	movs	r1, #1
 8002998:	430a      	orrs	r2, r1
 800299a:	635a      	str	r2, [r3, #52]	; 0x34

        temp = SYSCFG->EXTICR[position >> 2U];
 800299c:	4a55      	ldr	r2, [pc, #340]	; (8002af4 <HAL_GPIO_Init+0x2e0>)
 800299e:	697b      	ldr	r3, [r7, #20]
 80029a0:	089b      	lsrs	r3, r3, #2
 80029a2:	3302      	adds	r3, #2
 80029a4:	009b      	lsls	r3, r3, #2
 80029a6:	589b      	ldr	r3, [r3, r2]
 80029a8:	613b      	str	r3, [r7, #16]
        CLEAR_BIT(temp, (0x0FUL) << (4U * (position & 0x03U)));
 80029aa:	697b      	ldr	r3, [r7, #20]
 80029ac:	2203      	movs	r2, #3
 80029ae:	4013      	ands	r3, r2
 80029b0:	009b      	lsls	r3, r3, #2
 80029b2:	220f      	movs	r2, #15
 80029b4:	409a      	lsls	r2, r3
 80029b6:	0013      	movs	r3, r2
 80029b8:	43da      	mvns	r2, r3
 80029ba:	693b      	ldr	r3, [r7, #16]
 80029bc:	4013      	ands	r3, r2
 80029be:	613b      	str	r3, [r7, #16]
        SET_BIT(temp, (GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03U)));
 80029c0:	687a      	ldr	r2, [r7, #4]
 80029c2:	23a0      	movs	r3, #160	; 0xa0
 80029c4:	05db      	lsls	r3, r3, #23
 80029c6:	429a      	cmp	r2, r3
 80029c8:	d01f      	beq.n	8002a0a <HAL_GPIO_Init+0x1f6>
 80029ca:	687b      	ldr	r3, [r7, #4]
 80029cc:	4a4a      	ldr	r2, [pc, #296]	; (8002af8 <HAL_GPIO_Init+0x2e4>)
 80029ce:	4293      	cmp	r3, r2
 80029d0:	d019      	beq.n	8002a06 <HAL_GPIO_Init+0x1f2>
 80029d2:	687b      	ldr	r3, [r7, #4]
 80029d4:	4a49      	ldr	r2, [pc, #292]	; (8002afc <HAL_GPIO_Init+0x2e8>)
 80029d6:	4293      	cmp	r3, r2
 80029d8:	d013      	beq.n	8002a02 <HAL_GPIO_Init+0x1ee>
 80029da:	687b      	ldr	r3, [r7, #4]
 80029dc:	4a48      	ldr	r2, [pc, #288]	; (8002b00 <HAL_GPIO_Init+0x2ec>)
 80029de:	4293      	cmp	r3, r2
 80029e0:	d00d      	beq.n	80029fe <HAL_GPIO_Init+0x1ea>
 80029e2:	687b      	ldr	r3, [r7, #4]
 80029e4:	4a47      	ldr	r2, [pc, #284]	; (8002b04 <HAL_GPIO_Init+0x2f0>)
 80029e6:	4293      	cmp	r3, r2
 80029e8:	d007      	beq.n	80029fa <HAL_GPIO_Init+0x1e6>
 80029ea:	687b      	ldr	r3, [r7, #4]
 80029ec:	4a46      	ldr	r2, [pc, #280]	; (8002b08 <HAL_GPIO_Init+0x2f4>)
 80029ee:	4293      	cmp	r3, r2
 80029f0:	d101      	bne.n	80029f6 <HAL_GPIO_Init+0x1e2>
 80029f2:	2305      	movs	r3, #5
 80029f4:	e00a      	b.n	8002a0c <HAL_GPIO_Init+0x1f8>
 80029f6:	2306      	movs	r3, #6
 80029f8:	e008      	b.n	8002a0c <HAL_GPIO_Init+0x1f8>
 80029fa:	2304      	movs	r3, #4
 80029fc:	e006      	b.n	8002a0c <HAL_GPIO_Init+0x1f8>
 80029fe:	2303      	movs	r3, #3
 8002a00:	e004      	b.n	8002a0c <HAL_GPIO_Init+0x1f8>
 8002a02:	2302      	movs	r3, #2
 8002a04:	e002      	b.n	8002a0c <HAL_GPIO_Init+0x1f8>
 8002a06:	2301      	movs	r3, #1
 8002a08:	e000      	b.n	8002a0c <HAL_GPIO_Init+0x1f8>
 8002a0a:	2300      	movs	r3, #0
 8002a0c:	697a      	ldr	r2, [r7, #20]
 8002a0e:	2103      	movs	r1, #3
 8002a10:	400a      	ands	r2, r1
 8002a12:	0092      	lsls	r2, r2, #2
 8002a14:	4093      	lsls	r3, r2
 8002a16:	693a      	ldr	r2, [r7, #16]
 8002a18:	4313      	orrs	r3, r2
 8002a1a:	613b      	str	r3, [r7, #16]
        SYSCFG->EXTICR[position >> 2U] = temp;
 8002a1c:	4935      	ldr	r1, [pc, #212]	; (8002af4 <HAL_GPIO_Init+0x2e0>)
 8002a1e:	697b      	ldr	r3, [r7, #20]
 8002a20:	089b      	lsrs	r3, r3, #2
 8002a22:	3302      	adds	r3, #2
 8002a24:	009b      	lsls	r3, r3, #2
 8002a26:	693a      	ldr	r2, [r7, #16]
 8002a28:	505a      	str	r2, [r3, r1]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8002a2a:	4b38      	ldr	r3, [pc, #224]	; (8002b0c <HAL_GPIO_Init+0x2f8>)
 8002a2c:	689b      	ldr	r3, [r3, #8]
 8002a2e:	613b      	str	r3, [r7, #16]
        temp &= ~((uint32_t)iocurrent);
 8002a30:	68fb      	ldr	r3, [r7, #12]
 8002a32:	43da      	mvns	r2, r3
 8002a34:	693b      	ldr	r3, [r7, #16]
 8002a36:	4013      	ands	r3, r2
 8002a38:	613b      	str	r3, [r7, #16]
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 8002a3a:	683b      	ldr	r3, [r7, #0]
 8002a3c:	685a      	ldr	r2, [r3, #4]
 8002a3e:	2380      	movs	r3, #128	; 0x80
 8002a40:	035b      	lsls	r3, r3, #13
 8002a42:	4013      	ands	r3, r2
 8002a44:	d003      	beq.n	8002a4e <HAL_GPIO_Init+0x23a>
        {
          temp |= iocurrent;
 8002a46:	693a      	ldr	r2, [r7, #16]
 8002a48:	68fb      	ldr	r3, [r7, #12]
 8002a4a:	4313      	orrs	r3, r2
 8002a4c:	613b      	str	r3, [r7, #16]
        }
        EXTI->RTSR = temp;
 8002a4e:	4b2f      	ldr	r3, [pc, #188]	; (8002b0c <HAL_GPIO_Init+0x2f8>)
 8002a50:	693a      	ldr	r2, [r7, #16]
 8002a52:	609a      	str	r2, [r3, #8]

        temp = EXTI->FTSR;
 8002a54:	4b2d      	ldr	r3, [pc, #180]	; (8002b0c <HAL_GPIO_Init+0x2f8>)
 8002a56:	68db      	ldr	r3, [r3, #12]
 8002a58:	613b      	str	r3, [r7, #16]
        temp &= ~((uint32_t)iocurrent);
 8002a5a:	68fb      	ldr	r3, [r7, #12]
 8002a5c:	43da      	mvns	r2, r3
 8002a5e:	693b      	ldr	r3, [r7, #16]
 8002a60:	4013      	ands	r3, r2
 8002a62:	613b      	str	r3, [r7, #16]
        if ((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 8002a64:	683b      	ldr	r3, [r7, #0]
 8002a66:	685a      	ldr	r2, [r3, #4]
 8002a68:	2380      	movs	r3, #128	; 0x80
 8002a6a:	039b      	lsls	r3, r3, #14
 8002a6c:	4013      	ands	r3, r2
 8002a6e:	d003      	beq.n	8002a78 <HAL_GPIO_Init+0x264>
        {
          temp |= iocurrent;
 8002a70:	693a      	ldr	r2, [r7, #16]
 8002a72:	68fb      	ldr	r3, [r7, #12]
 8002a74:	4313      	orrs	r3, r2
 8002a76:	613b      	str	r3, [r7, #16]
        }
        EXTI->FTSR = temp;
 8002a78:	4b24      	ldr	r3, [pc, #144]	; (8002b0c <HAL_GPIO_Init+0x2f8>)
 8002a7a:	693a      	ldr	r2, [r7, #16]
 8002a7c:	60da      	str	r2, [r3, #12]

        temp = EXTI->EMR;
 8002a7e:	4b23      	ldr	r3, [pc, #140]	; (8002b0c <HAL_GPIO_Init+0x2f8>)
 8002a80:	685b      	ldr	r3, [r3, #4]
 8002a82:	613b      	str	r3, [r7, #16]
        temp &= ~((uint32_t)iocurrent);
 8002a84:	68fb      	ldr	r3, [r7, #12]
 8002a86:	43da      	mvns	r2, r3
 8002a88:	693b      	ldr	r3, [r7, #16]
 8002a8a:	4013      	ands	r3, r2
 8002a8c:	613b      	str	r3, [r7, #16]
        if ((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 8002a8e:	683b      	ldr	r3, [r7, #0]
 8002a90:	685a      	ldr	r2, [r3, #4]
 8002a92:	2380      	movs	r3, #128	; 0x80
 8002a94:	029b      	lsls	r3, r3, #10
 8002a96:	4013      	ands	r3, r2
 8002a98:	d003      	beq.n	8002aa2 <HAL_GPIO_Init+0x28e>
        {
          temp |= iocurrent;
 8002a9a:	693a      	ldr	r2, [r7, #16]
 8002a9c:	68fb      	ldr	r3, [r7, #12]
 8002a9e:	4313      	orrs	r3, r2
 8002aa0:	613b      	str	r3, [r7, #16]
        }
        EXTI->EMR = temp;
 8002aa2:	4b1a      	ldr	r3, [pc, #104]	; (8002b0c <HAL_GPIO_Init+0x2f8>)
 8002aa4:	693a      	ldr	r2, [r7, #16]
 8002aa6:	605a      	str	r2, [r3, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8002aa8:	4b18      	ldr	r3, [pc, #96]	; (8002b0c <HAL_GPIO_Init+0x2f8>)
 8002aaa:	681b      	ldr	r3, [r3, #0]
 8002aac:	613b      	str	r3, [r7, #16]
        temp &= ~((uint32_t)iocurrent);
 8002aae:	68fb      	ldr	r3, [r7, #12]
 8002ab0:	43da      	mvns	r2, r3
 8002ab2:	693b      	ldr	r3, [r7, #16]
 8002ab4:	4013      	ands	r3, r2
 8002ab6:	613b      	str	r3, [r7, #16]
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8002ab8:	683b      	ldr	r3, [r7, #0]
 8002aba:	685a      	ldr	r2, [r3, #4]
 8002abc:	2380      	movs	r3, #128	; 0x80
 8002abe:	025b      	lsls	r3, r3, #9
 8002ac0:	4013      	ands	r3, r2
 8002ac2:	d003      	beq.n	8002acc <HAL_GPIO_Init+0x2b8>
        {
          temp |= iocurrent;
 8002ac4:	693a      	ldr	r2, [r7, #16]
 8002ac6:	68fb      	ldr	r3, [r7, #12]
 8002ac8:	4313      	orrs	r3, r2
 8002aca:	613b      	str	r3, [r7, #16]
        }
        EXTI->IMR = temp;
 8002acc:	4b0f      	ldr	r3, [pc, #60]	; (8002b0c <HAL_GPIO_Init+0x2f8>)
 8002ace:	693a      	ldr	r2, [r7, #16]
 8002ad0:	601a      	str	r2, [r3, #0]
      }
    }
    position++;
 8002ad2:	697b      	ldr	r3, [r7, #20]
 8002ad4:	3301      	adds	r3, #1
 8002ad6:	617b      	str	r3, [r7, #20]
  while (((GPIO_Init->Pin) >> position) != 0)
 8002ad8:	683b      	ldr	r3, [r7, #0]
 8002ada:	681a      	ldr	r2, [r3, #0]
 8002adc:	697b      	ldr	r3, [r7, #20]
 8002ade:	40da      	lsrs	r2, r3
 8002ae0:	1e13      	subs	r3, r2, #0
 8002ae2:	d000      	beq.n	8002ae6 <HAL_GPIO_Init+0x2d2>
 8002ae4:	e6a2      	b.n	800282c <HAL_GPIO_Init+0x18>
  }
}
 8002ae6:	46c0      	nop			; (mov r8, r8)
 8002ae8:	46c0      	nop			; (mov r8, r8)
 8002aea:	46bd      	mov	sp, r7
 8002aec:	b006      	add	sp, #24
 8002aee:	bd80      	pop	{r7, pc}
 8002af0:	40021000 	.word	0x40021000
 8002af4:	40010000 	.word	0x40010000
 8002af8:	50000400 	.word	0x50000400
 8002afc:	50000800 	.word	0x50000800
 8002b00:	50000c00 	.word	0x50000c00
 8002b04:	50001000 	.word	0x50001000
 8002b08:	50001c00 	.word	0x50001c00
 8002b0c:	40010400 	.word	0x40010400

08002b10 <HAL_GPIO_WritePin>:
  *                        GPIO_PIN_RESET: to clear the port pin
  *                        GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 8002b10:	b580      	push	{r7, lr}
 8002b12:	b082      	sub	sp, #8
 8002b14:	af00      	add	r7, sp, #0
 8002b16:	6078      	str	r0, [r7, #4]
 8002b18:	0008      	movs	r0, r1
 8002b1a:	0011      	movs	r1, r2
 8002b1c:	1cbb      	adds	r3, r7, #2
 8002b1e:	1c02      	adds	r2, r0, #0
 8002b20:	801a      	strh	r2, [r3, #0]
 8002b22:	1c7b      	adds	r3, r7, #1
 8002b24:	1c0a      	adds	r2, r1, #0
 8002b26:	701a      	strb	r2, [r3, #0]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN_AVAILABLE(GPIOx, GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
 8002b28:	1c7b      	adds	r3, r7, #1
 8002b2a:	781b      	ldrb	r3, [r3, #0]
 8002b2c:	2b00      	cmp	r3, #0
 8002b2e:	d004      	beq.n	8002b3a <HAL_GPIO_WritePin+0x2a>
  {
    GPIOx->BSRR = GPIO_Pin;
 8002b30:	1cbb      	adds	r3, r7, #2
 8002b32:	881a      	ldrh	r2, [r3, #0]
 8002b34:	687b      	ldr	r3, [r7, #4]
 8002b36:	619a      	str	r2, [r3, #24]
  }
  else
  {
    GPIOx->BRR = GPIO_Pin ;
  }
}
 8002b38:	e003      	b.n	8002b42 <HAL_GPIO_WritePin+0x32>
    GPIOx->BRR = GPIO_Pin ;
 8002b3a:	1cbb      	adds	r3, r7, #2
 8002b3c:	881a      	ldrh	r2, [r3, #0]
 8002b3e:	687b      	ldr	r3, [r7, #4]
 8002b40:	629a      	str	r2, [r3, #40]	; 0x28
}
 8002b42:	46c0      	nop			; (mov r8, r8)
 8002b44:	46bd      	mov	sp, r7
 8002b46:	b002      	add	sp, #8
 8002b48:	bd80      	pop	{r7, pc}
	...

08002b4c <HAL_RCC_OscConfig>:
  *         supported by this macro. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8002b4c:	b5b0      	push	{r4, r5, r7, lr}
 8002b4e:	b08a      	sub	sp, #40	; 0x28
 8002b50:	af00      	add	r7, sp, #0
 8002b52:	6078      	str	r0, [r7, #4]
  uint32_t hsi_state;
  HAL_StatusTypeDef status;
  uint32_t sysclk_source, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8002b54:	687b      	ldr	r3, [r7, #4]
 8002b56:	2b00      	cmp	r3, #0
 8002b58:	d102      	bne.n	8002b60 <HAL_RCC_OscConfig+0x14>
  {
    return HAL_ERROR;
 8002b5a:	2301      	movs	r3, #1
 8002b5c:	f000 fbbf 	bl	80032de <HAL_RCC_OscConfig+0x792>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));

  sysclk_source = __HAL_RCC_GET_SYSCLK_SOURCE();
 8002b60:	4bc9      	ldr	r3, [pc, #804]	; (8002e88 <HAL_RCC_OscConfig+0x33c>)
 8002b62:	68db      	ldr	r3, [r3, #12]
 8002b64:	220c      	movs	r2, #12
 8002b66:	4013      	ands	r3, r2
 8002b68:	61fb      	str	r3, [r7, #28]
  pll_config = __HAL_RCC_GET_PLL_OSCSOURCE();
 8002b6a:	4bc7      	ldr	r3, [pc, #796]	; (8002e88 <HAL_RCC_OscConfig+0x33c>)
 8002b6c:	68da      	ldr	r2, [r3, #12]
 8002b6e:	2380      	movs	r3, #128	; 0x80
 8002b70:	025b      	lsls	r3, r3, #9
 8002b72:	4013      	ands	r3, r2
 8002b74:	61bb      	str	r3, [r7, #24]

  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8002b76:	687b      	ldr	r3, [r7, #4]
 8002b78:	681b      	ldr	r3, [r3, #0]
 8002b7a:	2201      	movs	r2, #1
 8002b7c:	4013      	ands	r3, r2
 8002b7e:	d100      	bne.n	8002b82 <HAL_RCC_OscConfig+0x36>
 8002b80:	e07e      	b.n	8002c80 <HAL_RCC_OscConfig+0x134>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));

    /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowed to be disabled */
    if((sysclk_source == RCC_SYSCLKSOURCE_STATUS_HSE)
 8002b82:	69fb      	ldr	r3, [r7, #28]
 8002b84:	2b08      	cmp	r3, #8
 8002b86:	d007      	beq.n	8002b98 <HAL_RCC_OscConfig+0x4c>
       || ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (pll_config == RCC_PLLSOURCE_HSE)))
 8002b88:	69fb      	ldr	r3, [r7, #28]
 8002b8a:	2b0c      	cmp	r3, #12
 8002b8c:	d112      	bne.n	8002bb4 <HAL_RCC_OscConfig+0x68>
 8002b8e:	69ba      	ldr	r2, [r7, #24]
 8002b90:	2380      	movs	r3, #128	; 0x80
 8002b92:	025b      	lsls	r3, r3, #9
 8002b94:	429a      	cmp	r2, r3
 8002b96:	d10d      	bne.n	8002bb4 <HAL_RCC_OscConfig+0x68>
    {
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8002b98:	4bbb      	ldr	r3, [pc, #748]	; (8002e88 <HAL_RCC_OscConfig+0x33c>)
 8002b9a:	681a      	ldr	r2, [r3, #0]
 8002b9c:	2380      	movs	r3, #128	; 0x80
 8002b9e:	029b      	lsls	r3, r3, #10
 8002ba0:	4013      	ands	r3, r2
 8002ba2:	d100      	bne.n	8002ba6 <HAL_RCC_OscConfig+0x5a>
 8002ba4:	e06b      	b.n	8002c7e <HAL_RCC_OscConfig+0x132>
 8002ba6:	687b      	ldr	r3, [r7, #4]
 8002ba8:	685b      	ldr	r3, [r3, #4]
 8002baa:	2b00      	cmp	r3, #0
 8002bac:	d167      	bne.n	8002c7e <HAL_RCC_OscConfig+0x132>
      {
        return HAL_ERROR;
 8002bae:	2301      	movs	r3, #1
 8002bb0:	f000 fb95 	bl	80032de <HAL_RCC_OscConfig+0x792>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8002bb4:	687b      	ldr	r3, [r7, #4]
 8002bb6:	685a      	ldr	r2, [r3, #4]
 8002bb8:	2380      	movs	r3, #128	; 0x80
 8002bba:	025b      	lsls	r3, r3, #9
 8002bbc:	429a      	cmp	r2, r3
 8002bbe:	d107      	bne.n	8002bd0 <HAL_RCC_OscConfig+0x84>
 8002bc0:	4bb1      	ldr	r3, [pc, #708]	; (8002e88 <HAL_RCC_OscConfig+0x33c>)
 8002bc2:	681a      	ldr	r2, [r3, #0]
 8002bc4:	4bb0      	ldr	r3, [pc, #704]	; (8002e88 <HAL_RCC_OscConfig+0x33c>)
 8002bc6:	2180      	movs	r1, #128	; 0x80
 8002bc8:	0249      	lsls	r1, r1, #9
 8002bca:	430a      	orrs	r2, r1
 8002bcc:	601a      	str	r2, [r3, #0]
 8002bce:	e027      	b.n	8002c20 <HAL_RCC_OscConfig+0xd4>
 8002bd0:	687b      	ldr	r3, [r7, #4]
 8002bd2:	685a      	ldr	r2, [r3, #4]
 8002bd4:	23a0      	movs	r3, #160	; 0xa0
 8002bd6:	02db      	lsls	r3, r3, #11
 8002bd8:	429a      	cmp	r2, r3
 8002bda:	d10e      	bne.n	8002bfa <HAL_RCC_OscConfig+0xae>
 8002bdc:	4baa      	ldr	r3, [pc, #680]	; (8002e88 <HAL_RCC_OscConfig+0x33c>)
 8002bde:	681a      	ldr	r2, [r3, #0]
 8002be0:	4ba9      	ldr	r3, [pc, #676]	; (8002e88 <HAL_RCC_OscConfig+0x33c>)
 8002be2:	2180      	movs	r1, #128	; 0x80
 8002be4:	02c9      	lsls	r1, r1, #11
 8002be6:	430a      	orrs	r2, r1
 8002be8:	601a      	str	r2, [r3, #0]
 8002bea:	4ba7      	ldr	r3, [pc, #668]	; (8002e88 <HAL_RCC_OscConfig+0x33c>)
 8002bec:	681a      	ldr	r2, [r3, #0]
 8002bee:	4ba6      	ldr	r3, [pc, #664]	; (8002e88 <HAL_RCC_OscConfig+0x33c>)
 8002bf0:	2180      	movs	r1, #128	; 0x80
 8002bf2:	0249      	lsls	r1, r1, #9
 8002bf4:	430a      	orrs	r2, r1
 8002bf6:	601a      	str	r2, [r3, #0]
 8002bf8:	e012      	b.n	8002c20 <HAL_RCC_OscConfig+0xd4>
 8002bfa:	4ba3      	ldr	r3, [pc, #652]	; (8002e88 <HAL_RCC_OscConfig+0x33c>)
 8002bfc:	681a      	ldr	r2, [r3, #0]
 8002bfe:	4ba2      	ldr	r3, [pc, #648]	; (8002e88 <HAL_RCC_OscConfig+0x33c>)
 8002c00:	49a2      	ldr	r1, [pc, #648]	; (8002e8c <HAL_RCC_OscConfig+0x340>)
 8002c02:	400a      	ands	r2, r1
 8002c04:	601a      	str	r2, [r3, #0]
 8002c06:	4ba0      	ldr	r3, [pc, #640]	; (8002e88 <HAL_RCC_OscConfig+0x33c>)
 8002c08:	681a      	ldr	r2, [r3, #0]
 8002c0a:	2380      	movs	r3, #128	; 0x80
 8002c0c:	025b      	lsls	r3, r3, #9
 8002c0e:	4013      	ands	r3, r2
 8002c10:	60fb      	str	r3, [r7, #12]
 8002c12:	68fb      	ldr	r3, [r7, #12]
 8002c14:	4b9c      	ldr	r3, [pc, #624]	; (8002e88 <HAL_RCC_OscConfig+0x33c>)
 8002c16:	681a      	ldr	r2, [r3, #0]
 8002c18:	4b9b      	ldr	r3, [pc, #620]	; (8002e88 <HAL_RCC_OscConfig+0x33c>)
 8002c1a:	499d      	ldr	r1, [pc, #628]	; (8002e90 <HAL_RCC_OscConfig+0x344>)
 8002c1c:	400a      	ands	r2, r1
 8002c1e:	601a      	str	r2, [r3, #0]

      /* Check the HSE State */
      if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 8002c20:	687b      	ldr	r3, [r7, #4]
 8002c22:	685b      	ldr	r3, [r3, #4]
 8002c24:	2b00      	cmp	r3, #0
 8002c26:	d015      	beq.n	8002c54 <HAL_RCC_OscConfig+0x108>
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8002c28:	f7ff fd36 	bl	8002698 <HAL_GetTick>
 8002c2c:	0003      	movs	r3, r0
 8002c2e:	617b      	str	r3, [r7, #20]

        /* Wait till HSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 8002c30:	e009      	b.n	8002c46 <HAL_RCC_OscConfig+0xfa>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8002c32:	f7ff fd31 	bl	8002698 <HAL_GetTick>
 8002c36:	0002      	movs	r2, r0
 8002c38:	697b      	ldr	r3, [r7, #20]
 8002c3a:	1ad3      	subs	r3, r2, r3
 8002c3c:	2b64      	cmp	r3, #100	; 0x64
 8002c3e:	d902      	bls.n	8002c46 <HAL_RCC_OscConfig+0xfa>
          {
            return HAL_TIMEOUT;
 8002c40:	2303      	movs	r3, #3
 8002c42:	f000 fb4c 	bl	80032de <HAL_RCC_OscConfig+0x792>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 8002c46:	4b90      	ldr	r3, [pc, #576]	; (8002e88 <HAL_RCC_OscConfig+0x33c>)
 8002c48:	681a      	ldr	r2, [r3, #0]
 8002c4a:	2380      	movs	r3, #128	; 0x80
 8002c4c:	029b      	lsls	r3, r3, #10
 8002c4e:	4013      	ands	r3, r2
 8002c50:	d0ef      	beq.n	8002c32 <HAL_RCC_OscConfig+0xe6>
 8002c52:	e015      	b.n	8002c80 <HAL_RCC_OscConfig+0x134>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8002c54:	f7ff fd20 	bl	8002698 <HAL_GetTick>
 8002c58:	0003      	movs	r3, r0
 8002c5a:	617b      	str	r3, [r7, #20]

        /* Wait till HSE is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
 8002c5c:	e008      	b.n	8002c70 <HAL_RCC_OscConfig+0x124>
        {
           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8002c5e:	f7ff fd1b 	bl	8002698 <HAL_GetTick>
 8002c62:	0002      	movs	r2, r0
 8002c64:	697b      	ldr	r3, [r7, #20]
 8002c66:	1ad3      	subs	r3, r2, r3
 8002c68:	2b64      	cmp	r3, #100	; 0x64
 8002c6a:	d901      	bls.n	8002c70 <HAL_RCC_OscConfig+0x124>
          {
            return HAL_TIMEOUT;
 8002c6c:	2303      	movs	r3, #3
 8002c6e:	e336      	b.n	80032de <HAL_RCC_OscConfig+0x792>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
 8002c70:	4b85      	ldr	r3, [pc, #532]	; (8002e88 <HAL_RCC_OscConfig+0x33c>)
 8002c72:	681a      	ldr	r2, [r3, #0]
 8002c74:	2380      	movs	r3, #128	; 0x80
 8002c76:	029b      	lsls	r3, r3, #10
 8002c78:	4013      	ands	r3, r2
 8002c7a:	d1f0      	bne.n	8002c5e <HAL_RCC_OscConfig+0x112>
 8002c7c:	e000      	b.n	8002c80 <HAL_RCC_OscConfig+0x134>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8002c7e:	46c0      	nop			; (mov r8, r8)
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8002c80:	687b      	ldr	r3, [r7, #4]
 8002c82:	681b      	ldr	r3, [r3, #0]
 8002c84:	2202      	movs	r2, #2
 8002c86:	4013      	ands	r3, r2
 8002c88:	d100      	bne.n	8002c8c <HAL_RCC_OscConfig+0x140>
 8002c8a:	e099      	b.n	8002dc0 <HAL_RCC_OscConfig+0x274>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    hsi_state = RCC_OscInitStruct->HSIState;
 8002c8c:	687b      	ldr	r3, [r7, #4]
 8002c8e:	68db      	ldr	r3, [r3, #12]
 8002c90:	627b      	str	r3, [r7, #36]	; 0x24

#if defined(RCC_CR_HSIOUTEN)
    if((hsi_state & RCC_HSI_OUTEN) != 0U)
 8002c92:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002c94:	2220      	movs	r2, #32
 8002c96:	4013      	ands	r3, r2
 8002c98:	d009      	beq.n	8002cae <HAL_RCC_OscConfig+0x162>
    {
      /* HSI Output enable for timer requested */
      SET_BIT(RCC->CR, RCC_CR_HSIOUTEN);
 8002c9a:	4b7b      	ldr	r3, [pc, #492]	; (8002e88 <HAL_RCC_OscConfig+0x33c>)
 8002c9c:	681a      	ldr	r2, [r3, #0]
 8002c9e:	4b7a      	ldr	r3, [pc, #488]	; (8002e88 <HAL_RCC_OscConfig+0x33c>)
 8002ca0:	2120      	movs	r1, #32
 8002ca2:	430a      	orrs	r2, r1
 8002ca4:	601a      	str	r2, [r3, #0]

      hsi_state &= ~RCC_CR_HSIOUTEN;
 8002ca6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002ca8:	2220      	movs	r2, #32
 8002caa:	4393      	bics	r3, r2
 8002cac:	627b      	str	r3, [r7, #36]	; 0x24
    }
#endif

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((sysclk_source == RCC_SYSCLKSOURCE_STATUS_HSI)
 8002cae:	69fb      	ldr	r3, [r7, #28]
 8002cb0:	2b04      	cmp	r3, #4
 8002cb2:	d005      	beq.n	8002cc0 <HAL_RCC_OscConfig+0x174>
       || ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (pll_config == RCC_PLLSOURCE_HSI)))
 8002cb4:	69fb      	ldr	r3, [r7, #28]
 8002cb6:	2b0c      	cmp	r3, #12
 8002cb8:	d13e      	bne.n	8002d38 <HAL_RCC_OscConfig+0x1ec>
 8002cba:	69bb      	ldr	r3, [r7, #24]
 8002cbc:	2b00      	cmp	r3, #0
 8002cbe:	d13b      	bne.n	8002d38 <HAL_RCC_OscConfig+0x1ec>
    {
      /* When HSI is used as system clock it will not disabled */
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (hsi_state == RCC_HSI_OFF))
 8002cc0:	4b71      	ldr	r3, [pc, #452]	; (8002e88 <HAL_RCC_OscConfig+0x33c>)
 8002cc2:	681b      	ldr	r3, [r3, #0]
 8002cc4:	2204      	movs	r2, #4
 8002cc6:	4013      	ands	r3, r2
 8002cc8:	d004      	beq.n	8002cd4 <HAL_RCC_OscConfig+0x188>
 8002cca:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002ccc:	2b00      	cmp	r3, #0
 8002cce:	d101      	bne.n	8002cd4 <HAL_RCC_OscConfig+0x188>
      {
        return HAL_ERROR;
 8002cd0:	2301      	movs	r3, #1
 8002cd2:	e304      	b.n	80032de <HAL_RCC_OscConfig+0x792>
      }
      /* Otherwise, just the calibration and HSI or HSIdiv4 are allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8002cd4:	4b6c      	ldr	r3, [pc, #432]	; (8002e88 <HAL_RCC_OscConfig+0x33c>)
 8002cd6:	685b      	ldr	r3, [r3, #4]
 8002cd8:	4a6e      	ldr	r2, [pc, #440]	; (8002e94 <HAL_RCC_OscConfig+0x348>)
 8002cda:	4013      	ands	r3, r2
 8002cdc:	0019      	movs	r1, r3
 8002cde:	687b      	ldr	r3, [r7, #4]
 8002ce0:	691b      	ldr	r3, [r3, #16]
 8002ce2:	021a      	lsls	r2, r3, #8
 8002ce4:	4b68      	ldr	r3, [pc, #416]	; (8002e88 <HAL_RCC_OscConfig+0x33c>)
 8002ce6:	430a      	orrs	r2, r1
 8002ce8:	605a      	str	r2, [r3, #4]

        /* Enable the Internal High Speed oscillator (HSI or HSIdiv4) */
        __HAL_RCC_HSI_CONFIG(hsi_state);
 8002cea:	4b67      	ldr	r3, [pc, #412]	; (8002e88 <HAL_RCC_OscConfig+0x33c>)
 8002cec:	681b      	ldr	r3, [r3, #0]
 8002cee:	2209      	movs	r2, #9
 8002cf0:	4393      	bics	r3, r2
 8002cf2:	0019      	movs	r1, r3
 8002cf4:	4b64      	ldr	r3, [pc, #400]	; (8002e88 <HAL_RCC_OscConfig+0x33c>)
 8002cf6:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8002cf8:	430a      	orrs	r2, r1
 8002cfa:	601a      	str	r2, [r3, #0]
      }

      /* Update the SystemCoreClock global variable */
      SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 8002cfc:	f000 fc42 	bl	8003584 <HAL_RCC_GetSysClockFreq>
 8002d00:	0001      	movs	r1, r0
 8002d02:	4b61      	ldr	r3, [pc, #388]	; (8002e88 <HAL_RCC_OscConfig+0x33c>)
 8002d04:	68db      	ldr	r3, [r3, #12]
 8002d06:	091b      	lsrs	r3, r3, #4
 8002d08:	220f      	movs	r2, #15
 8002d0a:	4013      	ands	r3, r2
 8002d0c:	4a62      	ldr	r2, [pc, #392]	; (8002e98 <HAL_RCC_OscConfig+0x34c>)
 8002d0e:	5cd3      	ldrb	r3, [r2, r3]
 8002d10:	000a      	movs	r2, r1
 8002d12:	40da      	lsrs	r2, r3
 8002d14:	4b61      	ldr	r3, [pc, #388]	; (8002e9c <HAL_RCC_OscConfig+0x350>)
 8002d16:	601a      	str	r2, [r3, #0]

      /* Configure the source of time base considering new system clocks settings*/
      status = HAL_InitTick (uwTickPrio);
 8002d18:	4b61      	ldr	r3, [pc, #388]	; (8002ea0 <HAL_RCC_OscConfig+0x354>)
 8002d1a:	681b      	ldr	r3, [r3, #0]
 8002d1c:	2513      	movs	r5, #19
 8002d1e:	197c      	adds	r4, r7, r5
 8002d20:	0018      	movs	r0, r3
 8002d22:	f7ff fc73 	bl	800260c <HAL_InitTick>
 8002d26:	0003      	movs	r3, r0
 8002d28:	7023      	strb	r3, [r4, #0]
      if(status != HAL_OK)
 8002d2a:	197b      	adds	r3, r7, r5
 8002d2c:	781b      	ldrb	r3, [r3, #0]
 8002d2e:	2b00      	cmp	r3, #0
 8002d30:	d046      	beq.n	8002dc0 <HAL_RCC_OscConfig+0x274>
      {
        return status;
 8002d32:	197b      	adds	r3, r7, r5
 8002d34:	781b      	ldrb	r3, [r3, #0]
 8002d36:	e2d2      	b.n	80032de <HAL_RCC_OscConfig+0x792>
      }
    }
    else
    {
      /* Check the HSI State */
      if(hsi_state != RCC_HSI_OFF)
 8002d38:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002d3a:	2b00      	cmp	r3, #0
 8002d3c:	d027      	beq.n	8002d8e <HAL_RCC_OscConfig+0x242>
      {
        /* Enable the Internal High Speed oscillator (HSI or HSIdiv4) */
        __HAL_RCC_HSI_CONFIG(hsi_state);
 8002d3e:	4b52      	ldr	r3, [pc, #328]	; (8002e88 <HAL_RCC_OscConfig+0x33c>)
 8002d40:	681b      	ldr	r3, [r3, #0]
 8002d42:	2209      	movs	r2, #9
 8002d44:	4393      	bics	r3, r2
 8002d46:	0019      	movs	r1, r3
 8002d48:	4b4f      	ldr	r3, [pc, #316]	; (8002e88 <HAL_RCC_OscConfig+0x33c>)
 8002d4a:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8002d4c:	430a      	orrs	r2, r1
 8002d4e:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8002d50:	f7ff fca2 	bl	8002698 <HAL_GetTick>
 8002d54:	0003      	movs	r3, r0
 8002d56:	617b      	str	r3, [r7, #20]

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 8002d58:	e008      	b.n	8002d6c <HAL_RCC_OscConfig+0x220>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8002d5a:	f7ff fc9d 	bl	8002698 <HAL_GetTick>
 8002d5e:	0002      	movs	r2, r0
 8002d60:	697b      	ldr	r3, [r7, #20]
 8002d62:	1ad3      	subs	r3, r2, r3
 8002d64:	2b02      	cmp	r3, #2
 8002d66:	d901      	bls.n	8002d6c <HAL_RCC_OscConfig+0x220>
          {
            return HAL_TIMEOUT;
 8002d68:	2303      	movs	r3, #3
 8002d6a:	e2b8      	b.n	80032de <HAL_RCC_OscConfig+0x792>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 8002d6c:	4b46      	ldr	r3, [pc, #280]	; (8002e88 <HAL_RCC_OscConfig+0x33c>)
 8002d6e:	681b      	ldr	r3, [r3, #0]
 8002d70:	2204      	movs	r2, #4
 8002d72:	4013      	ands	r3, r2
 8002d74:	d0f1      	beq.n	8002d5a <HAL_RCC_OscConfig+0x20e>
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8002d76:	4b44      	ldr	r3, [pc, #272]	; (8002e88 <HAL_RCC_OscConfig+0x33c>)
 8002d78:	685b      	ldr	r3, [r3, #4]
 8002d7a:	4a46      	ldr	r2, [pc, #280]	; (8002e94 <HAL_RCC_OscConfig+0x348>)
 8002d7c:	4013      	ands	r3, r2
 8002d7e:	0019      	movs	r1, r3
 8002d80:	687b      	ldr	r3, [r7, #4]
 8002d82:	691b      	ldr	r3, [r3, #16]
 8002d84:	021a      	lsls	r2, r3, #8
 8002d86:	4b40      	ldr	r3, [pc, #256]	; (8002e88 <HAL_RCC_OscConfig+0x33c>)
 8002d88:	430a      	orrs	r2, r1
 8002d8a:	605a      	str	r2, [r3, #4]
 8002d8c:	e018      	b.n	8002dc0 <HAL_RCC_OscConfig+0x274>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 8002d8e:	4b3e      	ldr	r3, [pc, #248]	; (8002e88 <HAL_RCC_OscConfig+0x33c>)
 8002d90:	681a      	ldr	r2, [r3, #0]
 8002d92:	4b3d      	ldr	r3, [pc, #244]	; (8002e88 <HAL_RCC_OscConfig+0x33c>)
 8002d94:	2101      	movs	r1, #1
 8002d96:	438a      	bics	r2, r1
 8002d98:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8002d9a:	f7ff fc7d 	bl	8002698 <HAL_GetTick>
 8002d9e:	0003      	movs	r3, r0
 8002da0:	617b      	str	r3, [r7, #20]

        /* Wait till HSI is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
 8002da2:	e008      	b.n	8002db6 <HAL_RCC_OscConfig+0x26a>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8002da4:	f7ff fc78 	bl	8002698 <HAL_GetTick>
 8002da8:	0002      	movs	r2, r0
 8002daa:	697b      	ldr	r3, [r7, #20]
 8002dac:	1ad3      	subs	r3, r2, r3
 8002dae:	2b02      	cmp	r3, #2
 8002db0:	d901      	bls.n	8002db6 <HAL_RCC_OscConfig+0x26a>
          {
            return HAL_TIMEOUT;
 8002db2:	2303      	movs	r3, #3
 8002db4:	e293      	b.n	80032de <HAL_RCC_OscConfig+0x792>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
 8002db6:	4b34      	ldr	r3, [pc, #208]	; (8002e88 <HAL_RCC_OscConfig+0x33c>)
 8002db8:	681b      	ldr	r3, [r3, #0]
 8002dba:	2204      	movs	r2, #4
 8002dbc:	4013      	ands	r3, r2
 8002dbe:	d1f1      	bne.n	8002da4 <HAL_RCC_OscConfig+0x258>
        }
      }
    }
  }
  /*----------------------------- MSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_MSI) == RCC_OSCILLATORTYPE_MSI)
 8002dc0:	687b      	ldr	r3, [r7, #4]
 8002dc2:	681b      	ldr	r3, [r3, #0]
 8002dc4:	2210      	movs	r2, #16
 8002dc6:	4013      	ands	r3, r2
 8002dc8:	d100      	bne.n	8002dcc <HAL_RCC_OscConfig+0x280>
 8002dca:	e0a2      	b.n	8002f12 <HAL_RCC_OscConfig+0x3c6>
  {
    /* When the MSI is used as system clock it will not be disabled */
    if(sysclk_source == RCC_CFGR_SWS_MSI)
 8002dcc:	69fb      	ldr	r3, [r7, #28]
 8002dce:	2b00      	cmp	r3, #0
 8002dd0:	d140      	bne.n	8002e54 <HAL_RCC_OscConfig+0x308>
    {
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_MSIRDY) != 0U) && (RCC_OscInitStruct->MSIState == RCC_MSI_OFF))
 8002dd2:	4b2d      	ldr	r3, [pc, #180]	; (8002e88 <HAL_RCC_OscConfig+0x33c>)
 8002dd4:	681a      	ldr	r2, [r3, #0]
 8002dd6:	2380      	movs	r3, #128	; 0x80
 8002dd8:	009b      	lsls	r3, r3, #2
 8002dda:	4013      	ands	r3, r2
 8002ddc:	d005      	beq.n	8002dea <HAL_RCC_OscConfig+0x29e>
 8002dde:	687b      	ldr	r3, [r7, #4]
 8002de0:	69db      	ldr	r3, [r3, #28]
 8002de2:	2b00      	cmp	r3, #0
 8002de4:	d101      	bne.n	8002dea <HAL_RCC_OscConfig+0x29e>
      {
        return HAL_ERROR;
 8002de6:	2301      	movs	r3, #1
 8002de8:	e279      	b.n	80032de <HAL_RCC_OscConfig+0x792>
        /* Check MSICalibrationValue and MSIClockRange input parameters */
        assert_param(IS_RCC_MSICALIBRATION_VALUE(RCC_OscInitStruct->MSICalibrationValue));
        assert_param(IS_RCC_MSI_CLOCK_RANGE(RCC_OscInitStruct->MSIClockRange));

        /* Selects the Multiple Speed oscillator (MSI) clock range .*/
        __HAL_RCC_MSI_RANGE_CONFIG(RCC_OscInitStruct->MSIClockRange);
 8002dea:	4b27      	ldr	r3, [pc, #156]	; (8002e88 <HAL_RCC_OscConfig+0x33c>)
 8002dec:	685b      	ldr	r3, [r3, #4]
 8002dee:	4a2d      	ldr	r2, [pc, #180]	; (8002ea4 <HAL_RCC_OscConfig+0x358>)
 8002df0:	4013      	ands	r3, r2
 8002df2:	0019      	movs	r1, r3
 8002df4:	687b      	ldr	r3, [r7, #4]
 8002df6:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8002df8:	4b23      	ldr	r3, [pc, #140]	; (8002e88 <HAL_RCC_OscConfig+0x33c>)
 8002dfa:	430a      	orrs	r2, r1
 8002dfc:	605a      	str	r2, [r3, #4]
        /* Adjusts the Multiple Speed oscillator (MSI) calibration value.*/
        __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->MSICalibrationValue);
 8002dfe:	4b22      	ldr	r3, [pc, #136]	; (8002e88 <HAL_RCC_OscConfig+0x33c>)
 8002e00:	685b      	ldr	r3, [r3, #4]
 8002e02:	021b      	lsls	r3, r3, #8
 8002e04:	0a19      	lsrs	r1, r3, #8
 8002e06:	687b      	ldr	r3, [r7, #4]
 8002e08:	6a1b      	ldr	r3, [r3, #32]
 8002e0a:	061a      	lsls	r2, r3, #24
 8002e0c:	4b1e      	ldr	r3, [pc, #120]	; (8002e88 <HAL_RCC_OscConfig+0x33c>)
 8002e0e:	430a      	orrs	r2, r1
 8002e10:	605a      	str	r2, [r3, #4]


        /* Update the SystemCoreClock global variable */
        SystemCoreClock =  (32768U * (1UL << ((RCC_OscInitStruct->MSIClockRange >> RCC_ICSCR_MSIRANGE_Pos) + 1U)))
 8002e12:	687b      	ldr	r3, [r7, #4]
 8002e14:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002e16:	0b5b      	lsrs	r3, r3, #13
 8002e18:	3301      	adds	r3, #1
 8002e1a:	2280      	movs	r2, #128	; 0x80
 8002e1c:	0212      	lsls	r2, r2, #8
 8002e1e:	409a      	lsls	r2, r3
                           >> AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos)];
 8002e20:	4b19      	ldr	r3, [pc, #100]	; (8002e88 <HAL_RCC_OscConfig+0x33c>)
 8002e22:	68db      	ldr	r3, [r3, #12]
 8002e24:	091b      	lsrs	r3, r3, #4
 8002e26:	210f      	movs	r1, #15
 8002e28:	400b      	ands	r3, r1
 8002e2a:	491b      	ldr	r1, [pc, #108]	; (8002e98 <HAL_RCC_OscConfig+0x34c>)
 8002e2c:	5ccb      	ldrb	r3, [r1, r3]
 8002e2e:	40da      	lsrs	r2, r3
        SystemCoreClock =  (32768U * (1UL << ((RCC_OscInitStruct->MSIClockRange >> RCC_ICSCR_MSIRANGE_Pos) + 1U)))
 8002e30:	4b1a      	ldr	r3, [pc, #104]	; (8002e9c <HAL_RCC_OscConfig+0x350>)
 8002e32:	601a      	str	r2, [r3, #0]

        /* Configure the source of time base considering new system clocks settings*/
        status = HAL_InitTick (uwTickPrio);
 8002e34:	4b1a      	ldr	r3, [pc, #104]	; (8002ea0 <HAL_RCC_OscConfig+0x354>)
 8002e36:	681b      	ldr	r3, [r3, #0]
 8002e38:	2513      	movs	r5, #19
 8002e3a:	197c      	adds	r4, r7, r5
 8002e3c:	0018      	movs	r0, r3
 8002e3e:	f7ff fbe5 	bl	800260c <HAL_InitTick>
 8002e42:	0003      	movs	r3, r0
 8002e44:	7023      	strb	r3, [r4, #0]
        if(status != HAL_OK)
 8002e46:	197b      	adds	r3, r7, r5
 8002e48:	781b      	ldrb	r3, [r3, #0]
 8002e4a:	2b00      	cmp	r3, #0
 8002e4c:	d061      	beq.n	8002f12 <HAL_RCC_OscConfig+0x3c6>
        {
          return status;
 8002e4e:	197b      	adds	r3, r7, r5
 8002e50:	781b      	ldrb	r3, [r3, #0]
 8002e52:	e244      	b.n	80032de <HAL_RCC_OscConfig+0x792>
    {
      /* Check MSI State */
      assert_param(IS_RCC_MSI(RCC_OscInitStruct->MSIState));

      /* Check the MSI State */
      if(RCC_OscInitStruct->MSIState != RCC_MSI_OFF)
 8002e54:	687b      	ldr	r3, [r7, #4]
 8002e56:	69db      	ldr	r3, [r3, #28]
 8002e58:	2b00      	cmp	r3, #0
 8002e5a:	d040      	beq.n	8002ede <HAL_RCC_OscConfig+0x392>
      {
        /* Enable the Multi Speed oscillator (MSI). */
        __HAL_RCC_MSI_ENABLE();
 8002e5c:	4b0a      	ldr	r3, [pc, #40]	; (8002e88 <HAL_RCC_OscConfig+0x33c>)
 8002e5e:	681a      	ldr	r2, [r3, #0]
 8002e60:	4b09      	ldr	r3, [pc, #36]	; (8002e88 <HAL_RCC_OscConfig+0x33c>)
 8002e62:	2180      	movs	r1, #128	; 0x80
 8002e64:	0049      	lsls	r1, r1, #1
 8002e66:	430a      	orrs	r2, r1
 8002e68:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8002e6a:	f7ff fc15 	bl	8002698 <HAL_GetTick>
 8002e6e:	0003      	movs	r3, r0
 8002e70:	617b      	str	r3, [r7, #20]

        /* Wait till MSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_MSIRDY) == 0U)
 8002e72:	e019      	b.n	8002ea8 <HAL_RCC_OscConfig+0x35c>
        {
          if((HAL_GetTick() - tickstart) > MSI_TIMEOUT_VALUE)
 8002e74:	f7ff fc10 	bl	8002698 <HAL_GetTick>
 8002e78:	0002      	movs	r2, r0
 8002e7a:	697b      	ldr	r3, [r7, #20]
 8002e7c:	1ad3      	subs	r3, r2, r3
 8002e7e:	2b02      	cmp	r3, #2
 8002e80:	d912      	bls.n	8002ea8 <HAL_RCC_OscConfig+0x35c>
          {
            return HAL_TIMEOUT;
 8002e82:	2303      	movs	r3, #3
 8002e84:	e22b      	b.n	80032de <HAL_RCC_OscConfig+0x792>
 8002e86:	46c0      	nop			; (mov r8, r8)
 8002e88:	40021000 	.word	0x40021000
 8002e8c:	fffeffff 	.word	0xfffeffff
 8002e90:	fffbffff 	.word	0xfffbffff
 8002e94:	ffffe0ff 	.word	0xffffe0ff
 8002e98:	08003780 	.word	0x08003780
 8002e9c:	20000000 	.word	0x20000000
 8002ea0:	20000004 	.word	0x20000004
 8002ea4:	ffff1fff 	.word	0xffff1fff
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_MSIRDY) == 0U)
 8002ea8:	4bca      	ldr	r3, [pc, #808]	; (80031d4 <HAL_RCC_OscConfig+0x688>)
 8002eaa:	681a      	ldr	r2, [r3, #0]
 8002eac:	2380      	movs	r3, #128	; 0x80
 8002eae:	009b      	lsls	r3, r3, #2
 8002eb0:	4013      	ands	r3, r2
 8002eb2:	d0df      	beq.n	8002e74 <HAL_RCC_OscConfig+0x328>
        /* Check MSICalibrationValue and MSIClockRange input parameters */
        assert_param(IS_RCC_MSICALIBRATION_VALUE(RCC_OscInitStruct->MSICalibrationValue));
        assert_param(IS_RCC_MSI_CLOCK_RANGE(RCC_OscInitStruct->MSIClockRange));

        /* Selects the Multiple Speed oscillator (MSI) clock range .*/
        __HAL_RCC_MSI_RANGE_CONFIG(RCC_OscInitStruct->MSIClockRange);
 8002eb4:	4bc7      	ldr	r3, [pc, #796]	; (80031d4 <HAL_RCC_OscConfig+0x688>)
 8002eb6:	685b      	ldr	r3, [r3, #4]
 8002eb8:	4ac7      	ldr	r2, [pc, #796]	; (80031d8 <HAL_RCC_OscConfig+0x68c>)
 8002eba:	4013      	ands	r3, r2
 8002ebc:	0019      	movs	r1, r3
 8002ebe:	687b      	ldr	r3, [r7, #4]
 8002ec0:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8002ec2:	4bc4      	ldr	r3, [pc, #784]	; (80031d4 <HAL_RCC_OscConfig+0x688>)
 8002ec4:	430a      	orrs	r2, r1
 8002ec6:	605a      	str	r2, [r3, #4]
         /* Adjusts the Multiple Speed oscillator (MSI) calibration value.*/
        __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->MSICalibrationValue);
 8002ec8:	4bc2      	ldr	r3, [pc, #776]	; (80031d4 <HAL_RCC_OscConfig+0x688>)
 8002eca:	685b      	ldr	r3, [r3, #4]
 8002ecc:	021b      	lsls	r3, r3, #8
 8002ece:	0a19      	lsrs	r1, r3, #8
 8002ed0:	687b      	ldr	r3, [r7, #4]
 8002ed2:	6a1b      	ldr	r3, [r3, #32]
 8002ed4:	061a      	lsls	r2, r3, #24
 8002ed6:	4bbf      	ldr	r3, [pc, #764]	; (80031d4 <HAL_RCC_OscConfig+0x688>)
 8002ed8:	430a      	orrs	r2, r1
 8002eda:	605a      	str	r2, [r3, #4]
 8002edc:	e019      	b.n	8002f12 <HAL_RCC_OscConfig+0x3c6>
      }
      else
      {
        /* Disable the Multi Speed oscillator (MSI). */
        __HAL_RCC_MSI_DISABLE();
 8002ede:	4bbd      	ldr	r3, [pc, #756]	; (80031d4 <HAL_RCC_OscConfig+0x688>)
 8002ee0:	681a      	ldr	r2, [r3, #0]
 8002ee2:	4bbc      	ldr	r3, [pc, #752]	; (80031d4 <HAL_RCC_OscConfig+0x688>)
 8002ee4:	49bd      	ldr	r1, [pc, #756]	; (80031dc <HAL_RCC_OscConfig+0x690>)
 8002ee6:	400a      	ands	r2, r1
 8002ee8:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8002eea:	f7ff fbd5 	bl	8002698 <HAL_GetTick>
 8002eee:	0003      	movs	r3, r0
 8002ef0:	617b      	str	r3, [r7, #20]

        /* Wait till MSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_MSIRDY) != 0U)
 8002ef2:	e008      	b.n	8002f06 <HAL_RCC_OscConfig+0x3ba>
        {
          if((HAL_GetTick() - tickstart) > MSI_TIMEOUT_VALUE)
 8002ef4:	f7ff fbd0 	bl	8002698 <HAL_GetTick>
 8002ef8:	0002      	movs	r2, r0
 8002efa:	697b      	ldr	r3, [r7, #20]
 8002efc:	1ad3      	subs	r3, r2, r3
 8002efe:	2b02      	cmp	r3, #2
 8002f00:	d901      	bls.n	8002f06 <HAL_RCC_OscConfig+0x3ba>
          {
            return HAL_TIMEOUT;
 8002f02:	2303      	movs	r3, #3
 8002f04:	e1eb      	b.n	80032de <HAL_RCC_OscConfig+0x792>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_MSIRDY) != 0U)
 8002f06:	4bb3      	ldr	r3, [pc, #716]	; (80031d4 <HAL_RCC_OscConfig+0x688>)
 8002f08:	681a      	ldr	r2, [r3, #0]
 8002f0a:	2380      	movs	r3, #128	; 0x80
 8002f0c:	009b      	lsls	r3, r3, #2
 8002f0e:	4013      	ands	r3, r2
 8002f10:	d1f0      	bne.n	8002ef4 <HAL_RCC_OscConfig+0x3a8>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8002f12:	687b      	ldr	r3, [r7, #4]
 8002f14:	681b      	ldr	r3, [r3, #0]
 8002f16:	2208      	movs	r2, #8
 8002f18:	4013      	ands	r3, r2
 8002f1a:	d036      	beq.n	8002f8a <HAL_RCC_OscConfig+0x43e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 8002f1c:	687b      	ldr	r3, [r7, #4]
 8002f1e:	695b      	ldr	r3, [r3, #20]
 8002f20:	2b00      	cmp	r3, #0
 8002f22:	d019      	beq.n	8002f58 <HAL_RCC_OscConfig+0x40c>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 8002f24:	4bab      	ldr	r3, [pc, #684]	; (80031d4 <HAL_RCC_OscConfig+0x688>)
 8002f26:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8002f28:	4baa      	ldr	r3, [pc, #680]	; (80031d4 <HAL_RCC_OscConfig+0x688>)
 8002f2a:	2101      	movs	r1, #1
 8002f2c:	430a      	orrs	r2, r1
 8002f2e:	651a      	str	r2, [r3, #80]	; 0x50

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8002f30:	f7ff fbb2 	bl	8002698 <HAL_GetTick>
 8002f34:	0003      	movs	r3, r0
 8002f36:	617b      	str	r3, [r7, #20]

      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
 8002f38:	e008      	b.n	8002f4c <HAL_RCC_OscConfig+0x400>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8002f3a:	f7ff fbad 	bl	8002698 <HAL_GetTick>
 8002f3e:	0002      	movs	r2, r0
 8002f40:	697b      	ldr	r3, [r7, #20]
 8002f42:	1ad3      	subs	r3, r2, r3
 8002f44:	2b02      	cmp	r3, #2
 8002f46:	d901      	bls.n	8002f4c <HAL_RCC_OscConfig+0x400>
        {
          return HAL_TIMEOUT;
 8002f48:	2303      	movs	r3, #3
 8002f4a:	e1c8      	b.n	80032de <HAL_RCC_OscConfig+0x792>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
 8002f4c:	4ba1      	ldr	r3, [pc, #644]	; (80031d4 <HAL_RCC_OscConfig+0x688>)
 8002f4e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8002f50:	2202      	movs	r2, #2
 8002f52:	4013      	ands	r3, r2
 8002f54:	d0f1      	beq.n	8002f3a <HAL_RCC_OscConfig+0x3ee>
 8002f56:	e018      	b.n	8002f8a <HAL_RCC_OscConfig+0x43e>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 8002f58:	4b9e      	ldr	r3, [pc, #632]	; (80031d4 <HAL_RCC_OscConfig+0x688>)
 8002f5a:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8002f5c:	4b9d      	ldr	r3, [pc, #628]	; (80031d4 <HAL_RCC_OscConfig+0x688>)
 8002f5e:	2101      	movs	r1, #1
 8002f60:	438a      	bics	r2, r1
 8002f62:	651a      	str	r2, [r3, #80]	; 0x50

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8002f64:	f7ff fb98 	bl	8002698 <HAL_GetTick>
 8002f68:	0003      	movs	r3, r0
 8002f6a:	617b      	str	r3, [r7, #20]

      /* Wait till LSI is disabled */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
 8002f6c:	e008      	b.n	8002f80 <HAL_RCC_OscConfig+0x434>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8002f6e:	f7ff fb93 	bl	8002698 <HAL_GetTick>
 8002f72:	0002      	movs	r2, r0
 8002f74:	697b      	ldr	r3, [r7, #20]
 8002f76:	1ad3      	subs	r3, r2, r3
 8002f78:	2b02      	cmp	r3, #2
 8002f7a:	d901      	bls.n	8002f80 <HAL_RCC_OscConfig+0x434>
        {
          return HAL_TIMEOUT;
 8002f7c:	2303      	movs	r3, #3
 8002f7e:	e1ae      	b.n	80032de <HAL_RCC_OscConfig+0x792>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
 8002f80:	4b94      	ldr	r3, [pc, #592]	; (80031d4 <HAL_RCC_OscConfig+0x688>)
 8002f82:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8002f84:	2202      	movs	r2, #2
 8002f86:	4013      	ands	r3, r2
 8002f88:	d1f1      	bne.n	8002f6e <HAL_RCC_OscConfig+0x422>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8002f8a:	687b      	ldr	r3, [r7, #4]
 8002f8c:	681b      	ldr	r3, [r3, #0]
 8002f8e:	2204      	movs	r2, #4
 8002f90:	4013      	ands	r3, r2
 8002f92:	d100      	bne.n	8002f96 <HAL_RCC_OscConfig+0x44a>
 8002f94:	e0ae      	b.n	80030f4 <HAL_RCC_OscConfig+0x5a8>
  {
    FlagStatus       pwrclkchanged = RESET;
 8002f96:	2023      	movs	r0, #35	; 0x23
 8002f98:	183b      	adds	r3, r7, r0
 8002f9a:	2200      	movs	r2, #0
 8002f9c:	701a      	strb	r2, [r3, #0]
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8002f9e:	4b8d      	ldr	r3, [pc, #564]	; (80031d4 <HAL_RCC_OscConfig+0x688>)
 8002fa0:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8002fa2:	2380      	movs	r3, #128	; 0x80
 8002fa4:	055b      	lsls	r3, r3, #21
 8002fa6:	4013      	ands	r3, r2
 8002fa8:	d109      	bne.n	8002fbe <HAL_RCC_OscConfig+0x472>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 8002faa:	4b8a      	ldr	r3, [pc, #552]	; (80031d4 <HAL_RCC_OscConfig+0x688>)
 8002fac:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8002fae:	4b89      	ldr	r3, [pc, #548]	; (80031d4 <HAL_RCC_OscConfig+0x688>)
 8002fb0:	2180      	movs	r1, #128	; 0x80
 8002fb2:	0549      	lsls	r1, r1, #21
 8002fb4:	430a      	orrs	r2, r1
 8002fb6:	639a      	str	r2, [r3, #56]	; 0x38
      pwrclkchanged = SET;
 8002fb8:	183b      	adds	r3, r7, r0
 8002fba:	2201      	movs	r2, #1
 8002fbc:	701a      	strb	r2, [r3, #0]
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8002fbe:	4b88      	ldr	r3, [pc, #544]	; (80031e0 <HAL_RCC_OscConfig+0x694>)
 8002fc0:	681a      	ldr	r2, [r3, #0]
 8002fc2:	2380      	movs	r3, #128	; 0x80
 8002fc4:	005b      	lsls	r3, r3, #1
 8002fc6:	4013      	ands	r3, r2
 8002fc8:	d11a      	bne.n	8003000 <HAL_RCC_OscConfig+0x4b4>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8002fca:	4b85      	ldr	r3, [pc, #532]	; (80031e0 <HAL_RCC_OscConfig+0x694>)
 8002fcc:	681a      	ldr	r2, [r3, #0]
 8002fce:	4b84      	ldr	r3, [pc, #528]	; (80031e0 <HAL_RCC_OscConfig+0x694>)
 8002fd0:	2180      	movs	r1, #128	; 0x80
 8002fd2:	0049      	lsls	r1, r1, #1
 8002fd4:	430a      	orrs	r2, r1
 8002fd6:	601a      	str	r2, [r3, #0]

      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 8002fd8:	f7ff fb5e 	bl	8002698 <HAL_GetTick>
 8002fdc:	0003      	movs	r3, r0
 8002fde:	617b      	str	r3, [r7, #20]

      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8002fe0:	e008      	b.n	8002ff4 <HAL_RCC_OscConfig+0x4a8>
      {
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8002fe2:	f7ff fb59 	bl	8002698 <HAL_GetTick>
 8002fe6:	0002      	movs	r2, r0
 8002fe8:	697b      	ldr	r3, [r7, #20]
 8002fea:	1ad3      	subs	r3, r2, r3
 8002fec:	2b64      	cmp	r3, #100	; 0x64
 8002fee:	d901      	bls.n	8002ff4 <HAL_RCC_OscConfig+0x4a8>
        {
          return HAL_TIMEOUT;
 8002ff0:	2303      	movs	r3, #3
 8002ff2:	e174      	b.n	80032de <HAL_RCC_OscConfig+0x792>
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8002ff4:	4b7a      	ldr	r3, [pc, #488]	; (80031e0 <HAL_RCC_OscConfig+0x694>)
 8002ff6:	681a      	ldr	r2, [r3, #0]
 8002ff8:	2380      	movs	r3, #128	; 0x80
 8002ffa:	005b      	lsls	r3, r3, #1
 8002ffc:	4013      	ands	r3, r2
 8002ffe:	d0f0      	beq.n	8002fe2 <HAL_RCC_OscConfig+0x496>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8003000:	687b      	ldr	r3, [r7, #4]
 8003002:	689a      	ldr	r2, [r3, #8]
 8003004:	2380      	movs	r3, #128	; 0x80
 8003006:	005b      	lsls	r3, r3, #1
 8003008:	429a      	cmp	r2, r3
 800300a:	d107      	bne.n	800301c <HAL_RCC_OscConfig+0x4d0>
 800300c:	4b71      	ldr	r3, [pc, #452]	; (80031d4 <HAL_RCC_OscConfig+0x688>)
 800300e:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8003010:	4b70      	ldr	r3, [pc, #448]	; (80031d4 <HAL_RCC_OscConfig+0x688>)
 8003012:	2180      	movs	r1, #128	; 0x80
 8003014:	0049      	lsls	r1, r1, #1
 8003016:	430a      	orrs	r2, r1
 8003018:	651a      	str	r2, [r3, #80]	; 0x50
 800301a:	e031      	b.n	8003080 <HAL_RCC_OscConfig+0x534>
 800301c:	687b      	ldr	r3, [r7, #4]
 800301e:	689b      	ldr	r3, [r3, #8]
 8003020:	2b00      	cmp	r3, #0
 8003022:	d10c      	bne.n	800303e <HAL_RCC_OscConfig+0x4f2>
 8003024:	4b6b      	ldr	r3, [pc, #428]	; (80031d4 <HAL_RCC_OscConfig+0x688>)
 8003026:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8003028:	4b6a      	ldr	r3, [pc, #424]	; (80031d4 <HAL_RCC_OscConfig+0x688>)
 800302a:	496c      	ldr	r1, [pc, #432]	; (80031dc <HAL_RCC_OscConfig+0x690>)
 800302c:	400a      	ands	r2, r1
 800302e:	651a      	str	r2, [r3, #80]	; 0x50
 8003030:	4b68      	ldr	r3, [pc, #416]	; (80031d4 <HAL_RCC_OscConfig+0x688>)
 8003032:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8003034:	4b67      	ldr	r3, [pc, #412]	; (80031d4 <HAL_RCC_OscConfig+0x688>)
 8003036:	496b      	ldr	r1, [pc, #428]	; (80031e4 <HAL_RCC_OscConfig+0x698>)
 8003038:	400a      	ands	r2, r1
 800303a:	651a      	str	r2, [r3, #80]	; 0x50
 800303c:	e020      	b.n	8003080 <HAL_RCC_OscConfig+0x534>
 800303e:	687b      	ldr	r3, [r7, #4]
 8003040:	689a      	ldr	r2, [r3, #8]
 8003042:	23a0      	movs	r3, #160	; 0xa0
 8003044:	00db      	lsls	r3, r3, #3
 8003046:	429a      	cmp	r2, r3
 8003048:	d10e      	bne.n	8003068 <HAL_RCC_OscConfig+0x51c>
 800304a:	4b62      	ldr	r3, [pc, #392]	; (80031d4 <HAL_RCC_OscConfig+0x688>)
 800304c:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800304e:	4b61      	ldr	r3, [pc, #388]	; (80031d4 <HAL_RCC_OscConfig+0x688>)
 8003050:	2180      	movs	r1, #128	; 0x80
 8003052:	00c9      	lsls	r1, r1, #3
 8003054:	430a      	orrs	r2, r1
 8003056:	651a      	str	r2, [r3, #80]	; 0x50
 8003058:	4b5e      	ldr	r3, [pc, #376]	; (80031d4 <HAL_RCC_OscConfig+0x688>)
 800305a:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800305c:	4b5d      	ldr	r3, [pc, #372]	; (80031d4 <HAL_RCC_OscConfig+0x688>)
 800305e:	2180      	movs	r1, #128	; 0x80
 8003060:	0049      	lsls	r1, r1, #1
 8003062:	430a      	orrs	r2, r1
 8003064:	651a      	str	r2, [r3, #80]	; 0x50
 8003066:	e00b      	b.n	8003080 <HAL_RCC_OscConfig+0x534>
 8003068:	4b5a      	ldr	r3, [pc, #360]	; (80031d4 <HAL_RCC_OscConfig+0x688>)
 800306a:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800306c:	4b59      	ldr	r3, [pc, #356]	; (80031d4 <HAL_RCC_OscConfig+0x688>)
 800306e:	495b      	ldr	r1, [pc, #364]	; (80031dc <HAL_RCC_OscConfig+0x690>)
 8003070:	400a      	ands	r2, r1
 8003072:	651a      	str	r2, [r3, #80]	; 0x50
 8003074:	4b57      	ldr	r3, [pc, #348]	; (80031d4 <HAL_RCC_OscConfig+0x688>)
 8003076:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8003078:	4b56      	ldr	r3, [pc, #344]	; (80031d4 <HAL_RCC_OscConfig+0x688>)
 800307a:	495a      	ldr	r1, [pc, #360]	; (80031e4 <HAL_RCC_OscConfig+0x698>)
 800307c:	400a      	ands	r2, r1
 800307e:	651a      	str	r2, [r3, #80]	; 0x50

    /* Check the LSE State */
    if(RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 8003080:	687b      	ldr	r3, [r7, #4]
 8003082:	689b      	ldr	r3, [r3, #8]
 8003084:	2b00      	cmp	r3, #0
 8003086:	d015      	beq.n	80030b4 <HAL_RCC_OscConfig+0x568>
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8003088:	f7ff fb06 	bl	8002698 <HAL_GetTick>
 800308c:	0003      	movs	r3, r0
 800308e:	617b      	str	r3, [r7, #20]

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 8003090:	e009      	b.n	80030a6 <HAL_RCC_OscConfig+0x55a>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8003092:	f7ff fb01 	bl	8002698 <HAL_GetTick>
 8003096:	0002      	movs	r2, r0
 8003098:	697b      	ldr	r3, [r7, #20]
 800309a:	1ad3      	subs	r3, r2, r3
 800309c:	4a52      	ldr	r2, [pc, #328]	; (80031e8 <HAL_RCC_OscConfig+0x69c>)
 800309e:	4293      	cmp	r3, r2
 80030a0:	d901      	bls.n	80030a6 <HAL_RCC_OscConfig+0x55a>
        {
          return HAL_TIMEOUT;
 80030a2:	2303      	movs	r3, #3
 80030a4:	e11b      	b.n	80032de <HAL_RCC_OscConfig+0x792>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 80030a6:	4b4b      	ldr	r3, [pc, #300]	; (80031d4 <HAL_RCC_OscConfig+0x688>)
 80030a8:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 80030aa:	2380      	movs	r3, #128	; 0x80
 80030ac:	009b      	lsls	r3, r3, #2
 80030ae:	4013      	ands	r3, r2
 80030b0:	d0ef      	beq.n	8003092 <HAL_RCC_OscConfig+0x546>
 80030b2:	e014      	b.n	80030de <HAL_RCC_OscConfig+0x592>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 80030b4:	f7ff faf0 	bl	8002698 <HAL_GetTick>
 80030b8:	0003      	movs	r3, r0
 80030ba:	617b      	str	r3, [r7, #20]

      /* Wait till LSE is disabled */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
 80030bc:	e009      	b.n	80030d2 <HAL_RCC_OscConfig+0x586>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80030be:	f7ff faeb 	bl	8002698 <HAL_GetTick>
 80030c2:	0002      	movs	r2, r0
 80030c4:	697b      	ldr	r3, [r7, #20]
 80030c6:	1ad3      	subs	r3, r2, r3
 80030c8:	4a47      	ldr	r2, [pc, #284]	; (80031e8 <HAL_RCC_OscConfig+0x69c>)
 80030ca:	4293      	cmp	r3, r2
 80030cc:	d901      	bls.n	80030d2 <HAL_RCC_OscConfig+0x586>
        {
          return HAL_TIMEOUT;
 80030ce:	2303      	movs	r3, #3
 80030d0:	e105      	b.n	80032de <HAL_RCC_OscConfig+0x792>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
 80030d2:	4b40      	ldr	r3, [pc, #256]	; (80031d4 <HAL_RCC_OscConfig+0x688>)
 80030d4:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 80030d6:	2380      	movs	r3, #128	; 0x80
 80030d8:	009b      	lsls	r3, r3, #2
 80030da:	4013      	ands	r3, r2
 80030dc:	d1ef      	bne.n	80030be <HAL_RCC_OscConfig+0x572>
        }
      }
    }

    /* Require to disable power clock if necessary */
    if(pwrclkchanged == SET)
 80030de:	2323      	movs	r3, #35	; 0x23
 80030e0:	18fb      	adds	r3, r7, r3
 80030e2:	781b      	ldrb	r3, [r3, #0]
 80030e4:	2b01      	cmp	r3, #1
 80030e6:	d105      	bne.n	80030f4 <HAL_RCC_OscConfig+0x5a8>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 80030e8:	4b3a      	ldr	r3, [pc, #232]	; (80031d4 <HAL_RCC_OscConfig+0x688>)
 80030ea:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80030ec:	4b39      	ldr	r3, [pc, #228]	; (80031d4 <HAL_RCC_OscConfig+0x688>)
 80030ee:	493f      	ldr	r1, [pc, #252]	; (80031ec <HAL_RCC_OscConfig+0x6a0>)
 80030f0:	400a      	ands	r2, r1
 80030f2:	639a      	str	r2, [r3, #56]	; 0x38
    }
  }

#if defined(RCC_HSI48_SUPPORT)
  /*----------------------------- HSI48 Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
 80030f4:	687b      	ldr	r3, [r7, #4]
 80030f6:	681b      	ldr	r3, [r3, #0]
 80030f8:	2220      	movs	r2, #32
 80030fa:	4013      	ands	r3, r2
 80030fc:	d049      	beq.n	8003192 <HAL_RCC_OscConfig+0x646>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSI48(RCC_OscInitStruct->HSI48State));

      /* Check the HSI48 State */
      if(RCC_OscInitStruct->HSI48State != RCC_HSI48_OFF)
 80030fe:	687b      	ldr	r3, [r7, #4]
 8003100:	699b      	ldr	r3, [r3, #24]
 8003102:	2b00      	cmp	r3, #0
 8003104:	d026      	beq.n	8003154 <HAL_RCC_OscConfig+0x608>
      {
        /* Enable the Internal High Speed oscillator (HSI48). */
        __HAL_RCC_HSI48_ENABLE();
 8003106:	4b33      	ldr	r3, [pc, #204]	; (80031d4 <HAL_RCC_OscConfig+0x688>)
 8003108:	689a      	ldr	r2, [r3, #8]
 800310a:	4b32      	ldr	r3, [pc, #200]	; (80031d4 <HAL_RCC_OscConfig+0x688>)
 800310c:	2101      	movs	r1, #1
 800310e:	430a      	orrs	r2, r1
 8003110:	609a      	str	r2, [r3, #8]
 8003112:	4b30      	ldr	r3, [pc, #192]	; (80031d4 <HAL_RCC_OscConfig+0x688>)
 8003114:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8003116:	4b2f      	ldr	r3, [pc, #188]	; (80031d4 <HAL_RCC_OscConfig+0x688>)
 8003118:	2101      	movs	r1, #1
 800311a:	430a      	orrs	r2, r1
 800311c:	635a      	str	r2, [r3, #52]	; 0x34
 800311e:	4b34      	ldr	r3, [pc, #208]	; (80031f0 <HAL_RCC_OscConfig+0x6a4>)
 8003120:	6a1a      	ldr	r2, [r3, #32]
 8003122:	4b33      	ldr	r3, [pc, #204]	; (80031f0 <HAL_RCC_OscConfig+0x6a4>)
 8003124:	2180      	movs	r1, #128	; 0x80
 8003126:	0189      	lsls	r1, r1, #6
 8003128:	430a      	orrs	r2, r1
 800312a:	621a      	str	r2, [r3, #32]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800312c:	f7ff fab4 	bl	8002698 <HAL_GetTick>
 8003130:	0003      	movs	r3, r0
 8003132:	617b      	str	r3, [r7, #20]

        /* Wait till HSI48 is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
 8003134:	e008      	b.n	8003148 <HAL_RCC_OscConfig+0x5fc>
        {
          if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 8003136:	f7ff faaf 	bl	8002698 <HAL_GetTick>
 800313a:	0002      	movs	r2, r0
 800313c:	697b      	ldr	r3, [r7, #20]
 800313e:	1ad3      	subs	r3, r2, r3
 8003140:	2b02      	cmp	r3, #2
 8003142:	d901      	bls.n	8003148 <HAL_RCC_OscConfig+0x5fc>
          {
            return HAL_TIMEOUT;
 8003144:	2303      	movs	r3, #3
 8003146:	e0ca      	b.n	80032de <HAL_RCC_OscConfig+0x792>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
 8003148:	4b22      	ldr	r3, [pc, #136]	; (80031d4 <HAL_RCC_OscConfig+0x688>)
 800314a:	689b      	ldr	r3, [r3, #8]
 800314c:	2202      	movs	r2, #2
 800314e:	4013      	ands	r3, r2
 8003150:	d0f1      	beq.n	8003136 <HAL_RCC_OscConfig+0x5ea>
 8003152:	e01e      	b.n	8003192 <HAL_RCC_OscConfig+0x646>
        }
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI48). */
        __HAL_RCC_HSI48_DISABLE();
 8003154:	4b1f      	ldr	r3, [pc, #124]	; (80031d4 <HAL_RCC_OscConfig+0x688>)
 8003156:	689a      	ldr	r2, [r3, #8]
 8003158:	4b1e      	ldr	r3, [pc, #120]	; (80031d4 <HAL_RCC_OscConfig+0x688>)
 800315a:	2101      	movs	r1, #1
 800315c:	438a      	bics	r2, r1
 800315e:	609a      	str	r2, [r3, #8]
 8003160:	4b23      	ldr	r3, [pc, #140]	; (80031f0 <HAL_RCC_OscConfig+0x6a4>)
 8003162:	6a1a      	ldr	r2, [r3, #32]
 8003164:	4b22      	ldr	r3, [pc, #136]	; (80031f0 <HAL_RCC_OscConfig+0x6a4>)
 8003166:	4923      	ldr	r1, [pc, #140]	; (80031f4 <HAL_RCC_OscConfig+0x6a8>)
 8003168:	400a      	ands	r2, r1
 800316a:	621a      	str	r2, [r3, #32]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800316c:	f7ff fa94 	bl	8002698 <HAL_GetTick>
 8003170:	0003      	movs	r3, r0
 8003172:	617b      	str	r3, [r7, #20]

        /* Wait till HSI48 is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
 8003174:	e008      	b.n	8003188 <HAL_RCC_OscConfig+0x63c>
        {
          if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 8003176:	f7ff fa8f 	bl	8002698 <HAL_GetTick>
 800317a:	0002      	movs	r2, r0
 800317c:	697b      	ldr	r3, [r7, #20]
 800317e:	1ad3      	subs	r3, r2, r3
 8003180:	2b02      	cmp	r3, #2
 8003182:	d901      	bls.n	8003188 <HAL_RCC_OscConfig+0x63c>
          {
            return HAL_TIMEOUT;
 8003184:	2303      	movs	r3, #3
 8003186:	e0aa      	b.n	80032de <HAL_RCC_OscConfig+0x792>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
 8003188:	4b12      	ldr	r3, [pc, #72]	; (80031d4 <HAL_RCC_OscConfig+0x688>)
 800318a:	689b      	ldr	r3, [r3, #8]
 800318c:	2202      	movs	r2, #2
 800318e:	4013      	ands	r3, r2
 8003190:	d1f1      	bne.n	8003176 <HAL_RCC_OscConfig+0x62a>
#endif /* RCC_HSI48_SUPPORT */

  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8003192:	687b      	ldr	r3, [r7, #4]
 8003194:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003196:	2b00      	cmp	r3, #0
 8003198:	d100      	bne.n	800319c <HAL_RCC_OscConfig+0x650>
 800319a:	e09f      	b.n	80032dc <HAL_RCC_OscConfig+0x790>
  {
    /* Check if the PLL is used as system clock or not */
    if(sysclk_source != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 800319c:	69fb      	ldr	r3, [r7, #28]
 800319e:	2b0c      	cmp	r3, #12
 80031a0:	d100      	bne.n	80031a4 <HAL_RCC_OscConfig+0x658>
 80031a2:	e078      	b.n	8003296 <HAL_RCC_OscConfig+0x74a>
    {
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80031a4:	687b      	ldr	r3, [r7, #4]
 80031a6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80031a8:	2b02      	cmp	r3, #2
 80031aa:	d159      	bne.n	8003260 <HAL_RCC_OscConfig+0x714>
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
        assert_param(IS_RCC_PLL_MUL(RCC_OscInitStruct->PLL.PLLMUL));
        assert_param(IS_RCC_PLL_DIV(RCC_OscInitStruct->PLL.PLLDIV));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 80031ac:	4b09      	ldr	r3, [pc, #36]	; (80031d4 <HAL_RCC_OscConfig+0x688>)
 80031ae:	681a      	ldr	r2, [r3, #0]
 80031b0:	4b08      	ldr	r3, [pc, #32]	; (80031d4 <HAL_RCC_OscConfig+0x688>)
 80031b2:	4911      	ldr	r1, [pc, #68]	; (80031f8 <HAL_RCC_OscConfig+0x6ac>)
 80031b4:	400a      	ands	r2, r1
 80031b6:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80031b8:	f7ff fa6e 	bl	8002698 <HAL_GetTick>
 80031bc:	0003      	movs	r3, r0
 80031be:	617b      	str	r3, [r7, #20]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != 0U)
 80031c0:	e01c      	b.n	80031fc <HAL_RCC_OscConfig+0x6b0>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80031c2:	f7ff fa69 	bl	8002698 <HAL_GetTick>
 80031c6:	0002      	movs	r2, r0
 80031c8:	697b      	ldr	r3, [r7, #20]
 80031ca:	1ad3      	subs	r3, r2, r3
 80031cc:	2b02      	cmp	r3, #2
 80031ce:	d915      	bls.n	80031fc <HAL_RCC_OscConfig+0x6b0>
          {
            return HAL_TIMEOUT;
 80031d0:	2303      	movs	r3, #3
 80031d2:	e084      	b.n	80032de <HAL_RCC_OscConfig+0x792>
 80031d4:	40021000 	.word	0x40021000
 80031d8:	ffff1fff 	.word	0xffff1fff
 80031dc:	fffffeff 	.word	0xfffffeff
 80031e0:	40007000 	.word	0x40007000
 80031e4:	fffffbff 	.word	0xfffffbff
 80031e8:	00001388 	.word	0x00001388
 80031ec:	efffffff 	.word	0xefffffff
 80031f0:	40010000 	.word	0x40010000
 80031f4:	ffffdfff 	.word	0xffffdfff
 80031f8:	feffffff 	.word	0xfeffffff
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != 0U)
 80031fc:	4b3a      	ldr	r3, [pc, #232]	; (80032e8 <HAL_RCC_OscConfig+0x79c>)
 80031fe:	681a      	ldr	r2, [r3, #0]
 8003200:	2380      	movs	r3, #128	; 0x80
 8003202:	049b      	lsls	r3, r3, #18
 8003204:	4013      	ands	r3, r2
 8003206:	d1dc      	bne.n	80031c2 <HAL_RCC_OscConfig+0x676>
          }
        }

        /* Configure the main PLL clock source, multiplication and division factors. */
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8003208:	4b37      	ldr	r3, [pc, #220]	; (80032e8 <HAL_RCC_OscConfig+0x79c>)
 800320a:	68db      	ldr	r3, [r3, #12]
 800320c:	4a37      	ldr	r2, [pc, #220]	; (80032ec <HAL_RCC_OscConfig+0x7a0>)
 800320e:	4013      	ands	r3, r2
 8003210:	0019      	movs	r1, r3
 8003212:	687b      	ldr	r3, [r7, #4]
 8003214:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003216:	687b      	ldr	r3, [r7, #4]
 8003218:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800321a:	431a      	orrs	r2, r3
 800321c:	687b      	ldr	r3, [r7, #4]
 800321e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003220:	431a      	orrs	r2, r3
 8003222:	4b31      	ldr	r3, [pc, #196]	; (80032e8 <HAL_RCC_OscConfig+0x79c>)
 8003224:	430a      	orrs	r2, r1
 8003226:	60da      	str	r2, [r3, #12]
                             RCC_OscInitStruct->PLL.PLLMUL,
                             RCC_OscInitStruct->PLL.PLLDIV);
        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 8003228:	4b2f      	ldr	r3, [pc, #188]	; (80032e8 <HAL_RCC_OscConfig+0x79c>)
 800322a:	681a      	ldr	r2, [r3, #0]
 800322c:	4b2e      	ldr	r3, [pc, #184]	; (80032e8 <HAL_RCC_OscConfig+0x79c>)
 800322e:	2180      	movs	r1, #128	; 0x80
 8003230:	0449      	lsls	r1, r1, #17
 8003232:	430a      	orrs	r2, r1
 8003234:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8003236:	f7ff fa2f 	bl	8002698 <HAL_GetTick>
 800323a:	0003      	movs	r3, r0
 800323c:	617b      	str	r3, [r7, #20]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == 0U)
 800323e:	e008      	b.n	8003252 <HAL_RCC_OscConfig+0x706>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8003240:	f7ff fa2a 	bl	8002698 <HAL_GetTick>
 8003244:	0002      	movs	r2, r0
 8003246:	697b      	ldr	r3, [r7, #20]
 8003248:	1ad3      	subs	r3, r2, r3
 800324a:	2b02      	cmp	r3, #2
 800324c:	d901      	bls.n	8003252 <HAL_RCC_OscConfig+0x706>
          {
            return HAL_TIMEOUT;
 800324e:	2303      	movs	r3, #3
 8003250:	e045      	b.n	80032de <HAL_RCC_OscConfig+0x792>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == 0U)
 8003252:	4b25      	ldr	r3, [pc, #148]	; (80032e8 <HAL_RCC_OscConfig+0x79c>)
 8003254:	681a      	ldr	r2, [r3, #0]
 8003256:	2380      	movs	r3, #128	; 0x80
 8003258:	049b      	lsls	r3, r3, #18
 800325a:	4013      	ands	r3, r2
 800325c:	d0f0      	beq.n	8003240 <HAL_RCC_OscConfig+0x6f4>
 800325e:	e03d      	b.n	80032dc <HAL_RCC_OscConfig+0x790>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8003260:	4b21      	ldr	r3, [pc, #132]	; (80032e8 <HAL_RCC_OscConfig+0x79c>)
 8003262:	681a      	ldr	r2, [r3, #0]
 8003264:	4b20      	ldr	r3, [pc, #128]	; (80032e8 <HAL_RCC_OscConfig+0x79c>)
 8003266:	4922      	ldr	r1, [pc, #136]	; (80032f0 <HAL_RCC_OscConfig+0x7a4>)
 8003268:	400a      	ands	r2, r1
 800326a:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800326c:	f7ff fa14 	bl	8002698 <HAL_GetTick>
 8003270:	0003      	movs	r3, r0
 8003272:	617b      	str	r3, [r7, #20]

        /* Wait till PLL is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != 0U)
 8003274:	e008      	b.n	8003288 <HAL_RCC_OscConfig+0x73c>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8003276:	f7ff fa0f 	bl	8002698 <HAL_GetTick>
 800327a:	0002      	movs	r2, r0
 800327c:	697b      	ldr	r3, [r7, #20]
 800327e:	1ad3      	subs	r3, r2, r3
 8003280:	2b02      	cmp	r3, #2
 8003282:	d901      	bls.n	8003288 <HAL_RCC_OscConfig+0x73c>
          {
            return HAL_TIMEOUT;
 8003284:	2303      	movs	r3, #3
 8003286:	e02a      	b.n	80032de <HAL_RCC_OscConfig+0x792>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != 0U)
 8003288:	4b17      	ldr	r3, [pc, #92]	; (80032e8 <HAL_RCC_OscConfig+0x79c>)
 800328a:	681a      	ldr	r2, [r3, #0]
 800328c:	2380      	movs	r3, #128	; 0x80
 800328e:	049b      	lsls	r3, r3, #18
 8003290:	4013      	ands	r3, r2
 8003292:	d1f0      	bne.n	8003276 <HAL_RCC_OscConfig+0x72a>
 8003294:	e022      	b.n	80032dc <HAL_RCC_OscConfig+0x790>
      }
    }
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8003296:	687b      	ldr	r3, [r7, #4]
 8003298:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800329a:	2b01      	cmp	r3, #1
 800329c:	d101      	bne.n	80032a2 <HAL_RCC_OscConfig+0x756>
      {
        return HAL_ERROR;
 800329e:	2301      	movs	r3, #1
 80032a0:	e01d      	b.n	80032de <HAL_RCC_OscConfig+0x792>
      }
      else
      {
        /* Do not return HAL_ERROR if request repeats the current configuration */
        pll_config = RCC->CFGR;
 80032a2:	4b11      	ldr	r3, [pc, #68]	; (80032e8 <HAL_RCC_OscConfig+0x79c>)
 80032a4:	68db      	ldr	r3, [r3, #12]
 80032a6:	61bb      	str	r3, [r7, #24]
        if((READ_BIT(pll_config, RCC_CFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80032a8:	69ba      	ldr	r2, [r7, #24]
 80032aa:	2380      	movs	r3, #128	; 0x80
 80032ac:	025b      	lsls	r3, r3, #9
 80032ae:	401a      	ands	r2, r3
 80032b0:	687b      	ldr	r3, [r7, #4]
 80032b2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80032b4:	429a      	cmp	r2, r3
 80032b6:	d10f      	bne.n	80032d8 <HAL_RCC_OscConfig+0x78c>
           (READ_BIT(pll_config, RCC_CFGR_PLLMUL) != RCC_OscInitStruct->PLL.PLLMUL) ||
 80032b8:	69ba      	ldr	r2, [r7, #24]
 80032ba:	23f0      	movs	r3, #240	; 0xf0
 80032bc:	039b      	lsls	r3, r3, #14
 80032be:	401a      	ands	r2, r3
 80032c0:	687b      	ldr	r3, [r7, #4]
 80032c2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
        if((READ_BIT(pll_config, RCC_CFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80032c4:	429a      	cmp	r2, r3
 80032c6:	d107      	bne.n	80032d8 <HAL_RCC_OscConfig+0x78c>
           (READ_BIT(pll_config, RCC_CFGR_PLLDIV) != RCC_OscInitStruct->PLL.PLLDIV))
 80032c8:	69ba      	ldr	r2, [r7, #24]
 80032ca:	23c0      	movs	r3, #192	; 0xc0
 80032cc:	041b      	lsls	r3, r3, #16
 80032ce:	401a      	ands	r2, r3
 80032d0:	687b      	ldr	r3, [r7, #4]
 80032d2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
           (READ_BIT(pll_config, RCC_CFGR_PLLMUL) != RCC_OscInitStruct->PLL.PLLMUL) ||
 80032d4:	429a      	cmp	r2, r3
 80032d6:	d001      	beq.n	80032dc <HAL_RCC_OscConfig+0x790>
        {
          return HAL_ERROR;
 80032d8:	2301      	movs	r3, #1
 80032da:	e000      	b.n	80032de <HAL_RCC_OscConfig+0x792>
        }
      }
    }
  }
  return HAL_OK;
 80032dc:	2300      	movs	r3, #0
}
 80032de:	0018      	movs	r0, r3
 80032e0:	46bd      	mov	sp, r7
 80032e2:	b00a      	add	sp, #40	; 0x28
 80032e4:	bdb0      	pop	{r4, r5, r7, pc}
 80032e6:	46c0      	nop			; (mov r8, r8)
 80032e8:	40021000 	.word	0x40021000
 80032ec:	ff02ffff 	.word	0xff02ffff
 80032f0:	feffffff 	.word	0xfeffffff

080032f4 <HAL_RCC_ClockConfig>:
  *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
  *         (for more details refer to section above "Initialization/de-initialization functions")
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 80032f4:	b5b0      	push	{r4, r5, r7, lr}
 80032f6:	b084      	sub	sp, #16
 80032f8:	af00      	add	r7, sp, #0
 80032fa:	6078      	str	r0, [r7, #4]
 80032fc:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;
  HAL_StatusTypeDef status;

  /* Check Null pointer */
  if(RCC_ClkInitStruct == NULL)
 80032fe:	687b      	ldr	r3, [r7, #4]
 8003300:	2b00      	cmp	r3, #0
 8003302:	d101      	bne.n	8003308 <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 8003304:	2301      	movs	r3, #1
 8003306:	e128      	b.n	800355a <HAL_RCC_ClockConfig+0x266>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
  must be correctly programmed according to the frequency of the CPU clock
  (HCLK) and the supply voltage of the device. */

  /* Increasing the number of wait states because of higher CPU frequency */
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8003308:	4b96      	ldr	r3, [pc, #600]	; (8003564 <HAL_RCC_ClockConfig+0x270>)
 800330a:	681b      	ldr	r3, [r3, #0]
 800330c:	2201      	movs	r2, #1
 800330e:	4013      	ands	r3, r2
 8003310:	683a      	ldr	r2, [r7, #0]
 8003312:	429a      	cmp	r2, r3
 8003314:	d91e      	bls.n	8003354 <HAL_RCC_ClockConfig+0x60>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8003316:	4b93      	ldr	r3, [pc, #588]	; (8003564 <HAL_RCC_ClockConfig+0x270>)
 8003318:	681b      	ldr	r3, [r3, #0]
 800331a:	2201      	movs	r2, #1
 800331c:	4393      	bics	r3, r2
 800331e:	0019      	movs	r1, r3
 8003320:	4b90      	ldr	r3, [pc, #576]	; (8003564 <HAL_RCC_ClockConfig+0x270>)
 8003322:	683a      	ldr	r2, [r7, #0]
 8003324:	430a      	orrs	r2, r1
 8003326:	601a      	str	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by polling the FLASH_ACR register */
    tickstart = HAL_GetTick();
 8003328:	f7ff f9b6 	bl	8002698 <HAL_GetTick>
 800332c:	0003      	movs	r3, r0
 800332e:	60fb      	str	r3, [r7, #12]

    while (__HAL_FLASH_GET_LATENCY() != FLatency)
 8003330:	e009      	b.n	8003346 <HAL_RCC_ClockConfig+0x52>
    {
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8003332:	f7ff f9b1 	bl	8002698 <HAL_GetTick>
 8003336:	0002      	movs	r2, r0
 8003338:	68fb      	ldr	r3, [r7, #12]
 800333a:	1ad3      	subs	r3, r2, r3
 800333c:	4a8a      	ldr	r2, [pc, #552]	; (8003568 <HAL_RCC_ClockConfig+0x274>)
 800333e:	4293      	cmp	r3, r2
 8003340:	d901      	bls.n	8003346 <HAL_RCC_ClockConfig+0x52>
      {
        return HAL_TIMEOUT;
 8003342:	2303      	movs	r3, #3
 8003344:	e109      	b.n	800355a <HAL_RCC_ClockConfig+0x266>
    while (__HAL_FLASH_GET_LATENCY() != FLatency)
 8003346:	4b87      	ldr	r3, [pc, #540]	; (8003564 <HAL_RCC_ClockConfig+0x270>)
 8003348:	681b      	ldr	r3, [r3, #0]
 800334a:	2201      	movs	r2, #1
 800334c:	4013      	ands	r3, r2
 800334e:	683a      	ldr	r2, [r7, #0]
 8003350:	429a      	cmp	r2, r3
 8003352:	d1ee      	bne.n	8003332 <HAL_RCC_ClockConfig+0x3e>
      }
    }
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8003354:	687b      	ldr	r3, [r7, #4]
 8003356:	681b      	ldr	r3, [r3, #0]
 8003358:	2202      	movs	r2, #2
 800335a:	4013      	ands	r3, r2
 800335c:	d009      	beq.n	8003372 <HAL_RCC_ClockConfig+0x7e>
  {
    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800335e:	4b83      	ldr	r3, [pc, #524]	; (800356c <HAL_RCC_ClockConfig+0x278>)
 8003360:	68db      	ldr	r3, [r3, #12]
 8003362:	22f0      	movs	r2, #240	; 0xf0
 8003364:	4393      	bics	r3, r2
 8003366:	0019      	movs	r1, r3
 8003368:	687b      	ldr	r3, [r7, #4]
 800336a:	689a      	ldr	r2, [r3, #8]
 800336c:	4b7f      	ldr	r3, [pc, #508]	; (800356c <HAL_RCC_ClockConfig+0x278>)
 800336e:	430a      	orrs	r2, r1
 8003370:	60da      	str	r2, [r3, #12]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8003372:	687b      	ldr	r3, [r7, #4]
 8003374:	681b      	ldr	r3, [r3, #0]
 8003376:	2201      	movs	r2, #1
 8003378:	4013      	ands	r3, r2
 800337a:	d100      	bne.n	800337e <HAL_RCC_ClockConfig+0x8a>
 800337c:	e089      	b.n	8003492 <HAL_RCC_ClockConfig+0x19e>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));

    /* HSE is selected as System Clock Source */
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800337e:	687b      	ldr	r3, [r7, #4]
 8003380:	685b      	ldr	r3, [r3, #4]
 8003382:	2b02      	cmp	r3, #2
 8003384:	d107      	bne.n	8003396 <HAL_RCC_ClockConfig+0xa2>
    {
      /* Check the HSE ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 8003386:	4b79      	ldr	r3, [pc, #484]	; (800356c <HAL_RCC_ClockConfig+0x278>)
 8003388:	681a      	ldr	r2, [r3, #0]
 800338a:	2380      	movs	r3, #128	; 0x80
 800338c:	029b      	lsls	r3, r3, #10
 800338e:	4013      	ands	r3, r2
 8003390:	d120      	bne.n	80033d4 <HAL_RCC_ClockConfig+0xe0>
      {
        return HAL_ERROR;
 8003392:	2301      	movs	r3, #1
 8003394:	e0e1      	b.n	800355a <HAL_RCC_ClockConfig+0x266>
      }
    }
    /* PLL is selected as System Clock Source */
    else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8003396:	687b      	ldr	r3, [r7, #4]
 8003398:	685b      	ldr	r3, [r3, #4]
 800339a:	2b03      	cmp	r3, #3
 800339c:	d107      	bne.n	80033ae <HAL_RCC_ClockConfig+0xba>
    {
      /* Check the PLL ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
 800339e:	4b73      	ldr	r3, [pc, #460]	; (800356c <HAL_RCC_ClockConfig+0x278>)
 80033a0:	681a      	ldr	r2, [r3, #0]
 80033a2:	2380      	movs	r3, #128	; 0x80
 80033a4:	049b      	lsls	r3, r3, #18
 80033a6:	4013      	ands	r3, r2
 80033a8:	d114      	bne.n	80033d4 <HAL_RCC_ClockConfig+0xe0>
      {
        return HAL_ERROR;
 80033aa:	2301      	movs	r3, #1
 80033ac:	e0d5      	b.n	800355a <HAL_RCC_ClockConfig+0x266>
      }
    }
    /* HSI is selected as System Clock Source */
    else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSI)
 80033ae:	687b      	ldr	r3, [r7, #4]
 80033b0:	685b      	ldr	r3, [r3, #4]
 80033b2:	2b01      	cmp	r3, #1
 80033b4:	d106      	bne.n	80033c4 <HAL_RCC_ClockConfig+0xd0>
    {
      /* Check the HSI ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 80033b6:	4b6d      	ldr	r3, [pc, #436]	; (800356c <HAL_RCC_ClockConfig+0x278>)
 80033b8:	681b      	ldr	r3, [r3, #0]
 80033ba:	2204      	movs	r2, #4
 80033bc:	4013      	ands	r3, r2
 80033be:	d109      	bne.n	80033d4 <HAL_RCC_ClockConfig+0xe0>
      {
        return HAL_ERROR;
 80033c0:	2301      	movs	r3, #1
 80033c2:	e0ca      	b.n	800355a <HAL_RCC_ClockConfig+0x266>
    }
    /* MSI is selected as System Clock Source */
    else
    {
      /* Check the MSI ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_MSIRDY) == 0U)
 80033c4:	4b69      	ldr	r3, [pc, #420]	; (800356c <HAL_RCC_ClockConfig+0x278>)
 80033c6:	681a      	ldr	r2, [r3, #0]
 80033c8:	2380      	movs	r3, #128	; 0x80
 80033ca:	009b      	lsls	r3, r3, #2
 80033cc:	4013      	ands	r3, r2
 80033ce:	d101      	bne.n	80033d4 <HAL_RCC_ClockConfig+0xe0>
      {
        return HAL_ERROR;
 80033d0:	2301      	movs	r3, #1
 80033d2:	e0c2      	b.n	800355a <HAL_RCC_ClockConfig+0x266>
      }
    }
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 80033d4:	4b65      	ldr	r3, [pc, #404]	; (800356c <HAL_RCC_ClockConfig+0x278>)
 80033d6:	68db      	ldr	r3, [r3, #12]
 80033d8:	2203      	movs	r2, #3
 80033da:	4393      	bics	r3, r2
 80033dc:	0019      	movs	r1, r3
 80033de:	687b      	ldr	r3, [r7, #4]
 80033e0:	685a      	ldr	r2, [r3, #4]
 80033e2:	4b62      	ldr	r3, [pc, #392]	; (800356c <HAL_RCC_ClockConfig+0x278>)
 80033e4:	430a      	orrs	r2, r1
 80033e6:	60da      	str	r2, [r3, #12]

    /* Get Start Tick */
    tickstart = HAL_GetTick();
 80033e8:	f7ff f956 	bl	8002698 <HAL_GetTick>
 80033ec:	0003      	movs	r3, r0
 80033ee:	60fb      	str	r3, [r7, #12]

    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 80033f0:	687b      	ldr	r3, [r7, #4]
 80033f2:	685b      	ldr	r3, [r3, #4]
 80033f4:	2b02      	cmp	r3, #2
 80033f6:	d111      	bne.n	800341c <HAL_RCC_ClockConfig+0x128>
    {
      while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSE)
 80033f8:	e009      	b.n	800340e <HAL_RCC_ClockConfig+0x11a>
      {
        if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 80033fa:	f7ff f94d 	bl	8002698 <HAL_GetTick>
 80033fe:	0002      	movs	r2, r0
 8003400:	68fb      	ldr	r3, [r7, #12]
 8003402:	1ad3      	subs	r3, r2, r3
 8003404:	4a58      	ldr	r2, [pc, #352]	; (8003568 <HAL_RCC_ClockConfig+0x274>)
 8003406:	4293      	cmp	r3, r2
 8003408:	d901      	bls.n	800340e <HAL_RCC_ClockConfig+0x11a>
        {
          return HAL_TIMEOUT;
 800340a:	2303      	movs	r3, #3
 800340c:	e0a5      	b.n	800355a <HAL_RCC_ClockConfig+0x266>
      while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSE)
 800340e:	4b57      	ldr	r3, [pc, #348]	; (800356c <HAL_RCC_ClockConfig+0x278>)
 8003410:	68db      	ldr	r3, [r3, #12]
 8003412:	220c      	movs	r2, #12
 8003414:	4013      	ands	r3, r2
 8003416:	2b08      	cmp	r3, #8
 8003418:	d1ef      	bne.n	80033fa <HAL_RCC_ClockConfig+0x106>
 800341a:	e03a      	b.n	8003492 <HAL_RCC_ClockConfig+0x19e>
        }
      }
    }
    else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 800341c:	687b      	ldr	r3, [r7, #4]
 800341e:	685b      	ldr	r3, [r3, #4]
 8003420:	2b03      	cmp	r3, #3
 8003422:	d111      	bne.n	8003448 <HAL_RCC_ClockConfig+0x154>
    {
      while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 8003424:	e009      	b.n	800343a <HAL_RCC_ClockConfig+0x146>
      {
        if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 8003426:	f7ff f937 	bl	8002698 <HAL_GetTick>
 800342a:	0002      	movs	r2, r0
 800342c:	68fb      	ldr	r3, [r7, #12]
 800342e:	1ad3      	subs	r3, r2, r3
 8003430:	4a4d      	ldr	r2, [pc, #308]	; (8003568 <HAL_RCC_ClockConfig+0x274>)
 8003432:	4293      	cmp	r3, r2
 8003434:	d901      	bls.n	800343a <HAL_RCC_ClockConfig+0x146>
        {
          return HAL_TIMEOUT;
 8003436:	2303      	movs	r3, #3
 8003438:	e08f      	b.n	800355a <HAL_RCC_ClockConfig+0x266>
      while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 800343a:	4b4c      	ldr	r3, [pc, #304]	; (800356c <HAL_RCC_ClockConfig+0x278>)
 800343c:	68db      	ldr	r3, [r3, #12]
 800343e:	220c      	movs	r2, #12
 8003440:	4013      	ands	r3, r2
 8003442:	2b0c      	cmp	r3, #12
 8003444:	d1ef      	bne.n	8003426 <HAL_RCC_ClockConfig+0x132>
 8003446:	e024      	b.n	8003492 <HAL_RCC_ClockConfig+0x19e>
        }
      }
    }
    else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSI)
 8003448:	687b      	ldr	r3, [r7, #4]
 800344a:	685b      	ldr	r3, [r3, #4]
 800344c:	2b01      	cmp	r3, #1
 800344e:	d11b      	bne.n	8003488 <HAL_RCC_ClockConfig+0x194>
    {
      while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI)
 8003450:	e009      	b.n	8003466 <HAL_RCC_ClockConfig+0x172>
      {
        if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 8003452:	f7ff f921 	bl	8002698 <HAL_GetTick>
 8003456:	0002      	movs	r2, r0
 8003458:	68fb      	ldr	r3, [r7, #12]
 800345a:	1ad3      	subs	r3, r2, r3
 800345c:	4a42      	ldr	r2, [pc, #264]	; (8003568 <HAL_RCC_ClockConfig+0x274>)
 800345e:	4293      	cmp	r3, r2
 8003460:	d901      	bls.n	8003466 <HAL_RCC_ClockConfig+0x172>
        {
          return HAL_TIMEOUT;
 8003462:	2303      	movs	r3, #3
 8003464:	e079      	b.n	800355a <HAL_RCC_ClockConfig+0x266>
      while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI)
 8003466:	4b41      	ldr	r3, [pc, #260]	; (800356c <HAL_RCC_ClockConfig+0x278>)
 8003468:	68db      	ldr	r3, [r3, #12]
 800346a:	220c      	movs	r2, #12
 800346c:	4013      	ands	r3, r2
 800346e:	2b04      	cmp	r3, #4
 8003470:	d1ef      	bne.n	8003452 <HAL_RCC_ClockConfig+0x15e>
 8003472:	e00e      	b.n	8003492 <HAL_RCC_ClockConfig+0x19e>
    }
    else
    {
      while(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_MSI)
      {
        if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 8003474:	f7ff f910 	bl	8002698 <HAL_GetTick>
 8003478:	0002      	movs	r2, r0
 800347a:	68fb      	ldr	r3, [r7, #12]
 800347c:	1ad3      	subs	r3, r2, r3
 800347e:	4a3a      	ldr	r2, [pc, #232]	; (8003568 <HAL_RCC_ClockConfig+0x274>)
 8003480:	4293      	cmp	r3, r2
 8003482:	d901      	bls.n	8003488 <HAL_RCC_ClockConfig+0x194>
        {
          return HAL_TIMEOUT;
 8003484:	2303      	movs	r3, #3
 8003486:	e068      	b.n	800355a <HAL_RCC_ClockConfig+0x266>
      while(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_MSI)
 8003488:	4b38      	ldr	r3, [pc, #224]	; (800356c <HAL_RCC_ClockConfig+0x278>)
 800348a:	68db      	ldr	r3, [r3, #12]
 800348c:	220c      	movs	r2, #12
 800348e:	4013      	ands	r3, r2
 8003490:	d1f0      	bne.n	8003474 <HAL_RCC_ClockConfig+0x180>
        }
      }
    }
  }
  /* Decreasing the number of wait states because of lower CPU frequency */
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8003492:	4b34      	ldr	r3, [pc, #208]	; (8003564 <HAL_RCC_ClockConfig+0x270>)
 8003494:	681b      	ldr	r3, [r3, #0]
 8003496:	2201      	movs	r2, #1
 8003498:	4013      	ands	r3, r2
 800349a:	683a      	ldr	r2, [r7, #0]
 800349c:	429a      	cmp	r2, r3
 800349e:	d21e      	bcs.n	80034de <HAL_RCC_ClockConfig+0x1ea>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 80034a0:	4b30      	ldr	r3, [pc, #192]	; (8003564 <HAL_RCC_ClockConfig+0x270>)
 80034a2:	681b      	ldr	r3, [r3, #0]
 80034a4:	2201      	movs	r2, #1
 80034a6:	4393      	bics	r3, r2
 80034a8:	0019      	movs	r1, r3
 80034aa:	4b2e      	ldr	r3, [pc, #184]	; (8003564 <HAL_RCC_ClockConfig+0x270>)
 80034ac:	683a      	ldr	r2, [r7, #0]
 80034ae:	430a      	orrs	r2, r1
 80034b0:	601a      	str	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by polling the FLASH_ACR register */
    tickstart = HAL_GetTick();
 80034b2:	f7ff f8f1 	bl	8002698 <HAL_GetTick>
 80034b6:	0003      	movs	r3, r0
 80034b8:	60fb      	str	r3, [r7, #12]

    while (__HAL_FLASH_GET_LATENCY() != FLatency)
 80034ba:	e009      	b.n	80034d0 <HAL_RCC_ClockConfig+0x1dc>
    {
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 80034bc:	f7ff f8ec 	bl	8002698 <HAL_GetTick>
 80034c0:	0002      	movs	r2, r0
 80034c2:	68fb      	ldr	r3, [r7, #12]
 80034c4:	1ad3      	subs	r3, r2, r3
 80034c6:	4a28      	ldr	r2, [pc, #160]	; (8003568 <HAL_RCC_ClockConfig+0x274>)
 80034c8:	4293      	cmp	r3, r2
 80034ca:	d901      	bls.n	80034d0 <HAL_RCC_ClockConfig+0x1dc>
      {
        return HAL_TIMEOUT;
 80034cc:	2303      	movs	r3, #3
 80034ce:	e044      	b.n	800355a <HAL_RCC_ClockConfig+0x266>
    while (__HAL_FLASH_GET_LATENCY() != FLatency)
 80034d0:	4b24      	ldr	r3, [pc, #144]	; (8003564 <HAL_RCC_ClockConfig+0x270>)
 80034d2:	681b      	ldr	r3, [r3, #0]
 80034d4:	2201      	movs	r2, #1
 80034d6:	4013      	ands	r3, r2
 80034d8:	683a      	ldr	r2, [r7, #0]
 80034da:	429a      	cmp	r2, r3
 80034dc:	d1ee      	bne.n	80034bc <HAL_RCC_ClockConfig+0x1c8>
      }
    }
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80034de:	687b      	ldr	r3, [r7, #4]
 80034e0:	681b      	ldr	r3, [r3, #0]
 80034e2:	2204      	movs	r2, #4
 80034e4:	4013      	ands	r3, r2
 80034e6:	d009      	beq.n	80034fc <HAL_RCC_ClockConfig+0x208>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 80034e8:	4b20      	ldr	r3, [pc, #128]	; (800356c <HAL_RCC_ClockConfig+0x278>)
 80034ea:	68db      	ldr	r3, [r3, #12]
 80034ec:	4a20      	ldr	r2, [pc, #128]	; (8003570 <HAL_RCC_ClockConfig+0x27c>)
 80034ee:	4013      	ands	r3, r2
 80034f0:	0019      	movs	r1, r3
 80034f2:	687b      	ldr	r3, [r7, #4]
 80034f4:	68da      	ldr	r2, [r3, #12]
 80034f6:	4b1d      	ldr	r3, [pc, #116]	; (800356c <HAL_RCC_ClockConfig+0x278>)
 80034f8:	430a      	orrs	r2, r1
 80034fa:	60da      	str	r2, [r3, #12]
  }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80034fc:	687b      	ldr	r3, [r7, #4]
 80034fe:	681b      	ldr	r3, [r3, #0]
 8003500:	2208      	movs	r2, #8
 8003502:	4013      	ands	r3, r2
 8003504:	d00a      	beq.n	800351c <HAL_RCC_ClockConfig+0x228>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3));
 8003506:	4b19      	ldr	r3, [pc, #100]	; (800356c <HAL_RCC_ClockConfig+0x278>)
 8003508:	68db      	ldr	r3, [r3, #12]
 800350a:	4a1a      	ldr	r2, [pc, #104]	; (8003574 <HAL_RCC_ClockConfig+0x280>)
 800350c:	4013      	ands	r3, r2
 800350e:	0019      	movs	r1, r3
 8003510:	687b      	ldr	r3, [r7, #4]
 8003512:	691b      	ldr	r3, [r3, #16]
 8003514:	00da      	lsls	r2, r3, #3
 8003516:	4b15      	ldr	r3, [pc, #84]	; (800356c <HAL_RCC_ClockConfig+0x278>)
 8003518:	430a      	orrs	r2, r1
 800351a:	60da      	str	r2, [r3, #12]
  }

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800351c:	f000 f832 	bl	8003584 <HAL_RCC_GetSysClockFreq>
 8003520:	0001      	movs	r1, r0
 8003522:	4b12      	ldr	r3, [pc, #72]	; (800356c <HAL_RCC_ClockConfig+0x278>)
 8003524:	68db      	ldr	r3, [r3, #12]
 8003526:	091b      	lsrs	r3, r3, #4
 8003528:	220f      	movs	r2, #15
 800352a:	4013      	ands	r3, r2
 800352c:	4a12      	ldr	r2, [pc, #72]	; (8003578 <HAL_RCC_ClockConfig+0x284>)
 800352e:	5cd3      	ldrb	r3, [r2, r3]
 8003530:	000a      	movs	r2, r1
 8003532:	40da      	lsrs	r2, r3
 8003534:	4b11      	ldr	r3, [pc, #68]	; (800357c <HAL_RCC_ClockConfig+0x288>)
 8003536:	601a      	str	r2, [r3, #0]

  /* Configure the source of time base considering new system clocks settings*/
  status = HAL_InitTick(uwTickPrio);
 8003538:	4b11      	ldr	r3, [pc, #68]	; (8003580 <HAL_RCC_ClockConfig+0x28c>)
 800353a:	681b      	ldr	r3, [r3, #0]
 800353c:	250b      	movs	r5, #11
 800353e:	197c      	adds	r4, r7, r5
 8003540:	0018      	movs	r0, r3
 8003542:	f7ff f863 	bl	800260c <HAL_InitTick>
 8003546:	0003      	movs	r3, r0
 8003548:	7023      	strb	r3, [r4, #0]
  if(status != HAL_OK)
 800354a:	197b      	adds	r3, r7, r5
 800354c:	781b      	ldrb	r3, [r3, #0]
 800354e:	2b00      	cmp	r3, #0
 8003550:	d002      	beq.n	8003558 <HAL_RCC_ClockConfig+0x264>
  {
    return status;
 8003552:	197b      	adds	r3, r7, r5
 8003554:	781b      	ldrb	r3, [r3, #0]
 8003556:	e000      	b.n	800355a <HAL_RCC_ClockConfig+0x266>
  }

  return HAL_OK;
 8003558:	2300      	movs	r3, #0
}
 800355a:	0018      	movs	r0, r3
 800355c:	46bd      	mov	sp, r7
 800355e:	b004      	add	sp, #16
 8003560:	bdb0      	pop	{r4, r5, r7, pc}
 8003562:	46c0      	nop			; (mov r8, r8)
 8003564:	40022000 	.word	0x40022000
 8003568:	00001388 	.word	0x00001388
 800356c:	40021000 	.word	0x40021000
 8003570:	fffff8ff 	.word	0xfffff8ff
 8003574:	ffffc7ff 	.word	0xffffc7ff
 8003578:	08003780 	.word	0x08003780
 800357c:	20000000 	.word	0x20000000
 8003580:	20000004 	.word	0x20000004

08003584 <HAL_RCC_GetSysClockFreq>:
  *         right SYSCLK value. Otherwise, any configuration based on this function will be incorrect.
  *
  * @retval SYSCLK frequency
  */
uint32_t HAL_RCC_GetSysClockFreq(void)
{
 8003584:	b5b0      	push	{r4, r5, r7, lr}
 8003586:	b08e      	sub	sp, #56	; 0x38
 8003588:	af00      	add	r7, sp, #0
  uint32_t tmpreg, pllm, plld, pllvco, msiclkrange;    /* no init needed */
  uint32_t sysclockfreq;

  tmpreg = RCC->CFGR;
 800358a:	4b4c      	ldr	r3, [pc, #304]	; (80036bc <HAL_RCC_GetSysClockFreq+0x138>)
 800358c:	68db      	ldr	r3, [r3, #12]
 800358e:	62fb      	str	r3, [r7, #44]	; 0x2c

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (tmpreg & RCC_CFGR_SWS)
 8003590:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8003592:	230c      	movs	r3, #12
 8003594:	4013      	ands	r3, r2
 8003596:	2b0c      	cmp	r3, #12
 8003598:	d014      	beq.n	80035c4 <HAL_RCC_GetSysClockFreq+0x40>
 800359a:	d900      	bls.n	800359e <HAL_RCC_GetSysClockFreq+0x1a>
 800359c:	e07b      	b.n	8003696 <HAL_RCC_GetSysClockFreq+0x112>
 800359e:	2b04      	cmp	r3, #4
 80035a0:	d002      	beq.n	80035a8 <HAL_RCC_GetSysClockFreq+0x24>
 80035a2:	2b08      	cmp	r3, #8
 80035a4:	d00b      	beq.n	80035be <HAL_RCC_GetSysClockFreq+0x3a>
 80035a6:	e076      	b.n	8003696 <HAL_RCC_GetSysClockFreq+0x112>
  {
    case RCC_SYSCLKSOURCE_STATUS_HSI:  /* HSI used as system clock source */
    {
      if ((RCC->CR & RCC_CR_HSIDIVF) != 0U)
 80035a8:	4b44      	ldr	r3, [pc, #272]	; (80036bc <HAL_RCC_GetSysClockFreq+0x138>)
 80035aa:	681b      	ldr	r3, [r3, #0]
 80035ac:	2210      	movs	r2, #16
 80035ae:	4013      	ands	r3, r2
 80035b0:	d002      	beq.n	80035b8 <HAL_RCC_GetSysClockFreq+0x34>
      {
        sysclockfreq =  (HSI_VALUE >> 2);
 80035b2:	4b43      	ldr	r3, [pc, #268]	; (80036c0 <HAL_RCC_GetSysClockFreq+0x13c>)
 80035b4:	633b      	str	r3, [r7, #48]	; 0x30
      }
      else
      {
        sysclockfreq =  HSI_VALUE;
      }
      break;
 80035b6:	e07c      	b.n	80036b2 <HAL_RCC_GetSysClockFreq+0x12e>
        sysclockfreq =  HSI_VALUE;
 80035b8:	4b42      	ldr	r3, [pc, #264]	; (80036c4 <HAL_RCC_GetSysClockFreq+0x140>)
 80035ba:	633b      	str	r3, [r7, #48]	; 0x30
      break;
 80035bc:	e079      	b.n	80036b2 <HAL_RCC_GetSysClockFreq+0x12e>
    }
    case RCC_SYSCLKSOURCE_STATUS_HSE:  /* HSE used as system clock */
    {
      sysclockfreq = HSE_VALUE;
 80035be:	4b42      	ldr	r3, [pc, #264]	; (80036c8 <HAL_RCC_GetSysClockFreq+0x144>)
 80035c0:	633b      	str	r3, [r7, #48]	; 0x30
      break;
 80035c2:	e076      	b.n	80036b2 <HAL_RCC_GetSysClockFreq+0x12e>
    }
    case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock */
    {
      pllm = PLLMulTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMUL) >> RCC_CFGR_PLLMUL_Pos];
 80035c4:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80035c6:	0c9a      	lsrs	r2, r3, #18
 80035c8:	230f      	movs	r3, #15
 80035ca:	401a      	ands	r2, r3
 80035cc:	4b3f      	ldr	r3, [pc, #252]	; (80036cc <HAL_RCC_GetSysClockFreq+0x148>)
 80035ce:	5c9b      	ldrb	r3, [r3, r2]
 80035d0:	62bb      	str	r3, [r7, #40]	; 0x28
      plld = ((uint32_t)(tmpreg & RCC_CFGR_PLLDIV) >> RCC_CFGR_PLLDIV_Pos) + 1U;
 80035d2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80035d4:	0d9a      	lsrs	r2, r3, #22
 80035d6:	2303      	movs	r3, #3
 80035d8:	4013      	ands	r3, r2
 80035da:	3301      	adds	r3, #1
 80035dc:	627b      	str	r3, [r7, #36]	; 0x24
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 80035de:	4b37      	ldr	r3, [pc, #220]	; (80036bc <HAL_RCC_GetSysClockFreq+0x138>)
 80035e0:	68da      	ldr	r2, [r3, #12]
 80035e2:	2380      	movs	r3, #128	; 0x80
 80035e4:	025b      	lsls	r3, r3, #9
 80035e6:	4013      	ands	r3, r2
 80035e8:	d01a      	beq.n	8003620 <HAL_RCC_GetSysClockFreq+0x9c>
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t)(((uint64_t)HSE_VALUE * (uint64_t)pllm) / (uint64_t)plld);
 80035ea:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80035ec:	61bb      	str	r3, [r7, #24]
 80035ee:	2300      	movs	r3, #0
 80035f0:	61fb      	str	r3, [r7, #28]
 80035f2:	4a35      	ldr	r2, [pc, #212]	; (80036c8 <HAL_RCC_GetSysClockFreq+0x144>)
 80035f4:	2300      	movs	r3, #0
 80035f6:	69b8      	ldr	r0, [r7, #24]
 80035f8:	69f9      	ldr	r1, [r7, #28]
 80035fa:	f7fc fe6f 	bl	80002dc <__aeabi_lmul>
 80035fe:	0002      	movs	r2, r0
 8003600:	000b      	movs	r3, r1
 8003602:	0010      	movs	r0, r2
 8003604:	0019      	movs	r1, r3
 8003606:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003608:	613b      	str	r3, [r7, #16]
 800360a:	2300      	movs	r3, #0
 800360c:	617b      	str	r3, [r7, #20]
 800360e:	693a      	ldr	r2, [r7, #16]
 8003610:	697b      	ldr	r3, [r7, #20]
 8003612:	f7fc fe43 	bl	800029c <__aeabi_uldivmod>
 8003616:	0002      	movs	r2, r0
 8003618:	000b      	movs	r3, r1
 800361a:	0013      	movs	r3, r2
 800361c:	637b      	str	r3, [r7, #52]	; 0x34
 800361e:	e037      	b.n	8003690 <HAL_RCC_GetSysClockFreq+0x10c>
      }
      else
      {
        if ((RCC->CR & RCC_CR_HSIDIVF) != 0U)
 8003620:	4b26      	ldr	r3, [pc, #152]	; (80036bc <HAL_RCC_GetSysClockFreq+0x138>)
 8003622:	681b      	ldr	r3, [r3, #0]
 8003624:	2210      	movs	r2, #16
 8003626:	4013      	ands	r3, r2
 8003628:	d01a      	beq.n	8003660 <HAL_RCC_GetSysClockFreq+0xdc>
        {
          pllvco = (uint32_t)((((uint64_t)(HSI_VALUE >> 2)) * (uint64_t)pllm) / (uint64_t)plld);
 800362a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800362c:	60bb      	str	r3, [r7, #8]
 800362e:	2300      	movs	r3, #0
 8003630:	60fb      	str	r3, [r7, #12]
 8003632:	4a23      	ldr	r2, [pc, #140]	; (80036c0 <HAL_RCC_GetSysClockFreq+0x13c>)
 8003634:	2300      	movs	r3, #0
 8003636:	68b8      	ldr	r0, [r7, #8]
 8003638:	68f9      	ldr	r1, [r7, #12]
 800363a:	f7fc fe4f 	bl	80002dc <__aeabi_lmul>
 800363e:	0002      	movs	r2, r0
 8003640:	000b      	movs	r3, r1
 8003642:	0010      	movs	r0, r2
 8003644:	0019      	movs	r1, r3
 8003646:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003648:	603b      	str	r3, [r7, #0]
 800364a:	2300      	movs	r3, #0
 800364c:	607b      	str	r3, [r7, #4]
 800364e:	683a      	ldr	r2, [r7, #0]
 8003650:	687b      	ldr	r3, [r7, #4]
 8003652:	f7fc fe23 	bl	800029c <__aeabi_uldivmod>
 8003656:	0002      	movs	r2, r0
 8003658:	000b      	movs	r3, r1
 800365a:	0013      	movs	r3, r2
 800365c:	637b      	str	r3, [r7, #52]	; 0x34
 800365e:	e017      	b.n	8003690 <HAL_RCC_GetSysClockFreq+0x10c>
        }
        else
        {
         pllvco = (uint32_t)(((uint64_t)HSI_VALUE * (uint64_t)pllm) / (uint64_t)plld);
 8003660:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003662:	0018      	movs	r0, r3
 8003664:	2300      	movs	r3, #0
 8003666:	0019      	movs	r1, r3
 8003668:	4a16      	ldr	r2, [pc, #88]	; (80036c4 <HAL_RCC_GetSysClockFreq+0x140>)
 800366a:	2300      	movs	r3, #0
 800366c:	f7fc fe36 	bl	80002dc <__aeabi_lmul>
 8003670:	0002      	movs	r2, r0
 8003672:	000b      	movs	r3, r1
 8003674:	0010      	movs	r0, r2
 8003676:	0019      	movs	r1, r3
 8003678:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800367a:	001c      	movs	r4, r3
 800367c:	2300      	movs	r3, #0
 800367e:	001d      	movs	r5, r3
 8003680:	0022      	movs	r2, r4
 8003682:	002b      	movs	r3, r5
 8003684:	f7fc fe0a 	bl	800029c <__aeabi_uldivmod>
 8003688:	0002      	movs	r2, r0
 800368a:	000b      	movs	r3, r1
 800368c:	0013      	movs	r3, r2
 800368e:	637b      	str	r3, [r7, #52]	; 0x34
        }
      }
      sysclockfreq = pllvco;
 8003690:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8003692:	633b      	str	r3, [r7, #48]	; 0x30
      break;
 8003694:	e00d      	b.n	80036b2 <HAL_RCC_GetSysClockFreq+0x12e>
    }
    case RCC_SYSCLKSOURCE_STATUS_MSI:  /* MSI used as system clock source */
    default: /* MSI used as system clock */
    {
      msiclkrange = (RCC->ICSCR & RCC_ICSCR_MSIRANGE ) >> RCC_ICSCR_MSIRANGE_Pos;
 8003696:	4b09      	ldr	r3, [pc, #36]	; (80036bc <HAL_RCC_GetSysClockFreq+0x138>)
 8003698:	685b      	ldr	r3, [r3, #4]
 800369a:	0b5b      	lsrs	r3, r3, #13
 800369c:	2207      	movs	r2, #7
 800369e:	4013      	ands	r3, r2
 80036a0:	623b      	str	r3, [r7, #32]
      sysclockfreq = (32768U * (1UL << (msiclkrange + 1U)));
 80036a2:	6a3b      	ldr	r3, [r7, #32]
 80036a4:	3301      	adds	r3, #1
 80036a6:	2280      	movs	r2, #128	; 0x80
 80036a8:	0212      	lsls	r2, r2, #8
 80036aa:	409a      	lsls	r2, r3
 80036ac:	0013      	movs	r3, r2
 80036ae:	633b      	str	r3, [r7, #48]	; 0x30
      break;
 80036b0:	46c0      	nop			; (mov r8, r8)
    }
  }
  return sysclockfreq;
 80036b2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
}
 80036b4:	0018      	movs	r0, r3
 80036b6:	46bd      	mov	sp, r7
 80036b8:	b00e      	add	sp, #56	; 0x38
 80036ba:	bdb0      	pop	{r4, r5, r7, pc}
 80036bc:	40021000 	.word	0x40021000
 80036c0:	003d0900 	.word	0x003d0900
 80036c4:	00f42400 	.word	0x00f42400
 80036c8:	007a1200 	.word	0x007a1200
 80036cc:	08003790 	.word	0x08003790

080036d0 <memset>:
 80036d0:	0003      	movs	r3, r0
 80036d2:	1882      	adds	r2, r0, r2
 80036d4:	4293      	cmp	r3, r2
 80036d6:	d100      	bne.n	80036da <memset+0xa>
 80036d8:	4770      	bx	lr
 80036da:	7019      	strb	r1, [r3, #0]
 80036dc:	3301      	adds	r3, #1
 80036de:	e7f9      	b.n	80036d4 <memset+0x4>

080036e0 <__libc_init_array>:
 80036e0:	b570      	push	{r4, r5, r6, lr}
 80036e2:	2600      	movs	r6, #0
 80036e4:	4c0c      	ldr	r4, [pc, #48]	; (8003718 <__libc_init_array+0x38>)
 80036e6:	4d0d      	ldr	r5, [pc, #52]	; (800371c <__libc_init_array+0x3c>)
 80036e8:	1b64      	subs	r4, r4, r5
 80036ea:	10a4      	asrs	r4, r4, #2
 80036ec:	42a6      	cmp	r6, r4
 80036ee:	d109      	bne.n	8003704 <__libc_init_array+0x24>
 80036f0:	2600      	movs	r6, #0
 80036f2:	f000 f819 	bl	8003728 <_init>
 80036f6:	4c0a      	ldr	r4, [pc, #40]	; (8003720 <__libc_init_array+0x40>)
 80036f8:	4d0a      	ldr	r5, [pc, #40]	; (8003724 <__libc_init_array+0x44>)
 80036fa:	1b64      	subs	r4, r4, r5
 80036fc:	10a4      	asrs	r4, r4, #2
 80036fe:	42a6      	cmp	r6, r4
 8003700:	d105      	bne.n	800370e <__libc_init_array+0x2e>
 8003702:	bd70      	pop	{r4, r5, r6, pc}
 8003704:	00b3      	lsls	r3, r6, #2
 8003706:	58eb      	ldr	r3, [r5, r3]
 8003708:	4798      	blx	r3
 800370a:	3601      	adds	r6, #1
 800370c:	e7ee      	b.n	80036ec <__libc_init_array+0xc>
 800370e:	00b3      	lsls	r3, r6, #2
 8003710:	58eb      	ldr	r3, [r5, r3]
 8003712:	4798      	blx	r3
 8003714:	3601      	adds	r6, #1
 8003716:	e7f2      	b.n	80036fe <__libc_init_array+0x1e>
 8003718:	080037a4 	.word	0x080037a4
 800371c:	080037a4 	.word	0x080037a4
 8003720:	080037a8 	.word	0x080037a8
 8003724:	080037a4 	.word	0x080037a4

08003728 <_init>:
 8003728:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800372a:	46c0      	nop			; (mov r8, r8)
 800372c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800372e:	bc08      	pop	{r3}
 8003730:	469e      	mov	lr, r3
 8003732:	4770      	bx	lr

08003734 <_fini>:
 8003734:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003736:	46c0      	nop			; (mov r8, r8)
 8003738:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800373a:	bc08      	pop	{r3}
 800373c:	469e      	mov	lr, r3
 800373e:	4770      	bx	lr
